---
layout: post
title: "Getting started writing Chef cookbooks the Berkshelf Way"
date: 2013-03-24 09:27
comments: true
categories: chef
---
Jamie Winsor hasn't yet updated his [guide to authoring cookbooks the Berkshelf way](http://vialstudios.com/guide-authoring-cookbooks.html)
to match [recent changes related to Vagrant 1.1](https://github.com/RiotGames/berkshelf/issues/416) and [Chef 11](http://www.opscode.com/blog/2013/03/11/chef-11-server-up-and-running/)
This post is an attempt to update these instructions, walking through his
and Sean O'Meara's example app - [MyFace](https://github.com/reset/myface-cookbook).
For more information on [Berkshelf](http://berkshelf.com/), check out his recent
[talk](https://my.adobeconnect.com/_a295153/p59b87of2dp/?launcher=false&fcsContent=true&pbMode=normal)
and [slides](http://www.slideshare.net/resetexistence/the-berkshelf-way)
from the March 14, 2013 Bay Area Chef meetup.

Getting Started
===============
* Install Ruby 1.9.x via [rvm](http://misheska.com/blog/2013/02/24/using-rbenv-to-manage-multiple-versions-of-ruby/) or [rbenv](http://misheska.com/blog/2013/02/24/using-rbenv-to-manage-multiple-versions-of-ruby/)

* [Install VirtualBox 4.2.x (or higher)](http://virtualbox.org)

* [Install Vagrant 1.1.x](http://vagrantup.com)

* Install the Berkshelf Vagrant Plugin (1.0.3 or higher)

```
$ vagrant plugin install berkshelf-vagrant
Installing the 'berkshelf-vagrant' plugin. This can take a few minutes...
Installed the plugin 'berkshelf-vagrant (1.0.6)'!
```

* Install Berkshelf

```
$ gem install berkshelf
```

Create the MyFace Application Cookbook
======================================
Key to the Berkshelf way is the use of the Application Cookbook Pattern.  An
application cookbook contains the list of recipes needed to build your
application or service.  As an example, this blog post will walk you through
the creation of an example service - MyFace - the next killer social web app.

First create a new cookbook for the MyFace application using the
`berks cookbook` command:

    $ berks cookbook myface
          create  myface/files/default
          create  myface/templates/default
          create  myface/attributes
          create  myface/definitions
          create  myface/libraries
          create  myface/providers
          create  myface/recipes
          create  myface/resources
          create  myface/recipes/default.rb
          create  myface/metadata.rb
          create  myface/LICENSE
          create  myface/README.md
          create  myface/Berksfile
          create  myface/chefignore
          create  myface/.gitignore
             run  git init from "./myface"
          create  myface/Gemfile
          create  myface/Vagrantfile
    Using myface (0.1.0) at path: '/Users/misheska/myface'

Run `bundle install` in the newly created cookbook directory to install the
necessary Gem dependencies:

    $ cd myface
    $ bundle install

Prepare a virtual machine for testing
=====================================
It's a good idea to develop your cookbook incrementally, testing 
in short iterations.  Berkshelf integrates with Vagrant to deploy
your cookbook changes to a virtual machine for testing.  

Edit the Vagrantfile generated by the `berks cookbook` command to use
a VirtualBox template that has Chef 11 installed.  (By default Berkshelf points
at an image with Chef 10).  Your Vagrantfile should look like this:

{% codeblock myface/Vagrantfile lang:ruby %}
Vagrant.configure("2") do |config|
  config.vm.hostname = "myface-berkshelf"
  config.vm.box = "opcode_centos-6.3_chef-11.2.0"
  config.vm.box_url = "https://opscode-vm.s3.amazonaws.com/vagrant/opscode_centos-6.3_chef-11.2.0.box"
  config.vm.network :private_network, ip: "33.33.33.10"
  config.ssh.max_tries = 40
  config.ssh.timeout = 120

  config.vm.provision :chef_solo do |chef|
    chef.json = {
      :mysql => {
        :server_root_password => 'rootpass',
        :server_debian_password => 'debpass',
        :server_repl_password => 'replpass'
      }
    }
    chef.run_list = [
      "recipe[myface::defult]"
    ]
  end
end
{% endcodeblock %}

Run `vagrant up` to start up the virtual machine and to test the stub MyFace
cookbook you just created:

    $ vagrant up
    Bringing machine 'default' up with 'virtualbox' provider...
    [default] Box 'opscode_centos-6.3_chef-11.2.0' was not found. Fetching box from specified URL for
    the provider 'virtualbox'. Note that if the URL does not have
    a box for this provider, you should interrupt Vagrant now and add
    the box yourself. Otherwise Vagrant will attempt to download the
    full box prior to discovering this error.
    Downloading with Vagrant::Downloaders::HTTP...
    Downloading box: https://opscode-vm.s3.amazonaws.com/vagrant/opscode_centos-6.3_chef-11.2.0.box
    Extracting box...
    Cleaning up downloaded box...
    Successfully added box 'opscode_centos-6.3_chef-11.2.0' with provider 'virtualbox'!
    [default] Importing base box 'opscode_centos-6.3_chef-11.2.0'...
    [default] Matching MAC address for NAT networking...
    [default] Setting the name of the VM...
    [default] Clearing any previously set forwarded ports...
    [Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130324-17246-9dysyo'
    [Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
    [default] Creating shared folders metadata...
    [default] Clearing any previously set network interfaces...
    [default] Preparing network interfaces based on configuration...
    [default] Forwarding ports...
    [default] -- 22 => 2222 (adapter 1)
    [default] Booting VM...
    [default] Waiting for VM to boot. This can take a few minutes.
    [default] VM booted and ready for use!
    [default] Setting hostname...
    [default] Configuring and enabling network interfaces...
    [default] Mounting shared folders...
    [default] -- /vagrant
    [default] -- /tmp/vagrant-chef-1/chef-solo-1/cookbooks
    [default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
    Generating chef JSON and uploading...
    Running chef-solo...
    [2013-03-24T21:21:56+00:00] INFO: *** Chef 11.2.0 ***
    [2013-03-24T21:21:57+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
    [2013-03-24T21:21:57+00:00] INFO: Run List is [recipe[myface::default]]
    [2013-03-24T21:21:57+00:00] INFO: Run List expands to [myface::default]
    [2013-03-24T21:21:57+00:00] INFO: Starting Chef Run for myface-berkshelf
    [2013-03-24T21:21:57+00:00] INFO: Running start handlers
    [2013-03-24T21:21:57+00:00] INFO: Start handlers complete.
    [2013-03-24T21:21:57+00:00] INFO: Chef Run complete in 0.0256688 seconds
    [2013-03-24T21:21:57+00:00] INFO: Running report handlers
    [2013-03-24T21:21:57+00:00] INFO: Report handlers complete

If all goes well, you should see `Chef Run complete` with no errors.

If you would ever like to delete your test virtual machine and start over,
you can destroy your test virtual machine with the `vagrant destroy` command:

    $ vagrant destroy
    Are you sure you want to destroy the 'default' VM? [y/N] y
    [default] Forcing shutdown of VM...
    [default] Destroying VM and associated drives...
    [Berkshelf] Cleaning Vagrant's berkshelf

Run `vagrant up` to recreate the test virtual machine.

__NOTE:__ If you just ran `vagrant destroy` make sure you run `vagrant up`
before proceeding to the next section.

Iteration #1: Create an application user
========================================
For our first short iteration, let's create a `myface` user under which
we'll run our application.  One best practice is to avoid running
applications as root and create a user/group under which the application runs
instead who has just enough rights that the app needs.

Edit `myface/recipes/default.rb` defining a new [Group Resource](http://docs.opscode.com/resource_group.html)
and [User Resource](http://docs.opscode.com/resource_user.html) for myface,
so it looks like the following:

{% codeblock myface/recipes/default.rb lang:ruby %}
#
# Cookbook Name:: myface
# Recipe:: default
#
# Copyright (C) 2013 YOUR_NAME
#
# All rights reserved - Do Not Redistribute
#

group "myface"

user "myface" do
  group "myface"
  system true
  shell "/bin/bash"
end
{% endcodeblock %}

Save `receipes/default.rb` and re-run `vagrant provision` to create the
myface user on your test virtual machine:

    $ vagrant provision
    [Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130324-19145-nf292v'
    [Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
    [default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
    Generating chef JSON and uploading...
    Running chef-solo...
    [2013-03-25T11:40:10+00:00] INFO: *** Chef 11.2.0 ***
    [2013-03-25T11:40:10+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
    [2013-03-25T11:40:10+00:00] INFO: Run List is [recipe[myface::default]]
    [2013-03-25T11:40:10+00:00] INFO: Run List expands to [myface::default]
    [2013-03-25T11:40:10+00:00] INFO: Starting Chef Run for myface-berkshelf
    [2013-03-25T11:40:10+00:00] INFO: Running start handlers
    [2013-03-25T11:40:10+00:00] INFO: Start handlers complete.
    [2013-03-25T11:40:10+00:00] INFO: Processing group[myface] action create (myface::default line 10)
    [2013-03-25T11:40:10+00:00] INFO: group[myface] created
    [2013-03-25T11:40:10+00:00] INFO: Processing user[myface] action create (myface::default line 12)
    [2013-03-25T11:40:10+00:00] INFO: user[myface] created
    [2013-03-25T11:40:10+00:00] INFO: Chef Run complete in 0.085739737 seconds
    [2013-03-25T11:40:10+00:00] INFO: Running report handlers
    [2013-03-25T11:40:10+00:00] INFO: Report handlers complete

Again, you should expect to see the Chef run complete with no errors.  Notice
that it also creates `group[myface]` and `user[myface]`.

Verify that Chef actually created the myface user on our test virtual
machine by running the following:

    $ vagrant ssh -c "getent passwd myface"
    myface:x:497:1001::/home/myface:/bin/bash

We use `vagrant ssh -c` to run a command on our test virtual machine.  The
`getent` command can be used to query all user databases.  In this
case we're looking for `myface`, and it exists!

Because we are using well-defined resources that are completely
[idempotent](http://en.wikipedia.org/wiki/Idempotence), you should notice
that if you run `vagrant provision` again, the Chef run executes more quickly
and it does not try to re-create the user/group it already created.

    $ vagrant provision
    [Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130324-19145-nf292v'
    [Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
    [default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
    Generating chef JSON and uploading...
    Running chef-solo...
    [2013-03-25T11:50:03+00:00] INFO: *** Chef 11.2.0 ***
    [2013-03-25T11:50:04+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
    [2013-03-25T11:50:04+00:00] INFO: Run List is [recipe[myface::default]]
    [2013-03-25T11:50:04+00:00] INFO: Run List expands to [myface::default]
    [2013-03-25T11:50:04+00:00] INFO: Starting Chef Run for myface-berkshelf
    [2013-03-25T11:50:04+00:00] INFO: Running start handlers
    [2013-03-25T11:50:04+00:00] INFO: Start handlers complete.
    [2013-03-25T11:50:04+00:00] INFO: Processing group[myface] action create (myface::default line 10)
    [2013-03-25T11:50:04+00:00] INFO: Processing user[myface] action create (myface::default line 12)
    [2013-03-25T11:50:04+00:00] INFO: Chef Run complete in 0.028070063 seconds
    [2013-03-25T11:50:04+00:00] INFO: Running report handlers
    [2013-03-25T11:50:04+00:00] INFO: Report handlers complete

Iteration #2 - Refactor the user name and group name into attributes
====================================================================
What if at some point you wanted to change the name of the `myface` user/group
you just created to something else?  At the moment, you would need to edit
`myface/recipes/default.rb` in three places.

Let's create a new file called `myface/attributes/default.rb` which
initializes Chef [attributes](http://docs.opscode.com/essentials_cookbook_attribute_files.html)
defining the user name and group name under which our application will run so
that you [don't repeat yoursef](http://en.wikipedia.org/wiki/Don't_repeat_yourself).

{% codeblock myface/attributes/default.rb lang:ruby %}
default[:myface][:user] = "myface"
default[:myface][:group] = "myface"
{% endcodeblock %}

In Chef, attributes are a hash of a hash used to override the default settings
on a node.  The first hash is the cookbook name - in our
case we've named our cookbook `:myface`. The second hash is the name of
our attribute - in this case, we're defining two new attributes: `:user` and
`:group`.

`default` implies the use of the [node object](http://docs.opscode.com/chef/essentials_node_object.html)
`node.default` and is a Chef attribute file shorthand.  The following are
equivalent definitions to the ones above:

    node.default[:myface][:user] = "myface"
    noce.default[:myface][:user] = "myface"

Also note the use of symbols instead of strings.  It is [strongly recommended
that you use symbols instead of strings](http://www.robertsosinski.com/2009/01/11/the-difference-between-ruby-symbols-and-strings/)
for hash indexes. 

Now that you've created your attribute definitions, edit
`myface/recipes/default.rb` and replace all references to the "myface" user name
with `node[:myface][:user]` and all references to the "myface" group with
`node[:myface][:group]`.  `myface/recipes/default.rb` should now look like
this:

{% codeblock myface/attributes/default.rb lang:ruby %}
#
# Cookbook Name:: myface
# Recipe:: default
#
# Copyright (C) 2013 YOUR_NAME
#
# All rights reserved - Do Not Redistribute
#

group node[:myface][:group]

user node[:myface][:user] do
  group node[:myface][:group]
  system true
  shell "/bin/bash"
end
{% endcodeblock %}

Re-provision with `vagrant provision` to see how the refactor went:

    $ vagrant provision
    [Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130325-20447-1lz0yjk'
    [Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
    [default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
    Generating chef JSON and uploading...
    Running chef-solo...
    [2013-03-25T12:56:23+00:00] INFO: *** Chef 11.2.0 ***
    [2013-03-25T12:56:23+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
    [2013-03-25T12:56:23+00:00] INFO: Run List is [recipe[myface::default]]
    [2013-03-25T12:56:23+00:00] INFO: Run List expands to [myface::default]
    [2013-03-25T12:56:23+00:00] INFO: Starting Chef Run for myface-berkshelf
    [2013-03-25T12:56:23+00:00] INFO: Running start handlers
    [2013-03-25T12:56:23+00:00] INFO: Start handlers complete.
    [2013-03-25T12:56:23+00:00] INFO: Processing group[myface] action create (myface::default line 10)
    [2013-03-25T12:56:23+00:00] INFO: Processing user[myface] action create (myface::default line 12)
    [2013-03-25T12:56:23+00:00] INFO: Chef Run complete in 0.031634516 seconds
    [2013-03-25T12:56:23+00:00] INFO: Running report handlers
    [2013-03-25T12:56:23+00:00] INFO: Report handlers complete

As long as you didn't create any syntax errors in your refactoring file edits,
there should be no net change on the virtual machine test node (as you've only
just moved some strings into a node attribute).  Running  `getent` on the
test virtual machine should also produce the same result:

    $ vagrant ssh -c "getent passwd myface"
    myface:x:497:1001::/home/myface:/bin/bash

Iteration #3 - Install the Apache2 Web Server
============================================
Our hot new social networking application, myface, is a web app, so we need
to install a web server.  Let's install the Apache2 web server.

Modify `myface/recipes/default.rb` to include the apache2 cookbook's default
recipe:

    include_recipe "apache2"

The resultant `myface/recipes/default.rb` file should look like so:

{% codeblock myface/recipes/default.rb lang:ruby %}
#
# Cookbook Name:: myface
# Recipe:: default
#
# Copyright (C) 2013 YOUR_NAME
#
# All rights reserved - Do Not Redistribute
#

group node[:myface][:group]

user node[:myface][:user] do
  group node[:myface][:group]
  system true
  shell "/bin/bash"
end

include_recipe "apache2"
{% endcodeblock %}

Since you are loading Apache2 from another cookbook, you need to configure the
dependency in your metadata.  Edit `myface/metadata.rb` and add the `apache2`
dependency at the bottom:

    depends "apache2", "~> 1.6.0"

This tells Chef that the myface cookbook depends on the apache2 cookbook.
We've also specified a version constraint using the optimistic operator
`~>` to tell our Chef that we want the latest version of the apache2 cookbook
that is greater than 1.6.0 but *not* 1.7.0 or higher.

It is recommended that Chef cookbooks follow a
[Semantic Versioning](http://semver.org/) scheme.  So if you write your
cookbook to use the latest apache2 1.6.x cookbook, if the apache2 cookbook is
ever bumped to a 1.7.x version (or 2.x), it has some public API functionality
that has at least been deprecated.  So you'll want to review the changes and
test before automatically using an apache2 cookbook version 1.7.x or higher.
However, automatic use of any new 1.6.x is perfectly fine, because no
only backwards-compatible bug fixes has been introduced.  Semantic Versioning
guarantees there are no changes in the public APIs.

Your `myface/metadata.rb` should look like this:

{% codeblock myface/attributes/default.rb lang:ruby %}
name             "myface"
maintainer       "YOUR_NAME"
maintainer_email "YOUR_EMAIL"
license          "All rights reserved"
description      "Installs/Configures myface"
long_description IO.read(File.join(File.dirname(__FILE__), 'README.md'))
version          "0.1.0"

depends "apache2", "~> 1.6.0"
{% endcodeblock %}

Now when you re-run `vagrant provision` it will install apache2 on your
test virtual machine:

    $ vagrant provision
    [Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/vagrant/berkshelf-20130326-30730-144pxxn'
    [Berkshelf] Using myface (0.1.0) at path: '/Users/misheska/git/myface'
    [Berkshelf] Installing apache2 (1.6.0) from site: 'http://cookbooks.opscode.com/api/v1/cookbooks'
    [default] Running provisioner: VagrantPlugins::Chef::Provisioner::ChefSolo...
    Generating chef JSON and uploading...
    Running chef-solo...
    [2013-03-27T06:29:43+00:00] INFO: *** Chef 11.2.0 ***
    [2013-03-27T06:29:43+00:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
    [2013-03-27T06:29:43+00:00] INFO: Run List is [recipe[myface::default]]
    [2013-03-27T06:29:43+00:00] INFO: Run List expands to [myface::default]
    [2013-03-27T06:29:43+00:00] INFO: Starting Chef Run for myface-berkshelf
    [2013-03-27T06:29:43+00:00] INFO: Running start handlers
    [2013-03-27T06:29:43+00:00] INFO: Start handlers complete.
    [2013-03-27T06:29:44+00:00] WARN: Cloning resource attributes for service[apache2] from prior resource (CHEF-3694)
    [2013-03-27T06:29:44+00:00] WARN: Previous service[apache2]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/apache2/recipes/default.rb:24:in `from_file'
    [2013-03-27T06:29:44+00:00] WARN: Current  service[apache2]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/apache2/recipes/default.rb:221:in `from_file'
    [2013-03-27T06:29:44+00:00] INFO: Processing group[myface] action create (myface::default line 10)
    [2013-03-27T06:29:44+00:00] INFO: Processing user[myface] action create (myface::default line 12)
    [2013-03-27T06:29:44+00:00] INFO: Processing package[apache2] action install (apache2::default line 20)
    [2013-03-27T06:30:26+00:00] INFO: package[apache2] installing httpd-2.2.15-26.el6.centos from base repository
    [2013-03-27T06:30:35+00:00] INFO: Processing service[apache2] action enable (apache2::default line 24)
    [2013-03-27T06:30:35+00:00] INFO: service[apache2] enabled
    [2013-03-27T06:30:35+00:00] INFO: Processing directory[/var/log/httpd] action create (apache2::default line 47)
    [2013-03-27T06:30:35+00:00] INFO: directory[/var/log/httpd] mode changed to 755
    [2013-03-27T06:30:35+00:00] INFO: Processing package[perl] action install (apache2::default line 51)
    [2013-03-27T06:30:35+00:00] INFO: Processing cookbook_file[/usr/local/bin/apache2_module_conf_generate.pl] action create (apache2::default line 53)
    [2013-03-27T06:30:36+00:00] INFO: cookbook_file[/usr/local/bin/apache2_module_conf_generate.pl] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: cookbook_file[/usr/local/bin/apache2_module_conf_generate.pl] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: cookbook_file[/usr/local/bin/apache2_module_conf_generate.pl] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: cookbook_file[/usr/local/bin/apache2_module_conf_generate.pl] created file /usr/local/bin/apache2_module_conf_generate.pl
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/etc/httpd/sites-available] action create (apache2::default line 61)
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-available] created directory /etc/httpd/sites-available
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-available] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-available] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-available] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/etc/httpd/sites-enabled] action create (apache2::default line 61)
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-enabled] created directory /etc/httpd/sites-enabled
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-enabled] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-enabled] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/sites-enabled] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/etc/httpd/mods-available] action create (apache2::default line 61)
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-available] created directory /etc/httpd/mods-available
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-available] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-available] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-available] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/etc/httpd/mods-enabled] action create (apache2::default line 61)
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-enabled] created directory /etc/httpd/mods-enabled
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-enabled] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-enabled] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/mods-enabled] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: Processing execute[generate-module-list] action nothing (apache2::default line 68)
    [2013-03-27T06:30:36+00:00] INFO: Processing template[/usr/sbin/a2ensite] action create (apache2::default line 74)
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2ensite] updated content
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2ensite] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2ensite] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2ensite] mode changed to 700
    [2013-03-27T06:30:36+00:00] INFO: Processing template[/usr/sbin/a2dissite] action create (apache2::default line 74)
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dissite] updated content
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dissite] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dissite] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dissite] mode changed to 700
    [2013-03-27T06:30:36+00:00] INFO: Processing template[/usr/sbin/a2enmod] action create (apache2::default line 74)
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2enmod] updated content
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2enmod] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2enmod] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2enmod] mode changed to 700
    [2013-03-27T06:30:36+00:00] INFO: Processing template[/usr/sbin/a2dismod] action create (apache2::default line 74)
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dismod] updated content
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dismod] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dismod] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/usr/sbin/a2dismod] mode changed to 700
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/proxy_ajp.conf] action delete (apache2::default line 84)
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/auth_pam.conf] action delete (apache2::default line 84)
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/authz_ldap.conf] action delete (apache2::default line 84)
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/webalizer.conf] action delete (apache2::default line 84)
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/ssl.conf] action delete (apache2::default line 84)
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/welcome.conf] action delete (apache2::default line 84)
    [2013-03-27T06:30:36+00:00] INFO: file[/etc/httpd/conf.d/welcome.conf] deleted file at /etc/httpd/conf.d/welcome.conf
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/conf.d/README] action delete (apache2::default line 91)
    [2013-03-27T06:30:36+00:00] INFO: file[/etc/httpd/conf.d/README] deleted file at /etc/httpd/conf.d/README
    [2013-03-27T06:30:36+00:00] INFO: Processing template[/etc/httpd/mods-available/deflate.conf] action create (apache2::mod_deflate line 21)
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/httpd/mods-available/deflate.conf] updated content
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/httpd/mods-available/deflate.conf] mode changed to 644
    [2013-03-27T06:30:36+00:00] INFO: Processing file[/etc/httpd/mods-available/deflate.load] action create (apache2::mod_deflate line 31)
    [2013-03-27T06:30:36+00:00] INFO: entered create
    [2013-03-27T06:30:36+00:00] INFO: file[/etc/httpd/mods-available/deflate.load] mode changed to 644
    [2013-03-27T06:30:36+00:00] INFO: file[/etc/httpd/mods-available/deflate.load] created file /etc/httpd/mods-available/deflate.load
    [2013-03-27T06:30:36+00:00] INFO: Processing execute[a2enmod deflate] action run (apache2::mod_deflate line 38)
    [2013-03-27T06:30:36+00:00] INFO: execute[a2enmod deflate] ran successfully
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/etc/httpd/ssl] action create (apache2::default line 131)
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/ssl] created directory /etc/httpd/ssl
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/ssl] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/ssl] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/etc/httpd/ssl] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/etc/httpd/conf.d] action create (apache2::default line 137)
    [2013-03-27T06:30:36+00:00] INFO: Processing directory[/var/cache/httpd] action create (apache2::default line 143)
    [2013-03-27T06:30:36+00:00] INFO: directory[/var/cache/httpd] created directory /var/cache/httpd
    [2013-03-27T06:30:36+00:00] INFO: directory[/var/cache/httpd] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/var/cache/httpd] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: directory[/var/cache/httpd] mode changed to 755
    [2013-03-27T06:30:36+00:00] INFO: Processing template[/etc/sysconfig/httpd] action create (apache2::default line 150)
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/sysconfig/httpd] backed up to /var/chef/backup/etc/sysconfig/httpd.chef-20130327063036
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/sysconfig/httpd] updated content
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/sysconfig/httpd] owner changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/sysconfig/httpd] group changed to 0
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/sysconfig/httpd] mode changed to 644
    [2013-03-27T06:30:36+00:00] INFO: template[/etc/sysconfig/httpd] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:36+00:00] INFO: Processing template[apache2.conf] action create (apache2::default line 159)
    [2013-03-27T06:30:37+00:00] INFO: template[apache2.conf] backed up to /var/chef/backup/etc/httpd/conf/httpd.conf.chef-20130327063037
    [2013-03-27T06:30:37+00:00] INFO: template[apache2.conf] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[apache2.conf] owner changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[apache2.conf] group changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[apache2.conf] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[apache2.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing template[apache2-conf-security] action create (apache2::default line 175)
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-security] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-security] owner changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-security] group changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-security] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-security] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing template[apache2-conf-charset] action create (apache2::default line 185)
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-charset] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-charset] owner changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-charset] group changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-charset] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[apache2-conf-charset] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing template[/etc/httpd/ports.conf] action create (apache2::default line 195)
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/ports.conf] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/ports.conf] owner changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/ports.conf] group changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/ports.conf] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/ports.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing template[/etc/httpd/sites-available/default] action create (apache2::default line 204)
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/sites-available/default] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/sites-available/default] owner changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/sites-available/default] group changed to 0
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/sites-available/default] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/sites-available/default] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing template[/etc/httpd/mods-available/status.conf] action create (apache2::mod_status line 21)
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/mods-available/status.conf] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/mods-available/status.conf] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/mods-available/status.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing file[/etc/httpd/mods-available/status.load] action create (apache2::mod_status line 31)
    [2013-03-27T06:30:37+00:00] INFO: entered create
    [2013-03-27T06:30:37+00:00] INFO: file[/etc/httpd/mods-available/status.load] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: file[/etc/httpd/mods-available/status.load] created file /etc/httpd/mods-available/status.load
    [2013-03-27T06:30:37+00:00] INFO: Processing execute[a2enmod status] action run (apache2::mod_status line 38)
    [2013-03-27T06:30:37+00:00] INFO: execute[a2enmod status] ran successfully
    [2013-03-27T06:30:37+00:00] INFO: execute[a2enmod status] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing template[/etc/httpd/mods-available/alias.conf] action create (apache2::mod_alias line 21)
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/mods-available/alias.conf] updated content
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/mods-available/alias.conf] mode changed to 644
    [2013-03-27T06:30:37+00:00] INFO: template[/etc/httpd/mods-available/alias.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:37+00:00] INFO: Processing file[/etc/httpd/mods-available/alias.load] action create (apache2::mod_alias line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/alias.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/alias.load] created file /etc/httpd/mods-available/alias.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod alias] action run (apache2::mod_alias line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod alias] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod alias] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing file[/etc/httpd/mods-available/auth_basic.load] action create (apache2::mod_auth_basic line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/auth_basic.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/auth_basic.load] created file /etc/httpd/mods-available/auth_basic.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod auth_basic] action run (apache2::mod_auth_basic line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod auth_basic] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod auth_basic] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing file[/etc/httpd/mods-available/authn_file.load] action create (apache2::mod_authn_file line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authn_file.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authn_file.load] created file /etc/httpd/mods-available/authn_file.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod authn_file] action run (apache2::mod_authn_file line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authn_file] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authn_file] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing file[/etc/httpd/mods-available/authz_default.load] action create (apache2::mod_authz_default line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_default.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_default.load] created file /etc/httpd/mods-available/authz_default.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod authz_default] action run (apache2::mod_authz_default line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_default] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_default] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing file[/etc/httpd/mods-available/authz_groupfile.load] action create (apache2::mod_authz_groupfile line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_groupfile.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_groupfile.load] created file /etc/httpd/mods-available/authz_groupfile.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod authz_groupfile] action run (apache2::mod_authz_groupfile line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_groupfile] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_groupfile] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing file[/etc/httpd/mods-available/authz_host.load] action create (apache2::mod_authz_host line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_host.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_host.load] created file /etc/httpd/mods-available/authz_host.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod authz_host] action run (apache2::mod_authz_host line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_host] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_host] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing file[/etc/httpd/mods-available/authz_user.load] action create (apache2::mod_authz_user line 31)
    [2013-03-27T06:30:38+00:00] INFO: entered create
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_user.load] mode changed to 644
    [2013-03-27T06:30:38+00:00] INFO: file[/etc/httpd/mods-available/authz_user.load] created file /etc/httpd/mods-available/authz_user.load
    [2013-03-27T06:30:38+00:00] INFO: Processing execute[a2enmod authz_user] action run (apache2::mod_authz_user line 38)
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_user] ran successfully
    [2013-03-27T06:30:38+00:00] INFO: execute[a2enmod authz_user] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:38+00:00] INFO: Processing template[/etc/httpd/mods-available/autoindex.conf] action create (apache2::mod_autoindex line 21)
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/autoindex.conf] updated content
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/autoindex.conf] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/autoindex.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing file[/etc/httpd/mods-available/autoindex.load] action create (apache2::mod_autoindex line 31)
    [2013-03-27T06:30:39+00:00] INFO: entered create
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/autoindex.load] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/autoindex.load] created file /etc/httpd/mods-available/autoindex.load
    [2013-03-27T06:30:39+00:00] INFO: Processing execute[a2enmod autoindex] action run (apache2::mod_autoindex line 38)
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod autoindex] ran successfully
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod autoindex] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing template[/etc/httpd/mods-available/dir.conf] action create (apache2::mod_dir line 21)
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/dir.conf] updated content
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/dir.conf] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/dir.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing file[/etc/httpd/mods-available/dir.load] action create (apache2::mod_dir line 31)
    [2013-03-27T06:30:39+00:00] INFO: entered create
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/dir.load] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/dir.load] created file /etc/httpd/mods-available/dir.load
    [2013-03-27T06:30:39+00:00] INFO: Processing execute[a2enmod dir] action run (apache2::mod_dir line 38)
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod dir] ran successfully
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod dir] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing file[/etc/httpd/mods-available/env.load] action create (apache2::mod_env line 31)
    [2013-03-27T06:30:39+00:00] INFO: entered create
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/env.load] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/env.load] created file /etc/httpd/mods-available/env.load
    [2013-03-27T06:30:39+00:00] INFO: Processing execute[a2enmod env] action run (apache2::mod_env line 38)
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod env] ran successfully
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod env] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing template[/etc/httpd/mods-available/mime.conf] action create (apache2::mod_mime line 21)
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/mime.conf] updated content
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/mime.conf] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/mime.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing file[/etc/httpd/mods-available/mime.load] action create (apache2::mod_mime line 31)
    [2013-03-27T06:30:39+00:00] INFO: entered create
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/mime.load] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: file[/etc/httpd/mods-available/mime.load] created file /etc/httpd/mods-available/mime.load
    [2013-03-27T06:30:39+00:00] INFO: Processing execute[a2enmod mime] action run (apache2::mod_mime line 38)
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod mime] ran successfully
    [2013-03-27T06:30:39+00:00] INFO: execute[a2enmod mime] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing template[/etc/httpd/mods-available/negotiation.conf] action create (apache2::mod_negotiation line 21)
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/negotiation.conf] updated content
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/negotiation.conf] mode changed to 644
    [2013-03-27T06:30:39+00:00] INFO: template[/etc/httpd/mods-available/negotiation.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:39+00:00] INFO: Processing file[/etc/httpd/mods-available/negotiation.load] action create (apache2::mod_negotiation line 31)
    [2013-03-27T06:30:40+00:00] INFO: entered create
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/negotiation.load] mode changed to 644
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/negotiation.load] created file /etc/httpd/mods-available/negotiation.load
    [2013-03-27T06:30:40+00:00] INFO: Processing execute[a2enmod negotiation] action run (apache2::mod_negotiation line 38)
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod negotiation] ran successfully
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod negotiation] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:40+00:00] INFO: Processing template[/etc/httpd/mods-available/setenvif.conf] action create (apache2::mod_setenvif line 21)
    [2013-03-27T06:30:40+00:00] INFO: template[/etc/httpd/mods-available/setenvif.conf] updated content
    [2013-03-27T06:30:40+00:00] INFO: template[/etc/httpd/mods-available/setenvif.conf] mode changed to 644
    [2013-03-27T06:30:40+00:00] INFO: template[/etc/httpd/mods-available/setenvif.conf] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:40+00:00] INFO: Processing file[/etc/httpd/mods-available/setenvif.load] action create (apache2::mod_setenvif line 31)
    [2013-03-27T06:30:40+00:00] INFO: entered create
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/setenvif.load] mode changed to 644
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/setenvif.load] created file /etc/httpd/mods-available/setenvif.load
    [2013-03-27T06:30:40+00:00] INFO: Processing execute[a2enmod setenvif] action run (apache2::mod_setenvif line 38)
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod setenvif] ran successfully
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod setenvif] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:40+00:00] INFO: Processing file[/etc/httpd/mods-available/log_config.load] action create (apache2::mod_log_config line 31)
    [2013-03-27T06:30:40+00:00] INFO: entered create
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/log_config.load] mode changed to 644
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/log_config.load] created file /etc/httpd/mods-available/log_config.load
    [2013-03-27T06:30:40+00:00] INFO: Processing execute[a2enmod log_config] action run (apache2::mod_log_config line 38)
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod log_config] ran successfully
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod log_config] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:40+00:00] INFO: Processing file[/etc/httpd/mods-available/logio.load] action create (apache2::mod_logio line 31)
    [2013-03-27T06:30:40+00:00] INFO: entered create
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/logio.load] mode changed to 644
    [2013-03-27T06:30:40+00:00] INFO: file[/etc/httpd/mods-available/logio.load] created file /etc/httpd/mods-available/logio.load
    [2013-03-27T06:30:40+00:00] INFO: Processing execute[a2enmod logio] action run (apache2::mod_logio line 38)
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod logio] ran successfully
    [2013-03-27T06:30:40+00:00] INFO: execute[a2enmod logio] not queuing delayed action restart on service[apache2] (delayed), as it's already been queued
    [2013-03-27T06:30:40+00:00] INFO: Processing execute[a2dissite default] action run (apache2::default line 34)
    [2013-03-27T06:30:40+00:00] INFO: Processing service[apache2] action start (apache2::default line 221)
    [2013-03-27T06:30:40+00:00] INFO: service[apache2] started
    [2013-03-27T06:30:40+00:00] INFO: template[/etc/httpd/mods-available/deflate.conf] sending restart action to service[apache2] (delayed)
    [2013-03-27T06:30:40+00:00] INFO: Processing service[apache2] action restart (apache2::default line 221)
    [2013-03-27T06:30:41+00:00] INFO: service[apache2] restarted
    [2013-03-27T06:30:41+00:00] INFO: execute[a2enmod deflate] sending restart action to service[apache2] (delayed)
    [2013-03-27T06:30:41+00:00] INFO: Processing service[apache2] action restart (apache2::default line 24)
    [2013-03-27T06:30:43+00:00] INFO: service[apache2] restarted
    [2013-03-27T06:30:43+00:00] INFO: Chef Run complete in 59.309557362 seconds
    [2013-03-27T06:30:43+00:00] INFO: Running report handlers
    [2013-03-27T06:30:43+00:00] INFO: Report handlers complete

You can also verify that Apache was installed correctly by visiting the
host-only private network address for the virtual machine that Berkshelf
created in your Vagrantfile:

<http://33.33.33.10>

While you will get a `404 Not Found` error because we haven't added any
content to our web site yet, the important part is that `Apache Server
at 33.33.33.10 Port 80` sent the response:

![Apache Server Response](/images/apachewebserver.png)

Wait a second, though.  You never downloaded the `apache2` cookbook!
That's the magic of the Berkshelf Vagrant plugin you installed earlier.  The
Berkshelf Vagrant plugin will make sure that any changes you make to your
cookbook and all of your cookbook's dependencies are made available to your
virtual machine.  Berkshelf automatically loads all your cookbook dependencies
much like Bundler automatically loads all your gem dependencies.

Where does the Berkshelf put the cookbooks it downloads?  You can find them
in `~/.berkshelf/cookbooks`

    Users/misheska/.berkshelf/cookbooks
    └── apache2-1.6.0
        ├── attributes
        ├── definitions
        ├── files
        │   └── default
        │       └── tests
        │           └── minitest
        │               └── support
        ├── recipes
        └── templates
            └── default
                └── mods

`~/.berkshelf` is just the default location where Berkshelf stores data
on your local disk.  This location can be altered by setting the environment
variable `BERKSHELF_PATH`.

More to come!
=============
This is just part one of a multi-part series.  So far you've gone through
severl short iteration loops as you evolve the myface cookbook.  In subsequent
installments, we'll go through more iterations, resulting in the final
end product: <https://github.com/reset/myface-cookbook>
