<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mischa Taylor's Coding Blog]]></title>
  <link href="http://misheska.com/atom.xml" rel="self"/>
  <link href="http://misheska.com/"/>
  <updated>2014-11-11T03:50:33-08:00</updated>
  <id>http://misheska.com/</id>
  <author>
    <name><![CDATA[Mischa Taylor]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Survey of Test Kitchen providers]]></title>
    <link href="http://misheska.com/blog/2014/09/21/survey-of-test-kitchen-providers/"/>
    <updated>2014-09-21T20:52:00-07:00</updated>
    <id>http://misheska.com/blog/2014/09/21/survey-of-test-kitchen-providers</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#introduction">Introduction</a></li>
  <li><a href="#desktop-virtualization">Desktop Virtualization</a>    <ul>
      <li><a href="#kitchen-vagrant-with-vmware-fusionvmware-workstation-desktop-virtualization">kitchen-vagrant with VMware Fusion/VMware Workstation desktop virtualization</a></li>
    </ul>
  </li>
  <li><a href="#test-kitchen-cloud-drivers">Test Kitchen Cloud Drivers</a>    <ul>
      <li><a href="#digitalocean-cloud-provider-kitchen-digitalocean">DigitalOcean Cloud Provider (kitchen-digitalocean)</a>        <ul>
          <li><a href="#kitchen-digitalocean-setup">kitchen-digitalocean Setup</a></li>
          <li><a href="#kitchen-digitalocean-kitchenyml-example">kitchen-digitalocean .kitchen.yml Example</a></li>
        </ul>
      </li>
      <li><a href="#amazon-ec2-cloud-provider-kitchen-ec2">Amazon EC2 Cloud Provider (kitchen-ec2)</a>        <ul>
          <li><a href="#kitchen-ec2-setup">kitchen-ec2 Setup</a></li>
          <li><a href="#kitchen-ec2-kitchenyml-example">kitchen-ec2 .kitchen.yml Example</a></li>
        </ul>
      </li>
      <li><a href="#google-compute-engine-cloud-provider-kitchen-gce">Google Compute Engine Cloud Provider (kitchen-gce)</a>        <ul>
          <li><a href="#kitchen-gce-setup">kitchen-gce Setup</a></li>
          <li><a href="#kitchen-gce-kitchenyml-example">kitchen-gce .kitchen.yml Example</a></li>
        </ul>
      </li>
      <li><a href="#rackspace-cloud-provider-kitchen-rackspace">Rackspace Cloud Provider (kitchen-rackspace)</a>        <ul>
          <li><a href="#kitchen-rackspace-setup">kitchen-rackspace Setup</a></li>
          <li><a href="#kitchen-rackspace-kitchenyml-example">kitchen-rackspace .kitchen.yml Example</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#linux-container-drivers">Linux Container Drivers</a>    <ul>
      <li><a href="#docker-driver-kitchen-docker">Docker Driver (kitchen-docker)</a>        <ul>
          <li><a href="#chef-training-environment-setup">Chef Training Environment Setup</a></li>
          <li><a href="#kitchen-docker-setup">kitchen-docker Setup</a></li>
          <li><a href="#kitchen-docker-kitchenyml-example">kitchen-docker .kitchen.yml Example</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#physical-machine-drivers">Physical Machine Drivers</a>    <ul>
      <li><a href="#driver-for-any-server-with-an-ssh-address-kitchen-ssh">Driver for any server with an SSH address (kitchen-ssh)</a>        <ul>
          <li><a href="#kitchen-ssh-kitchenyml-example">kitchen-ssh .kitchen.yml Example</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><em>Update November 10, 2014</em>
* <em>Update for DigitalOcean 0.8x provider using API V2</em></p>

<h1 id="introduction">Introduction</h1>

<p>Test Kitchen supports a wide variety of different providers via Test Kitchen drivers besides the default <code>kitchen-vagrant</code> driver.  In this post, we’ll cover several popular alternatives.</p>

<p>Test Kitchen drivers are gem libraries available for download from http://rubygems.org .  Use the <code>kitchen driver discover</code> command to list all the Test Kitchen gems currently available.  Here is a list of all the Test Kitchen drivers as of this writing:</p>

<pre><code>$ kitchen driver discover
    Gem Name                          Latest Stable Release
    kitchen-all                       0.2.0
    kitchen-ansible                   0.0.1
    kitchen-azure                     0.1.0
    kitchen-bluebox                   0.6.2
    kitchen-cabinet                   3.0.0
    kitchen-cloudstack                0.10.0
    kitchen-digital_ocean             0.3.0
    kitchen-digitalocean              0.8.0
    kitchen-docker                    1.5.0
    kitchen-docker-api                0.4.0
    kitchen-driver-vagrant_provision  1.0.0
    kitchen-ec2                       0.8.0
    kitchen-fifo                      0.1.0
    kitchen-fog                       0.7.3
    kitchen-gce                       0.2.0
    kitchen-goiardi                   0.1.1
    kitchen-inspector                 1.3.0
    kitchen-joyent                    0.1.1
    kitchen-libvirtlxc                0.4.0
    kitchen-local                     0.0.1
    kitchen-lxc                       0.0.1
    kitchen-openstack                 1.6.0
    kitchen-puppet                    0.0.13
    kitchen-rackspace                 0.12.0
    kitchen-rightscale                0.1.0
    kitchen-salt                      0.0.19
    kitchen-scribe                    0.3.1
    kitchen-sharedtests               0.2.0
    kitchen-ssh                       0.0.4
    kitchen-sshgzip                   0.0.3
    kitchen-sync                      1.0.1
    kitchen-vagrant                   0.15.0
    kitchen-vagrant_sandbox           0.1.1
    kitchen-vagrant_winrm             0.1.1
    kitchen-zcloudjp                  0.5.0
    test-kitchen-provisioners         0.1
</code></pre>

<p>By default, Test Kitchen defaults to using the <code>kitchen-vagrant</code> driver.  When you run the <code>kitchen init</code> command to add Test Kitchen support to a project, you can add the <code>--driver=&lt;gem_name&gt;</code> option to have Test Kitchen generate configuration files using another driver of your choice.  For example, the following command would use the <code>kitchen-azure</code> driver:</p>

<pre><code>kitchen init --create-gemfile --driver=kitchen-azure
</code></pre>

<p>As shown in the following diagram the environments supported by Chef-releated drivers fall into four different categories: desktop virtual machines, public/private cloud providers, Linux containers and physical machines.  We’ll cover representative examples from each category in this appendix.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.004.png" title="[Test Kitchen driver architecture]" /></p>

<h1 id="desktop-virtualization">Desktop Virtualization</h1>

<p>Test Kitchen uses the <code>kitchen-vagrant</code> driver to work with desktop virtualization providers, like VirtualBox, VMWare Fusion, VMWare Workstation and Hyper-V.  Since the <code>kitchen-vagrant</code> driver is just a shim on top of Vagrant for Test Kitchen, any provider that Vagrant supports should be supported by the <code>kitchen-vagrant</code> driver.</p>

<p>It is important to clarify that as of this writing, the <code>kitchen-vagrant</code> driver assumes that the virtualization provider is installed locally on the host machine.  As shown in the following diagram, using the <code>kitchen-vagrant</code> driver, Test Kitchen creates a sandbox environment virtual machine locally on your host:</p>

<ol>
  <li>Test Kitchen invokes the <code>kitchen-vagrant</code> driver to create a virtual machine instance.</li>
  <li>In the case of the <code>kitchen-vagrant</code> driver, Vagrant itself contains all the logic to work with different types of virtualization software.  The <code>kitchen-vagrant</code> is just a small shim to allow Test Kitchen to use Vagrant to work with virtual machine instances.  In this example, Vagrant uses the VirtualBox API to spin up a virtual machine instance for our sandbox environment.</li>
  <li>Once the sandbox environment is running, Test Kitchen links the instance for communication.</li>
</ol>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.001.png" title="[Sandbox environment creation with kitchen-vagrant]" /></p>

<p>Test Kitchen treats the data center versions of VMware, like vCenter/vSphere/ESXi as a cloud provider.  To Test Kitchen the data center editions are handled as if there were cloud instances, as vCenter/vSphere/ESXi merely a private cloud on a local LAN or corporate WAN instead of a public cloud over the Internet.  As of this writing, the <code>kitchen-openstack</code> and <code>kitchen-ssh</code> drivers support vSphere data center virtualization with Test Kitchen.</p>

<h2 id="kitchen-vagrant-with-vmware-fusionvmware-workstation-desktop-virtualization">kitchen-vagrant with VMware Fusion/VMware Workstation desktop virtualization</h2>

<p>You can use VMware desktop virutalization with <code>kitchen-varant</code> instead of Oracle VM VirtualBox.  It requires the purchase of the Vagrant VMware plugin from https://www.vagrantup.com/vmware which, at the time of this writing, costs USD $79 per seat.  The VMware plugin works with VMware Workstation 9 and 10 on Windows/Linux and VMware Fusion 5, 6 and 7 on Mac OS X.</p>

<p>On Mac OS X/Linux, you may have multiple virtualization solutions installed alongside VMware.  On these platforms, you can use both VMware and VirtualBox baseboxes at the same time, for example, if you have enough system resources.  On Windows, you must make a choice, as only one virtualization solution can be installed at a time.</p>

<p>Once you have purchased the VMware plugin and received a license file, you can install the Vagrant plugin and license with the following:</p>

<p>For VMware Workstation (on Windows/Linux):</p>

<pre><code>$ vagrant plugin install vagrant-vmware-workstation
$ vagrant plugin license vagrant-vmware-workstation license.lic
</code></pre>

<p>For VMware Fusion (on Mac OS X):</p>

<pre><code>$ vagrant plugin install vagrant-vmware-fusion
$ vagrant plugin license vagrant-vmware-fusion license.lic
</code></pre>

<p>After you install the VMware plugin and license file and want to use VMware, you’ll need to get VMware baseboxes.  Currently VirtualBox and VMware baseboxes are not interchangeable.</p>

<p>Once the VMware plugin and license has been installed, you’ll need to change your <code>.kitchen.yml</code> files slightly for VMware.  You can specify the VMware provider name in the <code>platforms</code> section of your <code>.kitchen.yml</code> file.</p>

<p>Modify the <code>.kitchen.yml</code> file, adding a <code>provider:</code> line to the <code>platforms</code> <code>driver</code> section.  If you are using VMware Workstation, use the <code>vmware_workstation</code> provider name.  For VMware Fusion, the provider name should be <code>vmware_fusion</code>.  You’ll also need to change the <code>box_url</code> line to point at a box file which has Vmware Tools installed, as box files are not guest tool agnostic.  For this book, box files have been provided for both VMware and VirtualBox via VagrantCloud, so you can use the same <code>box_url</code> line.</p>

<p>Synced folders work the same as with VirtualBox.  Just add a <code>synced_folders:</code> block to the <code>driver:</code> section with a list of folders to map between the guest and the host.  Each entry in the list contains an array with two parameters.  The first parameter is a path to the directory on the host machine.  If the path is relative, it is relative to the <code>.kitchen.yml</code> file.  The second parameter is an absolute path specifying where the folder is shared on the guest machine.  The <code>.kitchen.yml</code> examples that follow map the current working directory on the host to the directory <code>/vagrant</code> on the guest, like so:</p>

<pre><code>...
       synced_folders:
       - [".", "/vagrant"]
...
</code></pre>

<p>VMware Workstation <code>.kitchen.yml</code> example:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>vmware/workstation/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">vagrant</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="ss">provider</span><span class="p">:</span> <span class="n">vmware_workstation</span>
</span><span class="line">      <span class="ss">box</span><span class="p">:</span> <span class="n">learningchef</span><span class="o">/</span><span class="n">centos65</span>
</span><span class="line">      <span class="n">box_url</span><span class="p">:</span> <span class="n">learningchef</span><span class="o">/</span><span class="n">centos65</span>
</span><span class="line">      <span class="n">synced_folders</span><span class="p">:</span>
</span><span class="line">        <span class="o">-</span> <span class="o">[</span><span class="s2">&quot;.&quot;</span><span class="p">,</span> <span class="s2">&quot;/vagrant&quot;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>VMware Fusion <code>.kitchen.yml</code> example:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>vmware/fusion/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">vagrant</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="ss">provider</span><span class="p">:</span> <span class="n">vmware_fusion</span>
</span><span class="line">      <span class="ss">box</span><span class="p">:</span> <span class="n">learningchef</span><span class="o">/</span><span class="n">centos65</span>
</span><span class="line">      <span class="n">box_url</span><span class="p">:</span> <span class="n">learningchef</span><span class="o">/</span><span class="n">centos65</span>
</span><span class="line">      <span class="n">synced_folders</span><span class="p">:</span>
</span><span class="line">        <span class="o">-</span> <span class="o">[</span><span class="s2">&quot;.&quot;</span><span class="p">,</span> <span class="s2">&quot;/vagrant&quot;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Once you modify the <code>.kitchen.yml</code> file appropriately the <code>kitchen create</code>, <code>kitchen converge</code>, etc. commands will use VMware instead of VirtualBox:</p>

<pre><code>$ kitchen create default-centos65
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-centos65&gt;...
       Bringing machine 'default' up with 'vmware_fusion' provider...
       ==&gt; default: Cloning VMware VM: 'learningchef/centos65'. This can take some time...
       ==&gt; default: Checking if box 'learningchef/centos65' is up to date...
       ==&gt; default: Verifying vmnet devices are healthy...
       ==&gt; default: Preparing network adapters...
       ==&gt; default: Fixed port collision for 22 =&gt; 2222. Now on port 2200.
       ==&gt; default: Starting the VMware VM...
       ==&gt; default: Waiting for the VM to finish booting...
       ==&gt; default: The machine is booted and ready!
       ==&gt; default: Forwarding ports...
           default: -- 22 =&gt; 2200
       ==&gt; default: Setting hostname...
       ==&gt; default: Configuring network adapters within the VM...
       ==&gt; default: Waiting for HGFS kernel module to load...
       ==&gt; default: Enabling and configuring shared folders...
           default: -- /Users/misheska/github/learningchef/learningchef-code/chapa01/vmware/fusion: /vagrant
       ==&gt; default: Machine not provisioning because `--no-provision` is specified.
       Vagrant instance &lt;default-centos65&gt; created.
       Finished creating &lt;default-centos65&gt; (0m39.42s).
-----&gt; Kitchen is finished. (0m39.66s)
</code></pre>

<h1 id="test-kitchen-cloud-drivers">Test Kitchen Cloud Drivers</h1>

<p>The following diagram shows how the Test Kitchen cloud drivers create a sandbox environment.  The main difference between using a cloud provider and desktop virtualization is that the sandbox environment lives remotely on another machine.  Test Kitchen communicates with the sandbox environment remotely over SSH, usually on the Internet.</p>

<ol>
  <li>Test Kitchen invokes the specified driver (like <code>kitchen-ec2</code>) to create an instance on the cloud provider.  Cloud provider drivers communicate with the cloud provider using the appropiate cloud API.  Normally this is an HTTP API. </li>
  <li>The cloud provider spins up an instance to serve as our sandbox environment.</li>
  <li>Once the sandbox environment is running, Test Kitchen links the instance to your local development workstation for remote communication, usually over SSH.  All Test Kitchen commands work with the remote sandbox environment transparently.  As far as the user experience with Test Kitchen goes, it behaves as if it were a local desktop virtualization environment.</li>
</ol>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.005.png" title="[Test Kitchen driver architecture]" /></p>

<p>As of this writing, all of the Test Kitchen Cloud drivers do not support synchronized folders.  All <code>kitchen</code> commands automatically copy your project files to the sandbox environment, as Test Kitchen uses <code>scp</code> to transfer files from your host to the remote cloud instance.  For any other file sharing beyond what is supported by Test Kitchen, you’ll need to use a Cloud Provider-specific mechanism, such as Amazon Elastic Block Store (EBS).</p>

<h2 id="digitalocean-cloud-provider-kitchen-digitalocean">DigitalOcean Cloud Provider (kitchen-digitalocean)</h2>

<h3 id="kitchen-digitalocean-setup">kitchen-digitalocean Setup</h3>

<p>Go to https://cloud.digitalocean.com/settings/applications and click on the
<code>Generate new token</code> button to generate a new Personal Access Token using
the v2.0 API.  Make sure you check the optional <code>Write</code> scope when you
generate the token.  Write scope is necessary for the DigitalOcean Cloud
provider to function correctly.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/digitalocean_generate_token.png" title="[DigitalOcean New Personal Access Token]" /></p>

<p>Record the personal access token that is generated when you click on the
<code>Generate new token</code> button, as shown below:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/digitalocean_generate_new_token.png" title="[DigitalOcean Generate new token]" /></p>

<p>Add the new access token to your <code>~/.bash_profile</code> (or equivalent for your
platform) as the environment variable <code>DIGITALOCEAN_ACCESS_TOKEN</code>:</p>

<pre><code>export DIGITALOCEAN_ACCESS_TOKEN="1234567890abcdefg"
</code></pre>

<p>Collect SSH public keys from the computers which need access to your sandbox
instances.  Visit https://cloud.digitalocean.com/ssh_keys and add the SSH keys.
Once you’ve added the SSH keys(s), use the following <code>curl</code> command to get the
DigitalOcean SSH Key IDs:</p>

<pre><code>curl -X GET https://api.digitalocean.com/v2/account/keys -H "Authorization: Bearer $DIGITALOCEAN_ACCESS_TOKEN"
</code></pre>

<p>Record the <code>id</code> field for each of your SSH keys.  Add the list of SSH Key IDs
to the environment variable <code>DIGITALOCEAN_SSH_KEY_IDS</code>.  If you have more than
one SSH key ID, separate each ID by a comma followed by a space:</p>

<pre><code>export DIGITALOCEAN_SSH_KEY_IDS="12345, 67890"
</code></pre>

<p>Run the following <code>kitchen init</code> command to add Test Kitchen support to your project using the <code>kitchen-digitalocean</code> driver:</p>

<pre><code>$ kitchen init --driver=kitchen-digitalocean --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
</code></pre>

<p>Run <code>bundle install</code> to download and install any required gems.</p>

<h3 id="kitchen-digitalocean-kitchenyml-example">kitchen-digitalocean .kitchen.yml Example</h3>

<p>As of the 0.8.x release, the <code>kitchen-digitalocean</code> provider automatically 
looks for the access token in the <code>DIGITAL_ACCESS_TOKEN</code> and the ssh key
IDs in the <code>DIGITALOCEAN_SSH_KEY_IDS</code> environment variables.  Since the
access token and SSH key IDs are sensitive information, it is recommended
that you store them in these environment variables instead of directly in
your <code>.kitchen.yml</code> file.  This way, you can share your <code>.kitchen.yml</code> file
with others and store it in source control.</p>

<p>Here is an example <code>kitchen.yml</code> which spins up a CentOS 6.5 sandbox environment, loading the Access Token and SSH Key IDs from corresponding environment variables:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>digitalocean/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">digitalocean</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_zero</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="nb">name</span><span class="p">:</span> <span class="n">digitalocean</span>
</span><span class="line">      <span class="ss">image</span><span class="p">:</span> <span class="n">centos</span><span class="o">-</span><span class="mi">6</span><span class="o">-</span><span class="mi">5</span><span class="o">-</span><span class="n">x64</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Before running any Test Kitchen commands, make sure you set the appropriate environment variables as shown below (with your own values):</p>

<p>Linux and Mac OS X:</p>

<pre><code>export DIGITALOCEAN_ACCESS_TOKEN="01234567890abcdef01234567890abcdef"
export DIGITALOCEAN_SSH_KEY_IDS="12345, 67890"
</code></pre>

<p>Windows Command Prompt:</p>

<pre><code>set DIGITALOCEAN_ACCESS_TOKEN=01234567890abcdef01234567890abcdef
set DIGITALOCEAN_SSH_KEY_IDS=12345, 67890
</code></pre>

<p>Windows Powershell:</p>

<pre><code>$env:DIGITALOCEAN_ACCESS_TOKEN="01234567890abcdef01234567890abcdef"
$env:DIGITALOCEAN_SSH_KEY_IDS="12345, 67890"
</code></pre>

<p>The output of <code>kitchen list</code> should resemble the following:</p>

<pre><code>$ kitchen list
Instance           Driver        Provisioner  Last Action
default-centos65  Digitalocean   ChefZero     &lt;Not Created&gt;
</code></pre>

<p>Spin up the node with <code>kitchen create</code>:</p>

<pre><code>$ kitchen create default-centos65
-----&gt; Starting Kitchen (v1.2.1)
-----&gt; Creating &lt;default-centos65&gt;...
       Digital Ocean instance &lt;3129943&gt; created.
       Waiting for 192.241.185.202:22...
       Waiting for 192.241.185.202:22...
       (ssh ready)

       Finished creating &lt;default-centos65&gt; (2m42.61s).
-----&gt; Kitchen is finished. (2m42.82s)
</code></pre>

<p>Install Chef Client with <code>kitchen setup</code>.  <code>kitchen destroy</code> will delete your Droplet on DigitalOcean.</p>

<p>Refer to the <code>kitchen-digitalocean</code> driver documentation on https://github.com/test-kitchen/kitchen-digitalocean for more information on additional <code>.kitchen.yml</code> settings.</p>

<h2 id="amazon-ec2-cloud-provider-kitchen-ec2">Amazon EC2 Cloud Provider (kitchen-ec2)</h2>

<h3 id="kitchen-ec2-setup">kitchen-ec2 Setup</h3>

<p>In order to use the <code>kitchen-ec2</code> driver, you’ll need to create an Amazon Web Services access key, consisting of an <em>access key ID</em> plus a <em>secret key</em>.  You can create a new <em>access key ID</em> and <em>secret _key</em> or retrieve an existing <em>access key ID</em> on the AWS Identity and Access Management (IAM) page in the AWS Console.  Once you select a user, click on the <em>Manage Access Keys</em> button as shown in the following:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/ec2_manage_access_keys.png" title="[AWS IAM Manage Access Keys]" /></p>

<p>In the Manage Access keys dialog, click on the <em>Create Access Key</em> button to create a new <em>access key ID</em> and <em>secret _key</em> as shown in the following:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/ec2_create_access_key.png" title="[AWS Create Access Key]" /></p>

<p>AWS will create your access key.  You can click on <em>Show User Security Credentials</em> to display the <em>Access Key ID</em> and the <em>Secret Access Key</em>.  Make note of these as this is the last time they will be displayed.  You can also click on the <em>Download Credentials</em> button to download the credentials as a <code>.csv</code> file as shown below:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/ec2_download_security_credentials.png" title="[Download Credentials]" /></p>

<p>Create a key pair to use when you launch instances.  Amazon EC2 supports a variety of ways to work with key pairs.  Refer to http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html for more information.</p>

<p>Make sure you set permissions on the key pair.  Otherwise <code>kitchen-ec2</code> will ignore the file.</p>

<pre><code>chmod 400 my-key-pair.pem
</code></pre>

<p>Run the following <code>kitchen init</code> command to add Test Kitchen support to your project using the <code>kitchen-ec2</code> driver:</p>

<pre><code>$ kitchen init --driver=kitchen-ec2 --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
</code></pre>

<p>Run <code>bundle install</code> to fetch any new gems.</p>

<h3 id="kitchen-ec2-kitchenyml-example">kitchen-ec2 .kitchen.yml Example</h3>

<p>Since the Access Key ID, Secret Access Key and SSH Key ID contain sensitive information, it is recommended that you store these values in environment variables instead of directly in your <code>.kitchen.yml</code> file.  This way, you can share your <code>.kitchen.yml</code> file with others and store it in source control.  You can use embedded Ruby templates in a <code>.kitchen.yml</code> file to load values from the environment.  Here is an example <code>kitchen.yml</code> which spins up a CentOS 6.5 sandbox environment, loading the Access Key ID, Secret Acces Key and SSH Key ID from corresponding environment variables:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ec2/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="n">require_chef_omnibus</span><span class="p">:</span> <span class="kp">true</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">ec2</span>
</span><span class="line">  <span class="n">aws_access_key_id</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;AWS_ACCESS_KEY_ID&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">aws_secret_access_key</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;AWS_SECRET_ACCESS_KEY&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">aws_ssh_key_id</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;AWS_SSH_KEY_ID&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">ssh_key</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;AWS_SSH_KEY&#39;]%&gt;&quot;</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="n">image_id</span><span class="p">:</span> <span class="n">ami</span><span class="o">-</span><span class="mi">8997</span><span class="n">afe0</span>
</span><span class="line">      <span class="ss">username</span><span class="p">:</span> <span class="n">root</span>
</span><span class="line">      <span class="ss">region</span><span class="p">:</span> <span class="n">us</span><span class="o">-</span><span class="n">east</span><span class="o">-</span><span class="mi">1</span>
</span><span class="line">      <span class="n">availability_zone</span><span class="p">:</span> <span class="n">us</span><span class="o">-</span><span class="n">east</span><span class="o">-</span><span class="mi">1</span><span class="n">c</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Before running any Test Kitchen commands, make sure you set the appropriate environment variables as shown below (with your own values):</p>

<p>Linux and Mac OS X:</p>

<pre><code>export AWS_ACCESS_KEY_ID="ABCDEFGHI123JKLMNOPQ"
export AWS_SECRET_ACCESS_KEY="abcdefghijklmnopqrstuvwyz"
export AWS_SSH_KEY_ID="keyid1234"
export AWS_SSH_KEY="$HOME/ec2/$AWS_SSH_KEY_ID.pem"
</code></pre>

<p>Windows Command Prompt:</p>

<pre><code>set AWS_ACCESS_KEY_ID=ABCDEFGHI123JKLMNOPQ
set AWS_SECRET_ACCESS_KEY=abcdefghijklmnopqrstuvwyz
set AWS_SSH_KEY_ID=keyid1234
set AWS_SSH_KEY=%USERPROFILE%/ec2/%AWS_SSH_KEY_ID%.pem
</code></pre>

<p>Windows Powershell:</p>

<pre><code>$env:AWS_ACCESS_KEY_ID="ABCDEFGHI123JKLMNOPQ"
$env:AWS_SECRET_ACCESS_KEY="abcdefghijklmnopqrstuvwyz"
$env:AWS_SSH_KEY_ID="keyid1234"
$env:AWS_SSH_KEY="$env:userprofile/ec2/$env:aws_ssh_key_id.pem"
</code></pre>

<p>The output of <code>kitchen list</code> should resemble the following:</p>

<pre><code>$ kitchen list
Instance           Driver  Provisioner  Last Action
default-centos65  Ec2     ChefSolo     &lt;Not Created&gt;
</code></pre>

<p>Spin up the node with <code>kitchen create</code>:</p>

<pre><code>$ kitchen create default-centos65
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-centos65&gt;...
       EC2 instance &lt;i-5b6f2b70&gt; created.
...........       (server ready)
       Waiting for ec2-54-197-34-184.compute-1.amazonaws.com:22...
       Waiting for ec2-54-197-34-184.compute-1.amazonaws.com:22...
       Waiting for ec2-54-197-34-184.compute-1.amazonaws.com:22...
       Waiting for ec2-54-197-34-184.compute-1.amazonaws.com:22...
       (ssh ready)\n
       Finished creating &lt;default-centos65&gt; (3m2.97s).
-----&gt; Kitchen is finished. (3m3.40s)
</code></pre>

<p>NOTE:</p>

<p>You may be prompted to opt in and accept the terms and subscribe to using the AWS Marketplace CentOS image the first time you spin up an image.  The <code>kitchen-ec2</code> driver will provide you with a link to the opt in URL.</p>

<p>NOTE:</p>

<p>You might not be able to create CentOS images in all availability zones.  The <code>kitchen-ec2</code> driver will advice you of your availability zone options if there is an issue with your availability zone choice.</p>

<p>Install Chef Client with <code>kitchen setup</code>.  <code>kitchen destroy</code> will delete your EC2 instance.</p>

<p>Refer to the <code>kitchen-ec2</code> driver documentation on https://github.com/test-kitchen/kitchen-ec2 for more information additional <code>.kitchen.yml</code> settings.</p>

<h2 id="google-compute-engine-cloud-provider-kitchen-gce">Google Compute Engine Cloud Provider (kitchen-gce)</h2>

<h3 id="kitchen-gce-setup">kitchen-gce Setup</h3>

<p>Create a Google Compute Engine project in the Google Developers Console at https://console.developers.google.com.  Create a Service Account Key by navigating to <em>APIs &amp; auth</em> &gt; <em>Credentials</em>.  Under OAuth start the process by clicking on the <em>CREATE NEW CLIENT ID</em> button as shown here:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/gce_create_new_client_id.png" title="[Create New Client ID]" /></p>

<p>On the <em>Create Client ID</em> dialog, choose <em>Service account</em> then click on <em>Create Client ID</em> as shown below.  This will generate a private key file along with a password.  Record this information, as it is the only time it will be displayed.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/gce_create_service_account.png" title="[Create Service Account]" /></p>

<p>Make note of the <em>Email address</em> field for the Service Account (not to be confused with the project owner’s Email Address at the top of the page) as shown in the following.  You’ll be recording this in the <code>google_client_email</code> field in the <code>.kitchen.yml</code>.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/gce_client_email.png" title="[Google Client Email]" /></p>

<p>If you do not already have an SSH key pair to login, create them using <code>ssh-keygen</code> or an equivalent tool.  Register the public key in the Google Developer Console.  The default file name for a public key is <code>$HOME/.ssh/id_rsa.pub</code>.  Navigate to <em>Compute</em> &gt; <em>Compute Engine</em> &gt; <em>Metadata</em> on the Google Developers Console.  Make sure the <em>SSH_keys</em> is selected in the panel on the right, then click on the <em>Add SSH key</em> button as shown in the following:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/gce_add_ssh_key.png" title="[Add SSH key to a GCE Project]" /></p>

<p>Copy the public key <code>id_rsa.pub</code> file contents to the clipboard and paste it into the <em>Enter entire key data</em> field.  Click on the <em>Done</em> button to save.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/gce_ssh_keys.png" title="[Register SSH Public Key]" /></p>

<p>Run the following <code>kitchen init</code> command to add Test Kitchen support to your project using the <code>kitchen-gce</code> driver:</p>

<pre><code>$ kitchen init --driver=kitchen-gce --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
</code></pre>

<p>Run <code>bundle install</code> to fetch any new gems.</p>

<h3 id="kitchen-gce-kitchenyml-example">kitchen-gce .kitchen.yml Example</h3>

<p>Since the project, client e-mail and key location are sensitive information and differ between users, it is recommended that you store them in environment variables instead of directly in your <code>.kitchen.yml</code> file.  This way, you can share your <code>.kitchen.yml</code> file with others and store it in source control.  You can use an embedded Ruby template in a <code>.kitchen.yml</code> file to load values from the environment.  Here is an example <code>kitchen.yml</code> which spins up a CentOS 6.5 sandbox environment, loading the project and client e-mail from corresponding environment variables:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>gce/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">gce</span>
</span><span class="line">  <span class="n">google_project</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;GOOGLE_PROJECT&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">google_client_email</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;GOOGLE_CLIENT_EMAIL&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">google_key_location</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;GOOGLE_KEY_LOCATION&#39;]%&gt;&quot;</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span> <span class="n">gce</span>
</span><span class="line">      <span class="ss">area</span><span class="p">:</span> <span class="n">us</span>
</span><span class="line">      <span class="n">image_name</span><span class="p">:</span> <span class="n">centos</span><span class="o">-</span><span class="mi">6</span><span class="o">-</span><span class="n">v20140619</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Before running any Test Kitchen commands, make sure you set the appropriate environment variables as shown below (with your own values):</p>

<p>Linux and Mac OS X:</p>

<pre><code>export GOOGLE_PROJECT="alpha-bravo-123"
export GOOGLE_CLIENT_EMAIL="123456789012@developer.gserviceaccount.com"
export GOOGLE_KEY_LOCATION="$HOME/gce/1234567890abcdef1234567890abcdef12345678-privatekey.p12"
</code></pre>

<p>Windows Command Prompt:</p>

<pre><code>set GOOGLE_PROJECT=alpha-bravo-123
set GOOGLE_CLIENT_EMAIL=123456789012@developer.gserviceaccount.com
set GOOGLE_KEY_LOCATION=%USERPROFILE%/gce/1234567890abcdef1234567890abcdef12345678-privatekey.p12
</code></pre>

<p>Windows Powershell:</p>

<pre><code>$env:GOOGLE_PROJECT="alpha-bravo-123"
$env:GOOGLE_CLIENT_EMAIL="123456789012@developer.gserviceaccount.com"
$env:GOOGLE_KEY_LOCATION="$env:userprofile/gce/1234567890abcdef1234567890abcdef12345678-privatekey.p12"
</code></pre>

<p>The output of <code>kitchen list</code> should resemble the following:</p>

<pre><code>$ kitchen list
Instance          Driver  Provisioner  Last Action
default-centos65  Gce     ChefSolo     &lt;Not Created&gt;
</code></pre>

<p>Spin up the node with <code>kitchen create</code>:</p>

<pre><code>$ kitchen create default-centos65
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-centos65&gt;...
       GCE instance &lt;default-centos65-31681aab-e6a2-494b-99cb-9b920a1f6284&gt; created.
..       (server ready)
       (ssh ready)
       Finished creating &lt;default-centos65&gt; (1m26.70s).
-----&gt; Kitchen is finished. (1m28.18s)
</code></pre>

<p>Install Chef Client with <code>kitchen setup</code>.  <code>kitchen destroy</code> will delete your Google Compute Engine instance.</p>

<p>Refer to the <code>kitchen-gce</code> driver documentation on https://github.com/anl/kitchen-gce for more information on additional <code>.kitchen.yml</code> settings.</p>

<h2 id="rackspace-cloud-provider-kitchen-rackspace">Rackspace Cloud Provider (kitchen-rackspace)</h2>

<h3 id="kitchen-rackspace-setup">kitchen-rackspace Setup</h3>

<p>Login to the Cloud Sites Control Panel at https://manage.rackspacecloud.com/pages/Login.jsp  Navigate to <em>Your Account</em> &gt; <em>API Access</em> to display your username and API key as shown in below:</p>

<p><img class="center" src="http://misheska.com/images/chapa01/rackspace_api_key_image.png" title="[Rackspace API Key]" /></p>

<p>Run the following <code>kitchen init</code> command to add Test Kitchen support to your project using the <code>kitchen-rackspace</code> driver:</p>

<pre><code>$ kitchen init --driver=kitchen-rackspace --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
</code></pre>

<p>Run <code>bundle install</code> to fetch any new gems.</p>

<h3 id="kitchen-rackspace-kitchenyml-example">kitchen-rackspace .kitchen.yml Example</h3>

<p>Since the username and API Key are sensitive information and differ between users, it is recommended that you store them in environment variables instead of directly in your <code>.kitchen.yml</code> file.  This way, you can share your <code>.kitchen.yml</code> file with others and store it in source control.  You can use an embedded Ruby template in a <code>.kitchen.yml</code> file to load values from the environment.  Here is an example <code>kitchen.yml</code> which spins up a CentOS 6.5 sandbox environment, loading the project and client e-mail from corresponding environment variables:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>rackspace/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="n">require_chef_omnibus</span><span class="p">:</span> <span class="kp">true</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">rackspace</span>
</span><span class="line">  <span class="n">rackspace_username</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;RACKSPACE_USERNAME&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">rackspace_api_key</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;RACKSPACE_API_KEY&#39;]%&gt;&quot;</span>
</span><span class="line">  <span class="n">public_key_path</span><span class="p">:</span> <span class="s2">&quot;&lt;%= ENV[&#39;RACKSPACE_PUBLIC_KEY_PATH&#39;]%&gt;&quot;</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span> <span class="n">rackspace</span>
</span><span class="line">      <span class="n">image_id</span><span class="p">:</span> <span class="s2">&quot;592c879e-f37d-43e6-8b54-8c2d97cf04d4&quot;</span>
</span><span class="line">      <span class="n">flavor_id</span><span class="p">:</span> <span class="s2">&quot;performance1-1&quot;</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Before running any Test Kitchen commands, make sure you set the appropriate environment variables as shown below (with your own values):</p>

<p>Linux and Mac OS X:</p>

<pre><code>export RACKSPACE_USERNAME="alice"
export RACKSPACE_API_KEY="abcdef0123456789abcdef0123456789"
export RACKSPACE_PUBLIC_KEY_PATH="$HOME/.ssh/id_rsa.pub"
</code></pre>

<p>Windows Command Prompt:</p>

<pre><code>set RACKSPACE_USERNAME=alice
set RACKSPACE_API_KEY=abcdef0123456789abcdef0123456789
set RACKSPACE_PUBLIC_KEY_PATH=%USERPROFILE%/.ssh/id_rsa.pub
</code></pre>

<p>Windows Powershell:</p>

<pre><code>$env:RACKSPACE_USERNAME="alice"
$env:RACKSPACE_API_KEY="abcdef0123456789abcdef0123456789"
$env:RACKSPACE_PUBLIC_KEY_PATH="$env:userprofile/.ssh/id_rsa.pub"
</code></pre>

<p>The output of <code>kitchen list</code> should resemble the following:</p>

<pre><code>$ kitchen list
Instance          Driver     Provisioner  Last Action
default-centos65  Rackspace  ChefSolo     &lt;Not Created&gt;
</code></pre>

<p>Spin up the node with <code>kitchen create</code>:</p>

<pre><code>$ kitchen create default-centos65
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-centos65&gt;...
       Rackspace instance &lt;9456b985-3a41-4cb0-a3cf-7536cc15baf7&gt; created.
       (server ready)
       (ssh ready)
       Finished creating &lt;default-centos65&gt; (0m37.77s).
-----&gt; Kitchen is finished. (0m38.21s)
</code></pre>

<p>Then install Chef Client with <code>kitchen setup</code>.  <code>kitchen destroy</code> will delete your instance on Rackspace.</p>

<p>Refer to the <code>kitchen-gce</code> driver documentation on https://github.com/test-kitchen/kitchen-rackspace for more information on additional <code>.kitchen.yml</code> settings.</p>

<h1 id="linux-container-drivers">Linux Container Drivers</h1>

<p>You can regard Linux Containers to be a resource-efficient variant of virtual machines.  As shown in the following diagram, Linux containers trade off the flexibility (and overhead) of being able to run different operating systems in each guest to minimize resource consumption by having all guests share the same OS kernel.  In container environments, guests are isolated like virtual machines using more lightweight mechanisms around Linux processes instead.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.006.png" title="[Virtual Machines versus Containers]" /></p>

<p>This idea has its origins in attempts to provide better process isolation to <em>chroot jails</em>.  <em>chroot</em> is a Unix command that facilitates creating a separate virtualized copy of the operating system by changing the apparent <em>root directory</em> (/) to processes running within this copy of the operating system.  Other variants of Unix have added extensions to this <em>chroot</em> mechanism to provide better isolation of the guest process, such as FreeBSD jails and Solaris Containers.  Linux Containers bring this process-based isolation mechanism to the standard Linux kernel via a recently added kernel feature called <em>control groups</em>.</p>

<p>As of this writing, there are no container-like Test Kitchen drivers for Windows.  Microsoft is working on adding similar lightweight virtualization technology to Windows via its Drawbridge virtalization technology[http://research.microsoft.com/en-us/projects/drawbridge/].  The only equivalent to Linux Containers in Windows at this moment is Microsoft Applications Virtualization (App-V), which has been around for quite some time, but it has a major drawback in requiring modification of target applications in order to work with the system, so it is not widely used.</p>

<p>The following diagram shows the steps in the sandbox environment creation process for containers.  It is identical to the host-based model presented previously, just using lightweight, isolated container processes instead of full-blown virtual machines.</p>

<ol>
  <li>Test Kitchen invokes the container driver (<code>kitchen-docker</code> or <code>kitchen-lxc</code>) to create a container instance.</li>
  <li>The Test Kitchen driver uses the operating system APIs for Linux Containers to create a new instance for our sandbox environment.</li>
  <li>Once the sandbox environment is running, Test Kitchen links the instance for communication.</li>
</ol>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.007.png" title="[Sandbox environment creation with kitchen-docker]" /></p>

<p>As of this writing, Test Kitchen drivers for Linux Containers do not support functionality equivalent to synchronized folders.  All Test Kitchen commands use <code>scp</code> to transfer files from your host to the container instance.  For any other file sharing beyond what is supported by Test Kitchen, you’ll need to make direct use of the file sharing mechanisms provided by the container driver being used.  This is where Docker shines, as it supports data volume containers which bypass container image layering.  Data volume containers are an ideal way to share data between containers.  It is also possible to mount host directories in a container, but that has more limited use cases.  Refer to the documentation on your container provider for more information.</p>

<p>You can combine together virtual machines with Linux containers to use containers on platforms that do not have native container support, like Mac OS X and Windows.  The following diagram presents an overview of the setup.  With virtual machines, it is usually not possible to nest virtualization software instances.  Running virtualization software <em>inside</em> guest OS instances is either prohibited or painfully slow.  However, it’s perfectly fine to run Linux Containers within a virtual machine.  To the outer virtualization software, the container instances are merely Linux processes.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.003.png" title="[Docker running in a virtual machine]" /></p>

<p>In the next section on Docker, we’ll show you how to use this technique for readers running Mac OS X or Windows.  Neither platform supports Linux containers natively on the host.  Chef Software uses a Docker-based VM in training classes, so that students with laptops running Mac OS X or Windows can use the same setup as the students using Linux.  This approach also saves money, as Chef Software uses cloud providers for training, and these providers charge based the number of instances and resources used.  The lightweight Docker instances consume fewer resources and only require one running instance on the cloud provider - all the other instances are just lightweight container instances, which cloud providers (currently) do not charge extra.  You may want to consider using Linux Containers in a similar fashion to save money if you make heavy use of third-party virtualization or cloud providers, like we do.</p>

<h2 id="docker-driver-kitchen-docker">Docker Driver (kitchen-docker)</h2>

<p>If you are using Linux, refer to the Docker installation guide for instructions on how to install and configure Docker in your environment: http://www.docker.com/.</p>

<h3 id="chef-training-environment-setup">Chef Training Environment Setup</h3>

<p>Skip ahead to the next secion if you are using Linux and already have Docker installed.  Otherwise, you’ll need to spin up a virtual machine with Docker installed in order to play around with a container environment.</p>

<p>We’ve created a Chef training environment that has Docker and the Chef Development Kit used in this book preinstalled on a Linux virtual machine.  We use this same instance in official Chef training.  It’s also a handy environment for playing around with containers using Test Kitchen.</p>

<p>First, make sure you install Vagrant and VirtualBox or Vagrant and VMware.</p>

<p>Create a directory for the Chef training environment project called <code>chef</code> and make it the current directory.</p>

<pre><code>$ mkdir chef
$ cd chef
</code></pre>

<p>Add Test Kitchen support to the project using the default <code>kitchen-vagrant</code> driver by running <code>kitchen init</code>.  Then run <code>bundle install</code> to install the necessary gems for the Test Kitchen driver.</p>

<pre><code>$ kitchen init --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.

$ bundle install
Fetching gem metadata from https://rubygems.org/..........
Fetching additional metadata from https://rubygems.org/..
Resolving dependencies...
Using mixlib-shellout (1.4.0)
Using net-ssh (2.9.1)
Using net-scp (1.2.1)
Using safe_yaml (1.0.3)
Using thor (0.19.1)
Using test-kitchen (1.2.1)
Using kitchen-vagrant (0.15.0)
Using bundler (1.5.2)
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>

<p>Modify the <code>.kitchen.yml</code> file to use the Chef training image as shown in the following <code>.kitchen.yml</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>chef/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">vagrant</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">learningchef</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="ss">box</span><span class="p">:</span> <span class="n">learningchef</span><span class="o">/</span><span class="n">cheftraining</span>
</span><span class="line">      <span class="n">box_url</span><span class="p">:</span> <span class="n">learningchef</span><span class="o">/</span><span class="n">cheftraining</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>kitchen create</code> to spin up the image:</p>

<pre><code>$ kitchen create
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-learningchef&gt;...
       Bringing machine 'default' up with 'virtualbox' provider...
       ==&gt; default: Importing base box 'learningchef/chefdk-box'...
       ==&gt; default: Matching MAC address for NAT networking...
       ==&gt; default: Checking if box 'learningchef/chefdk-box' is up to date...
       ==&gt; default: Setting the name of the VM: default-learningchef_default_1404728110875_23069
       ==&gt; default: Fixed port collision for 22 =&gt; 2222. Now on port 2200.
       ==&gt; default: Clearing any previously set network interfaces...
       ==&gt; default: Preparing network interfaces based on configuration...
           default: Adapter 1: nat
       ==&gt; default: Forwarding ports...
           default: 22 =&gt; 2200 (adapter 1)
       ==&gt; default: Booting VM...
       ==&gt; default: Waiting for machine to boot. This may take a few minutes...
           default: SSH address: 127.0.0.1:2200
           default: SSH username: vagrant
           default: SSH auth method: private key
           default: Warning: Remote connection disconnect. Retrying...
       ==&gt; default: Machine booted and ready!
       ==&gt; default: Checking for guest additions in VM...
       ==&gt; default: Setting hostname...
       ==&gt; default: Machine not provisioning because `--no-provision` is specified.
       Vagrant instance &lt;default-learningchef&gt; created.
       Finished creating &lt;default-learningchef&gt; (0m36.99s).
-----&gt; Kitchen is finished. (0m37.44s)
</code></pre>

<p>Then run <code>kitchen login</code> to use Docker!  Note that the image also has the latest Chef Development Kit installed (as of this writing).  You will be running the Test Kitchen Docker driver <em>inside</em> this virtual machine.  It has been pre-populated with all the necessary files to spin up the CentOS 6.5 images used in the exercises for this book:</p>

<pre><code>$ kitchen login
Welcome to Ubuntu 14.04 LTS (GNU/Linux 3.13.0-24-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
Welcome to the Learning Chef training environment
Last login: Fri May 23 13:49:31 2014 from 10.0.2.2
vagrant@default-learningchef:~$ docker --version
Docker version 0.11.1, build fb99f99
vagrant@default-learningchef:~$ kitchen --version
Test Kitchen version 1.2.2.dev
vagrant@default-learningchef:~$
</code></pre>

<p>NOTE:</p>

<p>Sharp-eyed readers might notice that this is an Ubuntu image.  It is perfectly OK to spin up CentOS images on Ubuntu, as long as you use a version that shares the same kernel!</p>

<p>TIP:</p>

<p>At first, the multiple layers of instances might be a little confusing.  Refer back to the Docker diagram shown previously so that you can keep the big picture of this setup in mind.  Also, modifying the command prompts so they clearly indicate which environment is the VM and which environment is a container instance is strongly recommended.</p>

<h3 id="kitchen-docker-setup">kitchen-docker Setup</h3>

<p>Run the following <code>kitchen init</code> command to add Test Kitchen support to your project using the <code>kitchen-docker</code> driver:</p>

<pre><code>$ kitchen init --driver=kitchen-docker --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
</code></pre>

<p>Run <code>bundle install</code> to download and install any required gems.</p>

<h3 id="kitchen-docker-kitchenyml-example">kitchen-docker .kitchen.yml Example</h3>

<p>The following <code>.kitchen.yml</code> presents an example which spins up a CentOS 6.5 sandbox environment:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>docker/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">docker</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="n">image_id</span><span class="p">:</span> <span class="mi">3448641</span>
</span><span class="line">      <span class="n">region_id</span><span class="p">:</span> <span class="mi">4</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The output of <code>kitchen list</code> should resemble the following:</p>

<pre><code>$ kitchen list
Instance          Driver  Provisioner  Last Action
default-centos65  Docker  ChefSolo     &lt;Not Created&gt;
</code></pre>

<p>Spin up the node with <code>kitchen create</code>:</p>

<pre><code>$ kitchen create
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-centos65&gt;...
       Step 0 : FROM centos:latest
       Pulling repository centos
        ---&gt; 0c752394b855
...
       Waiting for localhost:49153...
       Waiting for localhost:49153...
       Finished creating &lt;default-centos65&gt; (1m19.28s).
-----&gt; Kitchen is finished. (1m19.34s)
</code></pre>

<p>At the time of this writing, due to some issues with <code>kitchen-docker</code>, you may be prompted for <code>kitchen@localhost's password</code>.  The password is <code>kitchen</code></p>

<pre><code>$ kitchen login
kitchen@localhost's password: kitchen
Last login: Mon Jul  7 11:37:14 2014 from 172.17.42.1
[kitchen@55f29336b435 ~]$ cat /etc/redhat-release
CentOS release 6.5 (Final)
[kitchen@55f29336b435 ~]$ exit
logout
Connection to localhost closed.
</code></pre>

<p>Install Chef Client with <code>kitchen setup</code>.  <code>kitchen destroy</code> will delete container instance.</p>

<p>Refer to the <code>kitchen-docker</code> driver documentation on https://github.com/portertech/kitchen-docker for more information on additional <code>.kitchen.yml</code> settings.</p>

<h1 id="physical-machine-drivers">Physical Machine Drivers</h1>

<p>As of this writing, Test Kitchen does not currently support <code>chef-metal</code>.  It is currently planned to provide robust support for managing sandbox environments running on physical machines using <code>chef-metal</code> (though plans sometimes change).</p>

<p>Until Test Kitchen supports <code>chef-metal</code>, the only way to use Test Kitchen with physical machines currently (other than your local host) is to use the <code>kitchen-ssh</code> driver.  This is actually a generic way to integrate any kind of machine with Test Kitchen, not just physical machines.  As long as the machine accepts <code>ssh</code> connections, it will work.</p>

<p>The following diagram shows an overview of the Test Kitchen instance creation process using <code>kitchen-ssh</code>.  It is similar to the creation process used for cloud instances with the Test Kitchen environment being run on a remote machine, but there is only one step because an isolated sandbox instance is not created.  The <code>kitchen-ssh</code> driver merely links up an SSH communication channel with Test Kitchen in the remote machine’s host environment.</p>

<p><img class="center" src="http://misheska.com/images/chapa01/tkdriver.008.png" title="[Sandbox environment creation with kitchen-ssh]" /></p>

<p>It is assumed that you are using some other method outside of Test Kitchen to be able to easily reset the environment.  Also, since it does not spin up a new instance, you will need to make sure the machine that you are linking to has CentOS 6 installed to match the exercises in this book.</p>

<h2 id="driver-for-any-server-with-an-ssh-address-kitchen-ssh">Driver for any server with an SSH address (kitchen-ssh)</h2>

<p>Run the following <code>kitchen init</code> command to add Test Kitchen support to your project using the <code>kitchen-ssh</code> driver:</p>

<pre><code>$ kitchen init --driver=kitchen-ssh --create-gemfile
      create  .kitchen.yml
      create  test/integration/default
      create  Gemfile
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
</code></pre>

<p>Run <code>bundle install</code> to fetch any required gems.</p>

<h3 id="kitchen-ssh-kitchenyml-example">kitchen-ssh .kitchen.yml Example</h3>

<p>The following <code>.kitchen.yml</code> assumes that you are connecting to an existing CentOS 6.5 environment with an SSH server running.  Change the <code>hostname:</code>, <code>username:</code> and <code>password:</code> fields accordingly to match your remote machine’s settings:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>ssh/.kitchen.yml  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"> <span class="o">---</span>
</span><span class="line"><span class="ss">driver</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">ssh</span>
</span><span class="line">
</span><span class="line"><span class="ss">provisioner</span><span class="p">:</span>
</span><span class="line">  <span class="nb">name</span><span class="p">:</span> <span class="n">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="ss">platforms</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">centos65</span>
</span><span class="line">    <span class="ss">driver</span><span class="p">:</span>
</span><span class="line">      <span class="ss">hostname</span><span class="p">:</span> <span class="mi">192</span><span class="o">.</span><span class="mi">168</span><span class="o">.</span><span class="mi">33</span><span class="o">.</span><span class="mi">33</span>
</span><span class="line">      <span class="ss">username</span><span class="p">:</span> <span class="n">alice</span>
</span><span class="line">      <span class="ss">password</span><span class="p">:</span> <span class="n">averysecretpassword</span>
</span><span class="line">
</span><span class="line"><span class="ss">suites</span><span class="p">:</span>
</span><span class="line">  <span class="o">-</span> <span class="nb">name</span><span class="p">:</span> <span class="n">default</span>
</span><span class="line">    <span class="n">run_list</span><span class="p">:</span>
</span><span class="line">    <span class="ss">attributes</span><span class="p">:</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>The output of <code>kitchen list</code> should resemble the following:</p>

<pre><code>Instance          Driver  Provisioner  Last Action
default-centos65  Ssh     ChefSolo     Created
</code></pre>

<p>Initiate a connection to the node with <code>kitchen create</code>.  You could also run <code>kitchen login</code> without needing to run <code>kitchen create</code> in this case, as <code>kitchen create</code> does nothing:</p>

<pre><code>$ kitchen create
-----&gt; Starting Kitchen (v1.2.2.dev)
-----&gt; Creating &lt;default-centos65&gt;...
       Kitchen-ssh does not start your server '192.168.33.33' but will look for an ssh connection with user 'alice'
---
       Kitchen-ssh found ssh ready on host '192.168.33.33' with user 'alice'

       Finished creating &lt;default-centos65&gt; (0m0.01s).
-----&gt; Kitchen is finished. (0m0.02s)
</code></pre>

<p>Install Chef Client with <code>kitchen setup</code>.  For this driver, <code>kitchen destroy</code> does nothing, just like <code>kitchen create</code>, besides updating the status in Test Kitchen.</p>

<p>Refer to the <code>kitchen-ssh</code> driver documentation on https://github.com/neillturner/kitchen-ssh/blob/master/lib/kitchen/driver/ssh.rb for more information on additional <code>.kitchen.yml</code> settings.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set up a Sane Ruby Cookbook Authoring Environment for Chef on Mac OS X, Linux and Windows]]></title>
    <link href="http://misheska.com/blog/2013/12/26/set-up-a-sane-ruby-cookbook-authoring-environment-for-chef/"/>
    <updated>2013-12-26T23:32:00-08:00</updated>
    <id>http://misheska.com/blog/2013/12/26/set-up-a-sane-ruby-cookbook-authoring-environment-for-chef</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#mac-os-x">Mac OS X</a>    <ul>
      <li><a href="#install-the-xcode-command-line-tools---mac-os-x">Install the Xcode Command Line Tools - Mac OS X</a></li>
      <li><a href="#install-the-homebrew-package-manager---mac-os-x">Install the Homebrew Package Manager - Mac OS X</a></li>
      <li><a href="#install-apple-gcc-42---mac-os-x">Install Apple GCC 4.2 - Mac OS X</a></li>
      <li><a href="#install-chruby-and-ruby-build-via-homebrew---mac-os-x">Install Chruby and Ruby-Build via Homebrew - Mac OS X</a></li>
      <li><a href="#compile-ruby-19x-from-source---mac-os-x">Compile Ruby 1.9.x from source - Mac OS X</a></li>
      <li><a href="#install-bundler---mac-os-x">Install Bundler - Mac OS X</a></li>
      <li><a href="#install-sublime-text-3-optional---mac-os-x">Install Sublime Text 3 (Optional) - Mac OS X</a>        <ul>
          <li><a href="#create-subl-command-line-launch-link---mac-os-x">Create <code>subl</code> command line launch link - Mac OS X</a></li>
          <li><a href="#install-sublime-text-3-package-control-optional---mac-os-x">Install Sublime Text 3 Package Control (Optional) - Mac OS X</a></li>
          <li><a href="#install-sublime-chef-optional---mac-os-x">Install Sublime Chef (Optional) - Mac OS X</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#linux">Linux</a>    <ul>
      <li><a href="#install-prerequisite-packages---linux">Install Prerequisite Packages - Linux</a>        <ul>
          <li><a href="#ubuntu-prerequisites">Ubuntu prerequisites:</a></li>
          <li><a href="#rhelcentos-prerequisites">RHEL/CentOS prerequisites:</a></li>
        </ul>
      </li>
      <li><a href="#install-chruby-and-ruby-build---linux">Install Chruby and Ruby-Build - Linux</a></li>
      <li><a href="#compile-ruby-19x-from-source---linux">Compile Ruby 1.9.x from source - Linux</a></li>
      <li><a href="#install-bundler---linux">Install Bundler - Linux</a></li>
      <li><a href="#install-sublime-text-3-optional---linux">Install Sublime Text 3 (Optional) - Linux</a>        <ul>
          <li><a href="#subl-command-line-launch-link---linux"><code>subl</code> command line launch link - Linux</a></li>
          <li><a href="#install-sublime-text-3-package-control-optional---linux">Install Sublime Text 3 Package Control (Optional) - Linux</a></li>
          <li><a href="#install-sublime-chef-optional---linux">Install Sublime Chef (Optional) - Linux</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li><a href="#windows">Windows</a>    <ul>
      <li><a href="#install-ruby-19x---windows">Install Ruby 1.9.x - Windows</a></li>
      <li><a href="#install-ruby-devkit---windows">Install Ruby DevKit - Windows</a></li>
      <li><a href="#enhance-rubies-to-use-the-devkit---windows">Enhance Rubies to use the DevKit - Windows</a></li>
      <li><a href="#install-bundler---windows">Install Bundler - Windows</a></li>
      <li><a href="#install-git---windows">Install Git - Windows</a></li>
      <li><a href="#install-sublime-text-3-optional---windows">Install Sublime Text 3 (Optional) - Windows</a>        <ul>
          <li><a href="#install-sublime-text-3-package-control-optional---windows">Install Sublime Text 3 Package Control (Optional) - Windows</a></li>
          <li><a href="#install-sublime-chef-optional---windows">Install Sublime Chef (Optional) - Windows</a></li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><em>Updated January 3, 2014</em></p>

<ul>
  <li><em>Added instructions to create <code>subl</code> launching commandlet</em></li>
</ul>

<p><em>Updated January 2, 2014</em></p>

<ul>
  <li><em>Per Seth Vargo switched from rbenv to chruby</em></li>
  <li><em>Switched from SublimeText 2 to SublimeText 3 - it works with SublimeChef</em></li>
</ul>

<p>You will need to set up a sane Ruby 1.9.x development to support your
Chef cookbook authoring activity on Mac OS X, Linux or Windows.  In this
Ruby environment, you will manage all the required Ruby Gem libraries
necessary to support Chef cookbook authoring.  The
<a href="https://learnchef.opscode.com/quickstart/workstation-setup/">LearnChef</a>
site recommends that you piggyback the Chef client’s omnibus Ruby
environment to start learning how to write Chef cookbooks.  This
article assumes that you want to go beyond the basics, where you’ll need
a Ruby environment dedicated for Chef cookbook development.</p>

<p>There are many different ways to set up a sane Ruby environment.  This
article covers how to set up a sane Ruby environment for Chef using
<a href="https://github.com/postmodern/chruby">Chruby</a> for Mac OS X/Linux and
<a href="http://rubyinstaller.org">RubyInstaller</a> for Windows.  The setup
covered in this article should work for most people wanting to write
Chef cookbooks.  If you are more experienced with Ruby development, you
may want to roll your own Ruby environment in another fashion.  The only
requirement is that Ruby 1.9.x must be used, the Chef client currently
does not support Ruby 2.x.</p>

<h1 id="mac-os-x">Mac OS X</h1>

<p>Out of the box, Ruby does not provide a mechanism to support multiple
installed versions.  <a href="https://github.com/postmodern/chruby">Chruby</a>
makes it easy to manage multiple versions of Ruby.  It’s a great way to set up
a dedicated Ruby 1.9.x environment with all the required Gem libraries for
Chef cookbook development.</p>

<hr />

<p><strong>NOTE:</strong> Before trying to install
<a href="https://github.com/postmodern/chruby">Chruby</a>
verify that you do not have another popular Ruby virtualization manager
installed - <a href="http://rvm.io">RVM</a>.  If you try to run the following <code>rvm</code>
command, it should say <code>command not found</code>:</p>

<pre><code>$ rvm --version
-bash: rvm: command not found
</code></pre>

<p>If you want to switch to Chruby (which is recommended), make sure that you
<a href="http://stackoverflow.com/questions/3558656/how-can-i-remove-rvm-ruby-version-manager-from-my-system">completely remove RVM first</a>
(as Chruby and RVM cannot coexist because RVM overrides the <code>gem</code> command with
a function specific to RVM).</p>

<hr />

<h2 id="install-the-xcode-command-line-tools---mac-os-x">Install the Xcode Command Line Tools - Mac OS X</h2>

<p>First you’ll need to install a C compiler and the Xcode Command Line tools
to build Ruby from source.  If you are using the latest version of Mac OS X
Mavericks 10.9, it has support for downloading the Xcode command line tools
directly from a Terminal window.  Run the following on a command line:</p>

<pre><code>$ xcode-select --install
</code></pre>

<p>You will be prompted to either click on <code>Install</code> to just install the command
line developer tools or click on <code>Get Xcode</code> to install both Xcode and the
command line developer tools.  It can be handy to have Xcode as well, but
it is a rather large multi-gigabyte download and not really necessary for
Ruby development.  So if you want to get going quickly, just click on the
<code>Install</code> button:</p>

<p><img class="center" src="http://misheska.com/images/xcodeselect.png" title="xcode-select" /></p>

<p>If <code>xcode-select</code> installed the Xcode Command Line Tools, you should have
<code>git</code> installed (among other things).  Verify this with the following
command:</p>

<pre><code>$ git --version
git version 1.8.3.4 (Apple Git-47)
</code></pre>

<h2 id="install-the-homebrew-package-manager---mac-os-x">Install the Homebrew Package Manager - Mac OS X</h2>

<p>Next, you’ll need to install the <a href="http://brew.sh/">Homebrew package manager</a>
to get all the dependencies needed to compile Ruby from source.  While you
could manage these dependencies by hand, using a package manager is a better
idea, as package managers know how to uninstall what they install.</p>

<p>First verify that you <strong>DO NOT</strong> currently have homebrew installed.
<code>brew --version</code> should report <code>command not found</code>.</p>

<pre><code>$ brew --version
-bash: brew: command not found
</code></pre>

<p>If you already have Homebrew installed, just
<a href="http://misheska.com/blog/2013/06/15/using-rbenv-to-manage-multiple-versions-of-ruby/#upgrade-rbenv---mac-os-x">Update Homebrew and Rbenv</a>
and skip to the next section.</p>

<hr />

<p><strong>NOTE:</strong> Before trying to install <a href="http://brew.sh">Homebrew</a> verify that
you do not have another popular package manager installed - MacPorts.
If you try to run the following <code>port</code> command, it should say
<code>command not found</code>:</p>

<pre><code>$ port --version
-bash: port: command not found
</code></pre>

<p>If MacPorts is already installed, make sure that you
<a href="http://guide.macports.org/chunked/installing.macports.uninstalling.html">completely remove MacPorts from your system</a>
before trying to install Homebrew.</p>

<hr />

<p>Run the following command to install Homebrew:</p>

<pre><code>$ ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
</code></pre>

<p>Run <code>brew doctor</code> and address any issues it discovers.  When
all is well, you should see:</p>

<pre><code>$ brew doctor
Your system is raring to brew.
</code></pre>

<h2 id="install-apple-gcc-42---mac-os-x">Install Apple GCC 4.2 - Mac OS X</h2>

<p>Next, install the additional dependencies to compile Ruby from source:</p>

<pre><code># For update-system
brew update
# Add the system duplicate formulae
brew tap homebrew/dupes
# Install legacy C compiler for building Ruby
brew install apple-gcc42
</code></pre>

<h2 id="install-chruby-and-ruby-build-via-homebrew---mac-os-x">Install Chruby and Ruby-Build via Homebrew - Mac OS X</h2>

<p>Now install <code>chruby</code> and <code>ruby-install</code> via Homebrew:</p>

<pre><code>$ brew update
$ brew install chruby
$ brew install ruby-build
</code></pre>

<p>Add <code>chruby.sh</code> to your shell to enable chruby:</p>

<pre><code>$ echo 'source /usr/local/share/chruby/chruby.sh' &gt;&gt; $HOME/.bash_profile
</code></pre>

<p>Add <code>auto.sh</code> to your shell to enble auto-switching of Rubies specified by
`.ruby-version files:</p>

<pre><code>$ echo 'source /usr/local/share/chruby/auto.sh' &gt;&gt; $HOME/.bash_profile
</code></pre>

<h2 id="compile-ruby-19x-from-source---mac-os-x">Compile Ruby 1.9.x from source - Mac OS X</h2>

<p>Install the latest version of ruby 1.9.x (at the time of this writing 1.9.3-p484)</p>

<pre><code>$ ruby-build 1.9.3-p484 --install-dir ~/.rubies/ruby-1.9.3-p484
</code></pre>

<p>Reload <code>.bashrc</code> with these new settings:</p>

<pre><code>$ source $HOME/.bash_profile    
</code></pre>

<p>To switch to the Ruby required for Chef:</p>

<pre><code>$ chruby ruby-1.9
</code></pre>

<p>To make this version the default version of Ruby, simply add this command
to your $HOME/.bash_profile</p>

<pre><code>$ echo 'chruby ruby-1.9' &gt;&gt; $HOME/.bash_profile
</code></pre>

<p>Verify the ruby install.  If everything was installed correctly, the <code>ruby -v</code>
command should report that version 1.9.3p484 is installed.</p>

<pre><code>$ ruby -v
ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-darwin13.0.0]
</code></pre>

<h2 id="install-bundler---mac-os-x">Install Bundler - Mac OS X</h2>

<p>You’ll need to use <a href="http://gembundler.com/">Bundler</a> to manage gems.  Installing
a gem is also a good way to ensure that you’ve installed most of the Ruby
prerequisites.</p>

<p>First, make sure you update to the latest version of Rubygems:</p>

<pre><code>$ gem update --system
Updating rubygems-update
Fetching: rubygems-update-2.2.0.gem (100%)
Successfully installed rubygems-update-2.2.0
Installing RubyGems 2.2.0
RubyGems 2.2.0 installed
...
</code></pre>

<p>Then install the <code>bundler</code> gem.  If the <code>gem install</code> command reports
<code>Successfully installed</code> you’re good to go:</p>

<pre><code>$ gem install bundler
Successfully installed bundler-1.5.1
Parsing documentation for bundler-1.5.1
1 gem installed
</code></pre>

<h2 id="install-sublime-text-3-optional---mac-os-x">Install Sublime Text 3 (Optional) - Mac OS X</h2>

<p>Miguel Cabeça has written an excellent plugin for the Sublime Text editor
called <a href="https://github.com/cabeca/SublimeChef">SublimeChef</a>, which is the
closest thing to an Integrated Development Environment (IDE) that exists
for Chef.  Sublime Text costs $70 for a license, but has no restriction
on the length of a trial period, so feel free try out Sublime Text to see
if it works for you.</p>

<p>Download and install SublimeText 3 for your platform via
<a href="http://www.sublimetext.com/3">http://www.sublimetext.com/3</a></p>

<h3 id="create-subl-command-line-launch-link---mac-os-x">Create <code>subl</code> command line launch link - Mac OS X</h3>

<p>It is very handy to be able to launch Sublime Text from the command line
as you’ll find yourself going back and forth between the two in developing
your cookbooks.  Create a short-named link to the Sublime Text executable
with the following commands:</p>

<pre><code>$ sudo mkdir -p /usr/local/bin
$ sudo chown -R $(whoami) /usr/local/bin
$ ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/subl
</code></pre>

<p>Since <code>/usr/local/bin</code> should already bin your path, typing in the following 
command should launch Sublime Text:</p>

<pre><code>$ subl
</code></pre>

<p>You can pass in a filename parameter as well, such as:</p>

<pre><code>$ subl default.rb
</code></pre>

<h3 id="install-sublime-text-3-package-control-optional---mac-os-x">Install Sublime Text 3 Package Control (Optional) - Mac OS X</h3>

<p>In order to install the SublimeChef plugin, first you need to install
Sublime Text Package Control.</p>

<ul>
  <li>
    <p>Download <a href="https://sublime.wbond.net/Package%20Control.sublime-package">Package Control.sublime-package</a></p>
  </li>
  <li>
    <p>Choose <code>Preferences &gt; Browse Packages...</code> from the Sublime Text 3 menu</p>
  </li>
  <li>
    <p>Browse up a folder, then navigate into <code>Installed Packages/</code></p>
  </li>
  <li>
    <p>Copy <code>Package Control.sublime-package</code> file you downloaded into this
<code>Sublime Text 3\Installed Packages</code> directory</p>
  </li>
  <li>
    <p>Restart Sublime Text 3 to enable Package Control</p>
  </li>
</ul>

<p>Once Package Control is installed successfully, you should be able to
display the Command Palette by pressing <code>COMMAND+SHIFT+P</code>:</p>

<p><img class="center" src="http://misheska.com/images/sublime3commandpalette-mac.png" title="[Sublime Text 3 Command Palette]" /></p>

<h3 id="install-sublime-chef-optional---mac-os-x">Install Sublime Chef (Optional) - Mac OS X</h3>

<p>After pressing <code>CTRL+SHIFT+P</code> to display the Command Palette, start typing
<code>install</code> to select <code>Package Control: Install Package</code>:</p>

<p><img class="center" src="http://misheska.com/images/sublime3installpackagecontrol-mac.png" title="[Sublime Text 3 Package Control]" /></p>

<p>Then type <code>chef</code> to display the SublimeChef entry - click to install:</p>

<p><img class="center" src="http://misheska.com/images/sublime3sublimechef-mac.png" title="[SublimeChef install]" /></p>

<p>Miguel created the following
<a href="http://www.youtube.com/watch?v=4VtDj_ar1Xg">demo video</a>
to show how SublimeChef can be used.</p>

<h1 id="linux">Linux</h1>

<h2 id="install-prerequisite-packages---linux">Install Prerequisite Packages - Linux</h2>
<p>Make sure the prerequisite packages are installed.</p>

<h3 id="ubuntu-prerequisites">Ubuntu prerequisites:</h3>

<pre><code>$ sudo apt-get update
$ sudo apt-get install -y build-essential git
$ sudo apt-get install -y libxml2-dev libxslt-dev libssl-dev
</code></pre>

<h3 id="rhelcentos-prerequisites">RHEL/CentOS prerequisites:</h3>

<pre><code>$ sudo yum update
$ sudo yum install -y git
$ sudo yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel
$ sudo yum install -y libyaml-devel libffi-devel openssl-devel make bzip2
$ sudo yum install -y autoconf automake libtool bison
$ sudo yum install -y libxml2-devel libxslt-devel
</code></pre>

<h2 id="install-chruby-and-ruby-build---linux">Install Chruby and Ruby-Build - Linux</h2>

<p>Download the chruby source distribution:</p>

<pre><code>$ wget -O chruby-0.3.8.tar.gz https://github.com/postmodern/chruby/archive/v0.3.8.tar.gz
</code></pre>

<p>Extract chruby and install:</p>

<pre><code>$ tar xzvf chruby-0.3.8.tar.gz
$ cd chruby-0.3.8/
$ sudo make install
</code></pre>

<p>Feel free to remove the chruby source dir after installing:</p>

<pre><code>$ cd ..
$ rm chruby-0.3.8.tar.gz
$ rm -rf chruby-0.3.8
</code></pre>

<p>Install ruby-build:</p>

<pre><code>$ git clone https://github.com/sstephenson/ruby-build.git
$ cd ruby-build
$ sudo ./install.sh
</code></pre>

<p>Feel free to remove the ruby-build source dir after installing:</p>

<pre><code>$ cd ..
$ rm -rf ruby-build
</code></pre>

<p>Add <code>chruby.sh</code> to your shell to enable chruby:</p>

<pre><code>$ echo 'source /usr/local/share/chruby/chruby.sh' &gt;&gt; $HOME/.bashrc
</code></pre>

<p>Add <code>auto.sh</code> to your shell to enble auto-switching of Rubies specified by
`.ruby-version files:</p>

<pre><code>$ echo 'source /usr/local/share/chruby/auto.sh' &gt;&gt; $HOME/.bashrc
</code></pre>

<h2 id="compile-ruby-19x-from-source---linux">Compile Ruby 1.9.x from source - Linux</h2>

<p>Install the latest version of ruby 1.9.x (at the time of this writing 1.9.3-p484)</p>

<pre><code>$ ruby-build 1.9.3-p484 --install-dir ~/.rubies/ruby-1.9.3-p484
</code></pre>

<p>Reload <code>.bashrc</code> with these new settings:</p>

<pre><code>$ source $HOME/.bashrc
</code></pre>

<p>To switch to the Ruby required for Chef:</p>

<pre><code>$ chruby ruby-1.9
</code></pre>

<p>To make this version the default version of Ruby, simply add this command
to your $HOME/.bashrc</p>

<pre><code>$ echo 'chruby ruby-1.9' &gt;&gt; $HOME/.bashrc
</code></pre>

<p>Verify the ruby install.  If everything was installed correctly, the <code>ruby -v</code>
command should report that version 1.9.3p484 is installed.</p>

<pre><code>$ ruby -v
ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-darwin13.0.0]
</code></pre>

<h2 id="install-bundler---linux">Install Bundler - Linux</h2>

<p>You’ll need to use <a href="http://gembundler.com/">Bundler</a> to manage gems.
Installing a gem is also a good way to ensure that you’ve installed most
of the Ruby prerequisites.</p>

<p>First, make sure you update to the latest version of Rubygems:</p>

<pre><code>$ gem update --system
Updating rubygems-update
Fetching: rubygems-update-2.2.0.gem (100%)
Successfully installed rubygems-update-2.2.0
Installing RubyGems 2.2.0
RubyGems 2.2.0 installed
...
</code></pre>

<p>Then install the <code>bundler</code> gem.  If the <code>gem install</code> command reports
<code>Successfully installed</code> you’re good to go:</p>

<pre><code>$ gem install bundler
Successfully installed bundler-1.5.0
Parsing documentation for bundler-1.5.0
1 gem installed
</code></pre>

<h2 id="install-sublime-text-3-optional---linux">Install Sublime Text 3 (Optional) - Linux</h2>

<p>Miguel Cabeça has written an excellent plugin for the Sublime Text editor
called <a href="https://github.com/cabeca/SublimeChef">SublimeChef</a>, which is the
closest thing to an Integrated Development Environment (IDE) that exists
for Chef.  Sublime Text costs $70 for a license, but has no restriction
on the length of a trial period, so feel free try out Sublime Text to see
if it works for you.</p>

<p>Download and install SublimeText 3 for your platform via
<a href="http://www.sublimetext.com/3">http://www.sublimetext.com/3</a></p>

<h3 id="subl-command-line-launch-link---linux"><code>subl</code> command line launch link - Linux</h3>

<p>Unlike with Mac OS X, the Linux installer should have created a
command line launch link for Sublime Text in <code>/usr/bin/subl</code>.
Typing in the following command should launch Sublime Text:</p>

<pre><code>$ subl
</code></pre>

<p>You can pass in a filename parameter as well, such as:</p>

<pre><code>$ subl default.rb
</code></pre>

<h3 id="install-sublime-text-3-package-control-optional---linux">Install Sublime Text 3 Package Control (Optional) - Linux</h3>

<p>In order to install the SublimeChef plugin, first you need to install
Sublime Text Package Control.</p>

<ul>
  <li>
    <p>Download <a href="https://sublime.wbond.net/Package%20Control.sublime-package">Package Control.sublime-package</a></p>
  </li>
  <li>
    <p>Choose <code>Preferences &gt; Browse Packages...</code> from the Sublime Text 3 menu</p>
  </li>
  <li>
    <p>Browse up a folder, then navigate into <code>Installed Packages/</code></p>
  </li>
  <li>
    <p>Copy <code>Package Control.sublime-package</code> file you downloaded into this
<code>Sublime Text 3/Installed Packages</code> directory</p>
  </li>
  <li>
    <p>Restart Sublime Text 3 to enable Package Control</p>
  </li>
</ul>

<p>Once Package Control is installed successfully, you should be able to
display the Command Pallete by pressing <code>CTRL+SHIFT+P</code>:</p>

<p><img class="center" src="http://misheska.com/images/sublime3commandpalette-ubuntu.png" title="[Sublime Text 3 Command Palette]" /></p>

<h3 id="install-sublime-chef-optional---linux">Install Sublime Chef (Optional) - Linux</h3>

<p>After pressing <code>CTRL+SHIFT+P</code> to display the Command Pallette, start typing
<code>install</code> to select <code>Package Control: Install Package</code>:</p>

<p><img class="center" src="http://misheska.com/images/sublime3installpackagecontrol.png" title="[Sublime Text 3 Package Control]" /></p>

<p>Then type <code>chef</code> to display the SublimeChef entry - click to install:</p>

<p><img class="center" src="http://misheska.com/images/sublime3sublimechef-ubuntu.png" title="[SublimeChef install]" /></p>

<p>Miguel created the following
<a href="http://www.youtube.com/watch?v=4VtDj_ar1Xg">demo video</a>
to show how SublimeChef can be used.</p>

<h1 id="windows">Windows</h1>

<p>There is no need to install a Ruby version manager on Windows, like there
is for Mac OS X or Linux.  In fact, the chruby version manager does not
work on Windows.  Instead, you’ll use the 
<a href="http://rubyinstaller.org/">RubyInstaller for Windows</a> which
can install different versions of Ruby on the same machine.</p>

<h2 id="install-ruby-19x---windows">Install Ruby 1.9.x - Windows</h2>

<p>Download and install the latest Windows RubyInstaller for Ruby 1.9.x from
<a href="http://rubyinstaller.org/downloads">http://rubyinstaller.org/downloads</a>
(version 1.9.3-p484 as of this writing):</p>

<p><img class="center" src="http://misheska.com/images/rubyinstaller.png" title="[RubyInstaller]" /></p>

<p>Verify that Ruby was installed correctly by running the following from a
Command Prompt:</p>

<pre><code>&gt; ruby -v
ruby 1.9.3p484 (2013-11-22) [i386-mingw32]
</code></pre>

<h2 id="install-ruby-devkit---windows">Install Ruby DevKit - Windows</h2>

<p>Download and install the Ruby Development Kit for use with Ruby 1.8.7 and
1.9.3.</p>

<p><img class="center" src="http://misheska.com/images/devkit.png" title="[Ruby DevKit]" /></p>

<p>Extract the archive to <code>C:\Ruby\DevKit</code>:</p>

<p><img class="center" src="http://misheska.com/images/devkitextract.png" title="[Extract DevKit to C:\Ruby\Devkit]" /></p>

<h2 id="enhance-rubies-to-use-the-devkit---windows">Enhance Rubies to use the DevKit - Windows</h2>

<p>Run <code>dk.rb init</code> to generate a <code>config.yml</code> which includes all the installed
Rubies to be enhanced to use the DevKit:</p>

<pre><code>&gt; cd /d c:\Ruby\DevKit
&gt; ruby dk.rb init
</code></pre>

<p>If you want to review the list of Rubies before installing, run
<code>dk.rb review</code>:</p>

<pre><code>&gt; cd /d c:\Ruby\DevKit
&gt; ruby dk.rb review
</code></pre>

<p>Then run <code>dk.rb</code> to DevKit enhance your installed Rubies:</p>

<pre><code>&gt; cd /d c:\Ruby\DevKit
&gt; ruby dk.rb install
</code></pre>

<p>Finally run <code>devkitvars</code> to add the DevKit tools to your command shell’s
PATH and try to get the version of <code>gcc</code> to verify that the tools
installed properly:</p>

<pre><code>&gt; c:\Ruby\DevKit\devkitvars.bat
Adding the DevKit to PATH...
&gt; gcc --version
gcc (tdm-1) 4.5.2
Copyright (C) 2010 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS OR A PARTICULAR PURPOSE.
</code></pre>

<h2 id="install-bundler---windows">Install Bundler - Windows</h2>

<p>You’ll need to use <a href="http://gembundler.com/">Bundler</a> to manage gems.  Installing
a gem is also a good way to ensure that you’ve installed most of the Ruby
prerequisites.</p>

<p>First, make sure you update to the latest version of Rubygems:</p>

<pre><code>&gt; c:\Ruby\DevKit\devkitvars.bat
Adding the DevKit to Path...
&gt; gem update --system
Fetching: rubygems-update-2.2.0.gem (100%)
Successfully installed ruygems-update-2.2.0
Installing RubyGems 2.2.0
RubyGems 2.2.0 installed
...
</code></pre>

<p>Then install the <code>bundler</code> gem.  If the <code>gem install</code> command reports
<code>Successfully installed</code> you’re good to go:</p>

<pre><code>&gt; gem install bundler
Successfully installed bundler-1.5.0
Parsing documentation for bundler-1.5.0
1 gem installed
</code></pre>

<h2 id="install-git---windows">Install Git - Windows</h2>

<p>While using source control is a recommended best practice, Chef does not
require Git.  If you use some other source control system besides Git,
feel free to install it instead of Git.  Use of Git source control just
happens to be more common than others with Chef.</p>

<p>Download the latest stable release of the Git for Windows install from
<a href="http://git-scm.com/downloads">http://git-scm.com/downloads</a></p>

<p><img class="center" src="http://misheska.com/images/wingit.png" title="[Download for Windows]" /></p>

<p>Run the Git Windows install accepting the default choices, except on the
PATH setup dialog.  You’ll need to include the Unix tools on your Windows
command prompt for some Chef commands to work:</p>

<p><img class="center" src="http://misheska.com/images/wingitunixtools.png" title="[Run Git and Included Unix tools from the Windows Command Prompt]" /></p>

<p>Verify that Git installed correcting by running the following on a command
prompt:</p>

<pre><code>&gt; git --version
git version 1.8.4.msysgit.0
</code></pre>

<h2 id="install-sublime-text-3-optional---windows">Install Sublime Text 3 (Optional) - Windows</h2>

<p>Miguel Cabeça has written an excellent plugin for the Sublime Text editor
called <a href="https://github.com/cabeca/SublimeChef">SublimeChef</a>, which is the
closest thing to an Integrated Development Environment (IDE) that exists
for Chef.  Sublime Text costs $70 for a license, but has no restriction
on the length of a trial period, so feel free try out Sublime Text to see
if it works for you.</p>

<p>Download and install SublimeText 3 for your platform via
<a href="http://www.sublimetext.com/3">http://www.sublimetext.com/3</a></p>

<h3 id="install-sublime-text-3-package-control-optional---windows">Install Sublime Text 3 Package Control (Optional) - Windows</h3>

<p>In order to install the SublimeChef plugin, first you need to install
Sublime Text Package Control.</p>

<ul>
  <li>
    <p>Download <a href="https://sublime.wbond.net/Package%20Control.sublime-package">Package Control.sublime-package</a></p>
  </li>
  <li>
    <p>Choose <code>Preferences &gt; Browse Packages...</code> from the Sublime Text 3 menu</p>
  </li>
  <li>
    <p>Browse up a folder, then navigate into <code>Installed Packages/</code></p>
  </li>
  <li>
    <p>Copy <code>Package Control.sublime-package</code> file you downloaded into this
<code>Sublime Text 3\Installed Packages</code> directory</p>
  </li>
  <li>
    <p>Restart Sublime Text 3 to enable Package Control</p>
  </li>
</ul>

<p>Once Package Control is installed successfully, you should be able to
display the Command Pallete by pressing <code>CTRL+SHIFT+P</code>:</p>

<p><img class="center" src="http://misheska.com/images/sublime3commandpalette-win.png" title="[Sublime Text 3 Command Palette]" /></p>

<h3 id="install-sublime-chef-optional---windows">Install Sublime Chef (Optional) - Windows</h3>

<p>After pressing <code>CTRL+SHIFT+P</code> to display the Command Pallette, start typing
<code>install</code> to select <code>Package Control: Install Package</code>:</p>

<p><img class="center" src="http://misheska.com/images/sublime3installpackagecontrol-win.png" title="[Sublime Text 3 Package Control]" /></p>

<p>Then type <code>chef</code> to display the SublimeChef entry - click to install:</p>

<p><img class="center" src="http://misheska.com/images/sublime3sublimechef-win.png" title="[SublimeChef install]" /></p>

<p>Miguel created the following
<a href="http://www.youtube.com/watch?v=4VtDj_ar1Xg">demo video</a>
to show how SublimeChef can be used.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started Writing Chef Cookbooks the Berkshelf Way, Part 3]]></title>
    <link href="http://misheska.com/blog/2013/08/06/getting-started-writing-chef-cookbooks-the-berkshelf-way-part3/"/>
    <updated>2013-08-06T12:46:00-07:00</updated>
    <id>http://misheska.com/blog/2013/08/06/getting-started-writing-chef-cookbooks-the-berkshelf-way-part3</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#iteration-13---install-test-kitchen">Iteration #13 - Install Test Kitchen</a>    <ul>
      <li><a href="#testing-iteration-13---show-the-test-kitchen-version">Testing Iteration #13 - Show the Test Kitchen version</a></li>
    </ul>
  </li>
  <li><a href="#iteration-14---create-a-kitchen-yaml-file">Iteration #14 - Create a Kitchen YAML file</a>    <ul>
      <li><a href="#testing-iteration-14---provision-with-test-kitchen">Testing Iteration #14 - Provision with Test Kitchen</a></li>
    </ul>
  </li>
  <li><a href="#iteration-15---provisioning-ubuntu">Iteration #15 - Provisioning Ubuntu</a>    <ul>
      <li><a href="#testing-iteration-15---deploy-locally-to-ubuntu-1204">Testing Iteration #15 - Deploy locally to Ubuntu 12.04</a></li>
    </ul>
  </li>
  <li><a href="#iteration-16---writing-your-first-serverspec-test">Iteration #16 - Writing your first Serverspec test</a>    <ul>
      <li><a href="#testing-iteration-16---running-your-first-serverspec-test">Testing Iteration #16 - Running your first Serverspec test</a></li>
    </ul>
  </li>
  <li><a href="#iteration-17---completing-the-webserver-test-suite">Iteration #17 - Completing the webserver test suite</a>    <ul>
      <li><a href="#testing-iteration-17---running-the-suite">Testing Iteration #17 - Running the suite</a></li>
    </ul>
  </li>
  <li><a href="#iteration-18---completing-the-database-test-suite">Iteration #18 - Completing the database test suite</a>    <ul>
      <li><a href="#testing-iteration-19---kitchen-test">Testing Iteration #19 - kitchen test</a></li>
    </ul>
  </li>
  <li><a href="#conclusion">Conclusion</a></li>
</ul>

<p><em>Update January 7, 2014</em>
* <em>Note about Michel Goetz’s blog series on ChefSpec</em></p>

<p><em>Updated December 29, 2013</em></p>

<ul>
  <li><em>Bumped Test Kitchen from 1.0.0.beta.3 to 1.1.1</em></li>
  <li><em>Bumped CentOS to version 6.5</em></li>
  <li><em>Per Kelly Setzer, updated os check with recent RSpec updates</em></li>
</ul>

<p><em>Updated September 10, 2013</em></p>

<ul>
  <li><em>Bumped VirtualBox images from version 4.2.16 to 4.2.18</em></li>
  <li><em>Bumped Vagrant from version 1.2.7 to 1.3.1</em></li>
</ul>

<p><em>Updated September 1, 2013</em></p>

<ul>
  <li><em>Bumped Test Kitchen from 1.0.0.beta.2 to 1.0.0.beta.3</em></li>
</ul>

<p>This is the third article in a series on writing Opscode Chef cookbooks the
Berkshelf Way.  Here’s a link to <a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a> and
<a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>.  The source code examples covered in this
article can be found on Github: <a href="https://github.com/misheska/myface">https://github.com/misheska/myface</a></p>

<p>In this installment, we’re going to learn how to use Test Kitchen to 
automate all the verification steps we did by hand for each iteration in
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a> and
<a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>.  If not anything else, it’s worth learning
Test Kitchen because OpsCode, the company that makes Chef, has encouraged the
use of Test Kitchen to verify community cookbooks.</p>

<p>Test Kitchen is built on top of vagrant and supplements the <code>Vagrantfile</code> file
you have been using so far in this series to do local automated testing.  The
main benefit to Test Kitchen is that it makes it easy to run tests on multiple
platforms in parallel, which is more difficult to do with just a <code>Vagrantfile</code>.
We’ll be showcasing this aspect of Test Kitchen by ensuring that Myface works
on both the CentOS 6.4 and Ubuntu 12.04 Linux distributions.</p>

<h1 id="iteration-13---install-test-kitchen">Iteration #13 - Install Test Kitchen</h1>
<p>Edit <code>myface/Gemfile</code> and add the following lines to load the
Test Kitchen gems:</p>

<pre><code>gem 'test-kitchen'
gem 'kitchen-vagrant'
</code></pre>

<p>Depending on when you went through this article series, your <code>Gemfile</code>
may already have these additions.  After editing, your <code>myface/Gemfile</code>
should look like the following after editing:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/Gemfile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">source</span> <span class="s1">&#39;https://rubygems.org&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">gem</span> <span class="s1">&#39;berkshelf&#39;</span>
</span><span class="line"><span class="n">gem</span> <span class="s1">&#39;test-kitchen&#39;</span>
</span><span class="line"><span class="n">gem</span> <span class="s1">&#39;kitchen-vagrant&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>After you have updated the <code>Gemfile</code> run <code>bundle install</code> to download the
test-kitchen gem and all its dependencies:</p>

<pre><code>$ bundle install
Fetching gem metadata from https://rubygems.org/........
Fetching gem metadata from https://rubygems.org/..
Resolving dependencies...
Using i18n (0.6.9)
Using multi_json (1.8.2)
Using activesupport (3.2.16)
...
Installing test-kitchen (1.1.1)
Using bundler (1.5.1)
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>

<h2 id="testing-iteration-13---show-the-test-kitchen-version">Testing Iteration #13 - Show the Test Kitchen version</h2>

<p>If everything worked properly you should be able to run the <code>kitchen --version</code>
command to see your installed Test Kitchen’s version information</p>

<pre><code>$ kitchen --version
Test Kitchen version 1.1.1
</code></pre>

<h1 id="iteration-14---create-a-kitchen-yaml-file">Iteration #14 - Create a Kitchen YAML file</h1>

<p>In order to use Test Kitchen on a cookbook, first you need to add a few more
dependencies and create a template Kitchen YAML file.  Test Kitchen makes this
easy by providing the <code>kitchen init</code> command to perform all these
initialization steps automatically </p>

<pre><code>$ kitchen init
      create  .kitchen.yml
      append  Thorfile
      create  test/integration/default
      append  .gitignore
      append  .gitignore
      append  Gemfile
      append  Gemfile
You must run 'bundle install' to fetch any new gems.
</code></pre>

<p>Since <code>kitchen init</code> modified your Gemfile, you need to re-run <code>bundle install</code>
(as suggested above) to pick up the new gem dependencies:</p>

<pre><code>$ bundle install
Fetching gem metadata from https://rubygems.org/........
Fetching additional metadata from https://rubygems.org/..
Resolving dependencies...
Using i18n (0.6.9)
Using multi_json (1.8.2)
Using activesupport (3.2.16)
...
Using safe_yaml (0.9.7)
Using test-kitchen (1.1.1)
Installing kitchen-vagrant (0.14.0)
Using bundler (1.5.1)
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>

<p>Most importantly, this new <code>bundle install</code> pass installed the
<code>kitchen-vagrant</code> vagrant driver for Test Kitchen.</p>

<p>Now that you have created a <code>.kitchen.yml</code> Kitchen YAML file and loaded all
the necessary gems, let’s customize the file so that we’ll use 
to verify that the Myface cookbook works on CentOS 6.4, like we were doing in
the previous installments with the <code>Vagrantfile</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/.kitchen.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="nn">---</span>
</span><span class="line"><span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span>
</span><span class="line">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vagrant</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">provisioner</span><span class="p-Indicator">:</span>
</span><span class="line">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">platforms</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">centos65</span>
</span><span class="line">  <span class="l-Scalar-Plain">driver_config</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">centos65</span>
</span><span class="line">    <span class="l-Scalar-Plain">box_url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">suites</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default</span>
</span><span class="line">  <span class="l-Scalar-Plain">run_list</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;recipe[myface]&quot;</span><span class="p-Indicator">]</span>
</span><span class="line">  <span class="l-Scalar-Plain">attributes</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">mysql</span><span class="p-Indicator">:</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_root_password</span><span class="p-Indicator">:</span> <span class="s">&quot;rootpass&quot;</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_debian_password</span><span class="p-Indicator">:</span> <span class="s">&quot;debpass&quot;</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_repl_password</span><span class="p-Indicator">:</span> <span class="s">&quot;replpass&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Everything in the YAML file should be straightforward to understand, except
perhaps the <code>attributes</code> item in the <code>suites</code> stanza.  These values 
came from the <code>Vagrantfile</code> we used in the previous installments of this
series.  Here’s an excerpt from the <code>Vagrantfile</code> - at the end are some
values that Berkshelf initialzed (which we used in
<a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>).</p>

<pre><code>...
  config.vm.provision :chef_solo do |chef|
    chef.json = {
      :mysql =&gt; {
        :server_root_password =&gt; 'rootpass',
        :server_debian_password =&gt; 'debpass',
        :server_repl_password =&gt; 'replpass'
      }
    }

   chef.run_list = [
        "recipe[myface::default]"
    ]
  end
end
</code></pre>

<p>Those <code>Vagrantfile</code> attributes were just converted into a format that the
Test Kitchen YAML file format finds acceptable.</p>

<p>You can add even more Vagrantfile customizations to your <code>kitchen.yml</code> file
if you like.  For example, you can assign a host-only network IP so you can
look at the MyFace website with a browser on your host.  Add the following
<code>network:</code> block to a platform’s <code>driver_config:</code>:</p>

<pre><code>...
driver_config:
  network:
  - ["private_network", {ip: "33.33.33.10"}]
...
</code></pre>

<p>After adding this block your <code>.kitchen.yml</code> should look like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/.kitchen.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="nn">---</span>
</span><span class="line"><span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span>
</span><span class="line">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vagrant</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">provisioner</span><span class="p-Indicator">:</span>
</span><span class="line">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">platforms</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">centos65</span>
</span><span class="line">  <span class="l-Scalar-Plain">driver_config</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">centos65</span>
</span><span class="line">    <span class="l-Scalar-Plain">box_url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box</span>
</span><span class="line">    <span class="l-Scalar-Plain">network</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="p-Indicator">-</span> <span class="p-Indicator">[</span><span class="s">&quot;private_network&quot;</span><span class="p-Indicator">,</span> <span class="p-Indicator">{</span><span class="nv">ip</span><span class="p-Indicator">:</span> <span class="s">&quot;33.33.33.10&quot;</span><span class="p-Indicator">}]</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">suites</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default</span>
</span><span class="line">  <span class="l-Scalar-Plain">run_list</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;recipe[myface]&quot;</span><span class="p-Indicator">]</span>
</span><span class="line">  <span class="l-Scalar-Plain">attributes</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">mysql</span><span class="p-Indicator">:</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_root_password</span><span class="p-Indicator">:</span> <span class="s">&quot;rootpass&quot;</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_debian_password</span><span class="p-Indicator">:</span> <span class="s">&quot;debpass&quot;</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_repl_password</span><span class="p-Indicator">:</span> <span class="s">&quot;replpass&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>For more information on the <code>kitchen-vagrant</code> settings, refer to the
README.md file for <code>kitchen-vagrant</code> at <a href="https://github.com/opscode/kitchen-vagrant/blob/master/README.md">https://github.com/opscode/kitchen-vagrant/blob/master/README.md</a></p>

<h2 id="testing-iteration-14---provision-with-test-kitchen">Testing Iteration #14 - Provision with Test Kitchen</h2>

<p>You can do nearly everything that you were doing with vagrant just using Test
Kitchen.  The Test Kitchen equivalent of the <code>vagrant up</code> command is 
<code>kitchen converge</code>.  Try running the <code>kitchen converge</code> command now to verify
that your <code>.kitchen.yml</code> file is valid.  When you run <code>kitchen converge</code> it will
spin up a CentOS 6.5 vagrant test node instance and use Chef Solo to provision
the MyFace cookbook on the test node:</p>

<pre><code>$ kitchen converge 
-----&gt; Starting Kitchen (v1.1.1)
-----&gt; Creating &lt;default-centos65&gt;...
       Bringing machine 'default' up with 'virtualbox' provider...
       [default] Importing base box 'centos65'...
       [default] Matching MAC address for NAT networking...
       [default] Setting the name of the VM...
       [default] Clearing any previously set forwarded ports...
       [Berkshelf] Skipping Berkshelf with --no-provision
       [default] Fixed port collision for 22 =&gt; 2222. Now on port 2200.
       [default] Clearing any previously set network interfaces...
       [default] Preparing network interfaces based on configuration...
       [default] Forwarding ports...
       [default] -- 22 =&gt; 2200 (adapter 1)
       [default] Running 'pre-boot' VM customizations...
       [default] Booting VM...
       [default] Waiting for machine to boot. This may take a few minutes...
       [default] Machine booted and ready!
       [default] Setting hostname...
       Vagrant instance &lt;default-centos65&gt; created.
       Finished creating &lt;default-centos65&gt; (0m51.76s).
-----&gt; Converging &lt;default-centos65&gt;...
       Preparing files for transfer
       Resolving cookbook dependencies with Berkshelf...
       Removing non-cookbook files before transfer
-----&gt; Installing Chef Omnibus (true)
       downloading https://www.opscode.com/chef/install.sh
         to file /tmp/install.sh
       trying wget...
       Downloading Chef  for el...
       downloading https://www.opscode.com/chef/metadata?v=&amp;prerelease=false&amp;p=el&amp;pv=6&amp;m=x86_64
         to file /tmp/install.sh.2158/metadata.txt
       trying wget...
       url	https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.8.2-1.el6.x86_64.rpm
       md5	10f3d0da82efa973fe91cc24a6a74549
       sha256	044558f38d25bbf75dbd5790ccce892a38e5e9f2a091ed55367ab914fbd1cfed
       downloaded metadata file looks valid...
       downloading https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.8.2-1.el6.x86_64.rpm
         to file /tmp/install.sh.2158/chef-.x86_64.rpm
       trying wget...
       Checksum compare with sha256sum succeeded.
       Installing Chef
       installing with rpm...
       warning: /tmp/install.sh.2158/chef-.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
Preparing...                #####  ########################################### [100%]
   1:chef                          ########################################### [100%]
       Thank you for installing Chef!
       Transfering files to &lt;default-centos65&gt;
       [2013-12-29T11:44:52-08:00] INFO: Forking chef instance to converge...
       Starting Chef Client, version 11.8.2
       [2013-12-29T11:44:52-08:00] INFO: *** Chef 11.8.2 ***
       [2013-12-29T11:44:52-08:00] INFO: Chef-client pid: 2257
       [2013-12-29T11:44:53-08:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
       [2013-12-29T11:44:53-08:00] INFO: Run List is [recipe[myface::default]]
       ...
       Recipe: apache2::default
         * service[apache2] action restart[2013-12-29T11:47:41-08:00] INFO: Processing service[apache2] action restart (apache2::default line 210)
       [2013-12-29T11:47:43-08:00] INFO: service[apache2] restarted

           - restart service service[apache2]

       [2013-12-29T11:47:43-08:00] INFO: Chef Run complete in 170.575449983 seconds
       [2013-12-29T11:47:43-08:00] INFO: Running report handlers
       [2013-12-29T11:47:43-08:00] INFO: Report handlers complete
       Chef Client finished, 100 resources updated
       Finished converging &lt;default-centos65&gt; (3m43.06s).
-----&gt; Kitchen is finished. (4m35.40s)
</code></pre>

<p>To display the results of the Chef Run, type in the <code>kitchen list</code> command:</p>

<pre><code>$ kitchen list
Instance           Driver   Provisioner  Last Action
default-centos65   Vagrant  Chef Solo    Converged
</code></pre>

<p>If the run succeeded, it should display <code>Converged</code> in the <code>Last Action</code> field.</p>

<p>The Test Kitchen equivalent of the <code>vagrant ssh</code> command is <code>kitchen login</code>.
Since Test Kitchen supports multiple instances, you will need to pass in
the instance name for which you wish to login as a parameter (which you can
get from the <code>kitchen list</code> output).  We want to login to the CentOS 6.5
instance (the only instance for now), so type in the command
<code>kitchen login default-centos65</code> to login:</p>

<pre><code>$ kitchen login default-centos65
Last login: Sun Dec 29 13:16:33 2013 from 10.0.2.2
Welcome to your Packer-built virtual machine.
[vagrant@default-centos65 ~]$
</code></pre>

<p>Now you can poke around in the image the same way you did with <code>vagrant ssh</code>,
for example, verifying that the httpd server is running:</p>

<pre><code>[vagrant@default-centos65 ~]$ sudo /sbin/service httpd status
httpd (pid  4410) is running...
</code></pre>

<p>After you are done working in the test instance, make sure to run the
<code>exit</code> command to log out so that you return back to your host prompt:</p>

<pre><code>[vagrant@default-centos65 ~]$ exit
logout
Connection to 127.0.0.1 closed.
</code></pre>

<p>Should you need it, the Test Kitchen equivalent of <code>vagrant destroy</code> is
<code>kitchen destroy</code>.  If you make a change to the chef cookbook and
want to re-deploy, the Test Kitchen equivalent of <code>vagrant provision</code> is
<code>kitchen converge</code>.</p>

<p>Since you added a private IP for you instance, you can also view the
MyFace website on your host with your favorite web browser:</p>

<p><a href="http://33.33.33.10">http://33.33.33.10</a></p>

<p><img src="http://misheska.com/images/welcometomyface2.png" alt="Welcome to MyFace" /></p>

<h1 id="iteration-15---provisioning-ubuntu">Iteration #15 - Provisioning Ubuntu</h1>

<p>We haven’t really made use of any unique Test Kitchen features yet, let’s
start now.  We’ll also deploy our cookbook locally to Ubuntu 12.04 for
testing, in addition to CentOS 6.5.</p>

<p>Edit <code>.kitchen.yml</code> and add a reference to a Ubuntu 12.04 basebox alongside
the existing CentOS 6.5 basebox in the <code>platforms</code> stanza:</p>

<pre><code>- name: ubuntu1204
  driver_config:
    box: ubuntu1204
    box_url: https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/ubuntu1204.box
    network:
    - ["private_network", {ip: "33.33.33.11"}]
</code></pre>

<p>After editing, your <code>.kitchen.yml</code> file should resemble the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/.kitchen.yml </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
</pre></td><td class="code"><pre><code class="yaml"><span class="line"><span class="nn">---</span>
</span><span class="line"><span class="l-Scalar-Plain">driver</span><span class="p-Indicator">:</span>
</span><span class="line">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">vagrant</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">provisioner</span><span class="p-Indicator">:</span>
</span><span class="line">  <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">chef_solo</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">platforms</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">centos65</span>
</span><span class="line">  <span class="l-Scalar-Plain">driver_config</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">centos65</span>
</span><span class="line">    <span class="l-Scalar-Plain">box_url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box</span>
</span><span class="line">    <span class="l-Scalar-Plain">network</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="p-Indicator">-</span> <span class="p-Indicator">[</span><span class="s">&quot;private_network&quot;</span><span class="p-Indicator">,</span> <span class="p-Indicator">{</span><span class="nv">ip</span><span class="p-Indicator">:</span> <span class="s">&quot;33.33.33.10&quot;</span><span class="p-Indicator">}]</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu1204</span>
</span><span class="line">  <span class="l-Scalar-Plain">driver_config</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">box</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">ubuntu1204</span>
</span><span class="line">    <span class="l-Scalar-Plain">box_url</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/ubuntu1204.box</span>
</span><span class="line">    <span class="l-Scalar-Plain">network</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="p-Indicator">-</span> <span class="p-Indicator">[</span><span class="s">&quot;private_network&quot;</span><span class="p-Indicator">,</span> <span class="p-Indicator">{</span><span class="nv">ip</span><span class="p-Indicator">:</span> <span class="s">&quot;33.33.33.11&quot;</span><span class="p-Indicator">}]</span>
</span><span class="line">
</span><span class="line"><span class="l-Scalar-Plain">suites</span><span class="p-Indicator">:</span>
</span><span class="line"><span class="p-Indicator">-</span> <span class="l-Scalar-Plain">name</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">default</span>
</span><span class="line">  <span class="l-Scalar-Plain">run_list</span><span class="p-Indicator">:</span> <span class="p-Indicator">[</span><span class="s">&quot;recipe[myface]&quot;</span><span class="p-Indicator">]</span>
</span><span class="line">  <span class="l-Scalar-Plain">attributes</span><span class="p-Indicator">:</span>
</span><span class="line">    <span class="l-Scalar-Plain">mysql</span><span class="p-Indicator">:</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_root_password</span><span class="p-Indicator">:</span> <span class="s">&quot;rootpass&quot;</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_debian_password</span><span class="p-Indicator">:</span> <span class="s">&quot;debpass&quot;</span>
</span><span class="line">      <span class="l-Scalar-Plain">server_repl_password</span><span class="p-Indicator">:</span> <span class="s">&quot;replpass&quot;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Before we run <code>kitchen converge</code> to do a Chef run, we need to fix our cookbook
so it will run successfully on Ubuntu 12.04.  If you tried to deploy now you
would notice that the MyFace cookbook would fail to deploy to Ubuntu 12.04
successfully due to a reference to the <code>php-mysql</code> package in 
<code>myface/receipes/webserver.rb</code>.</p>

<pre><code>... 
include_recipe 'apache2'
include_recipe 'apache2::mod_php5'

package 'php-mysql' do
  action :install
  notifies :restart, 'service[apache2]'
end
...
</code></pre>

<p>On Ubuntu the package name should be <code>php5-mysql</code> instead of <code>php-mysql</code>.</p>

<p>As with most issues in the Chef world, there’s a cookbook for that!
The Opscode <code>php</code> cookbook has conditionals to reference the correct name
for the <code>php-mysql</code> package on a number of platforms.</p>

<p>Edit <code>myface/metadata.rb</code> and add a reference to the latest version of the
<code>php</code> cookbook (currently 1.3.10):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/metadata.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
</pre></td><td class="code"><pre><code class="rb"><span class="line"><span class="nb">name</span>             <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">maintainer</span>       <span class="s1">&#39;Mischa Taylor&#39;</span>
</span><span class="line"><span class="n">maintainer_email</span> <span class="s1">&#39;mischa@misheska.com&#39;</span>
</span><span class="line"><span class="n">license</span>          <span class="s1">&#39;Apache 2.0&#39;</span>
</span><span class="line"><span class="n">description</span>      <span class="s1">&#39;Installs/Configures myface&#39;</span>
</span><span class="line"><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;README.md&#39;</span><span class="p">))</span>
</span><span class="line"><span class="n">version</span>          <span class="s1">&#39;2.0.0&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;apache2&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.8.0&#39;</span>
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 4.0.0&#39;</span>
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;database&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.6.0&#39;</span>
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;php&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.3.0&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>In <code>myface/recipes/webserver.rb</code> replace the <code>package "php-mysql" do ... end</code>
block with the following reference:</p>

<pre><code>include_recipe 'php::module_mysql'
</code></pre>

<p>After editing, <code>myface/recipes/webserver.rb</code> should look like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/webserver.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
</pre></td><td class="code"><pre><code class="rb"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: webserver</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2::mod_php5&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;php::module_mysql&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c1"># disable default site</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;000-default&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">false</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create apache config</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;dir&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/sites-available/</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;apache2.conf.erb&#39;</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create document root</span>
</span><span class="line"><span class="n">directory</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0755&#39;</span>
</span><span class="line">  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># write site</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/index.php&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;index.php.erb&#39;</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># enable myface</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="testing-iteration-15---deploy-locally-to-ubuntu-1204">Testing Iteration #15 - Deploy locally to Ubuntu 12.04</h2>

<p>Now that we’ve fixed up our cookbook to work on Ubuntu 12.04, let’s test it
out!  Run <code>kitchen list</code> to display the list of Test Kitchen instances:</p>

<pre><code>Instance             Driver   Provisioner  Last Action
default-centos65     Vagrant  Chef Solo    Converged
default-ubuntu1204   Vagrant  Chef Solo    &lt;Not Created&gt;
</code></pre>

<p>Notice that after editing the <code>.kitchen.yml</code> we now have an Ubuntu 12.04
instance called <code>default-ubuntu1204</code> and it is in the <code>&lt;Not Created&gt;</code>
state.</p>

<p>Go ahead setup the Ubuntu 12.04 instance by running <code>kitchen converge</code> again:</p>

<pre><code>$ kitchen converge default-ubuntu1204
</code></pre>

<p>Note that this time we added an optional instance parameter so that Test
Kitchen only performs the action against the specified instance.  If you do
not specify this parameter, it defaults to <code>all</code>, running the command against
all instances.  After about 5-10 minutes or so, you should observe that Test
Kitchen downloaded an Ubuntu 12.04 basebox, booted a VM with the basebox, and
successfully deployed our chef cookbook.</p>

<p>Run the <code>kitchen list</code> command again to verify that the Ubuntu 12.04 instance
is now in the <code>Set Up</code> state as well, showing that there were no errors:</p>

<pre><code>Instance             Driver   Provisioner  Last Action
default-centos65     Vagrant  Chef Solo    Converged
default-ubuntu1204   Vagrant  Chef Solo    Converged
</code></pre>

<p>You just fixed an error with the MyFace cookbook that prevented deployment to
Ubuntu 12.04, and verified that the cookbook correctly deploys to both 
Ubuntu 12.04 and Centos 6.5.</p>

<p>Use the <code>kitchen login</code> command to ssh into each instance and poke around
if you like.  You now have two local vagrant VMs instantiated to play with!</p>

<pre><code>$ kitchen login default-ubuntu1204
Welcome to Ubuntu 12.04.3 LTS (GNU/Linux 3.8.0-29-generic x86_64)

 * Documentation:  https://help.ubuntu.com/
Last login: Sun Dec 29 13:30:36 2013 from 10.0.2.2
$ [...poke around, run some commands...]
$ exit
Connection to 127.0.0.1 closed.

$ kitchen login default-centos65
Last login: Sun Dec 29 13:21:10 2013 from 10.0.2.2
Welcome to your Packer-built virtual machine.
[vagrant@default-centos65 ~]$ [...poke around, run some commands...]
[vagrant@default-centos65 ~]$ exit
logout
Connection to 127.0.0.1 closed.
</code></pre>

<p>You can view the websites for each instance by viewing the appropriate
private IP</p>

<pre><code>CentOS 6.5:   http://33.33.33.10
Ubuntu 12.04: http://33.33.33.11
</code></pre>

<h1 id="iteration-16---writing-your-first-serverspec-test">Iteration #16 - Writing your first Serverspec test</h1>

<p>While it’s really helpful to know now that the Myface cookbook will converge on
both a CentOS 6.5 and Ubuntu 12.04 setup, we haven’t written any tests yet.
Let’s do that.</p>

<p>It’s helpful to know that Test Kitchen was designed as a framework for
post-convergence system testing.  You are supposed to set up a bunch of test
instances, perform a Chef run to apply your cookbook’s changes to them, then
when this is process is complete your tests can inspect the state of each
test instance after the Chef run is finished.  This is how we tested our
nodes by hand in <a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a>
and <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>.  Now we are going to automate the process.</p>

<p>NOTE: It is a <a href="http://watirmelon.com/2012/01/31/introducing-the-software-testing-ice-cream-cone/">testing anti-pattern to rely too much on system tests, even if they are automated</a>
so make sure you are judicious in your use of system tests.  It can be
difficult to maintain a lot of system tests over time and keep them relevant.
The tests you performed by hand in <a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a>
and <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>
to verify MyFace are at just the right level of detail for a system test.
Do just enough to verify that the system works correctly after it was
configured.  In a future post, I’ll cover unit tests in more detail using
<a href="http://acrmp.github.io/chefspec/">Chefspec</a> and
<a href="https://github.com/guard/guard">Guard</a>.  For now, let’s focus on system tests.</p>

<p>Test Kitchen finds tests by following a directory naming convention.  When
you installed Test Kitchen, it created the <code>test/integration/default</code>
subdirectory underneath your main cookbook.  It looks for test code in the
following directory underneath <code>test/integration</code>:</p>

<pre><code>&lt;COOKBOOOK-PATH&gt;/test/integration/&lt;TEST-SUITE-NAME&gt;/&lt;PLUGIN-NAME&gt;
</code></pre>

<p>A collection of tests is called a <a href="http://en.wikipedia.org/wiki/Test_suite">test suite</a>.  Following Test Kitchen install’s lead, we’ll just call our first
suite of tests <code>default</code>.  Test Kitchen has a number of plugins which will
install and setup any components necessary for running tests.  We’ll be using
the <code>severspec</code> plugin for our tests.  So you will be placing your test files
in the following directory:</p>

<pre><code>myface/test/integration/default/serverspec
</code></pre>

<p>Create the <code>myface/test/integration/default/serverspec</code> subdirectory now.</p>

<p>To start, we need to add a Ruby helper script which loads our Test Kitchen
plugin.  We’ll call it
<code>myface/test/integration/default/serverspec/spec_helper.rb</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/spec_helper.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;serverspec&#39;</span>
</span><span class="line"><span class="nb">require</span> <span class="s1">&#39;pathname&#39;</span>
</span><span class="line">
</span><span class="line"><span class="kp">include</span> <span class="ss">Serverspec</span><span class="p">:</span><span class="ss">:Helper</span><span class="o">::</span><span class="no">Exec</span>
</span><span class="line"><span class="kp">include</span> <span class="ss">Serverspec</span><span class="p">:</span><span class="ss">:Helper</span><span class="o">::</span><span class="no">DetectOS</span>
</span><span class="line">
</span><span class="line"><span class="no">RSpec</span><span class="o">.</span><span class="n">configure</span> <span class="k">do</span> <span class="o">|</span><span class="n">c</span><span class="o">|</span>
</span><span class="line">  <span class="n">c</span><span class="o">.</span><span class="n">before</span> <span class="ss">:all</span> <span class="k">do</span>
</span><span class="line">    <span class="n">c</span><span class="o">.</span><span class="n">os</span> <span class="o">=</span> <span class="n">backend</span><span class="p">(</span><span class="ss">Serverspec</span><span class="p">:</span><span class="ss">:Commands</span><span class="o">::</span><span class="no">Base</span><span class="p">)</span><span class="o">.</span><span class="n">check_os</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This code is modeled after the examples provided on the
<a href="http://serverspec.org/tutorial.html">serverspec</a> website.</p>

<p>Create a subdirectory underneath <code>myface/test/integration/default/serverspec</code>
called <code>localhost</code>:</p>

<pre><code>myface/test/integration/default/serverspec/localhost
</code></pre>

<p>It is a serverspec convention to put tests (a.k.a. “specs”) underneath
<code>spec_helper.rb</code> in a subdirectory denoting the host name to be tested.
Serverspec supports testing via SSH access to remote hosts.  We won’t
be using this capability as we will be testing local images, so we’ll just
use <code>localhost</code> for the host name.</p>

<p>Now, let’s write our first test!  If you recall in 
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/#testing-iteration-1">Testing Iteration #1</a>, we ran
the following command to verify that the myface user was created:</p>

<pre><code>$ getent password myface
myface:x:497:503::/home/myface:/bin/bash
</code></pre>

<p>Create the a file named <code>myface/test/integration/default/serverspec/localhost/webserver_spec.rb</code> that contains a serverspec test to perform the same action:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/localhost/webserver_spec.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">describe</span> <span class="s1">&#39;MyFace webserver&#39;</span> <span class="k">do</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have a myface user&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;getent passwd myface&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/myface:x:\d+:\d+::\/home\/myface:\/bin\/bash/</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Serverspec provides extensions to Rspec to help you more easily test servers.
If you’re not familiar with Rspec syntax, Code School has an excellent
tutorial on <a href="http://rspec.codeschool.com/">Testing with Rspec</a>.  Even if you
don’t know Rspec, you should still be able to follow along with
provided examples.</p>

<p>You can find a list of serverspec resources at the following link:
<a href="http://serverspec.org/resource_types.html">http://serverspec.org/resource_types.html</a>.  We’re using the <code>command</code>
resource to run the command <code>getent password myface</code> and match the
resultant output with a Ruby regular expression (because the uid and gid
field could be any number between 100-999, because myface is a system
account).</p>

<h2 id="testing-iteration-16---running-your-first-serverspec-test">Testing Iteration #16 - Running your first Serverspec test</h2>

<p>OK, let’s run our first test!</p>

<p>To start you need to run <code>kitchen setup</code> so that Test Kitchen loads and
configures all the required plugins.  In keeping with the restaurant theme,
the component that manages Test Kitchen plugins is called
<a href="http://en.wikipedia.org/wiki/Busser">Busser</a>.</p>

<pre><code>$ kitchen setup
-----&gt; Starting Kitchen (v1.1.1)
-----&gt; Setting up &lt;default-centos65&gt;...
Fetching: thor-0.18.1.gem (100%)
Fetching: busser-0.6.0.gem (100%)
       Successfully installed thor-0.18.1
       Successfully installed busser-0.6.0
       2 gems installed
-----&gt; Setting up Busser
       Creating BUSSER_ROOT in /tmp/busser
       Creating busser binstub
       Plugin serverspec installed (version 0.2.5)
-----&gt; Running postinstall for serverspec plugin
       Finished setting up &lt;default-centos65&gt; (0m52.12s).
-----&gt; Setting up &lt;default-ubuntu1204&gt;...
Fetching: thor-0.18.1.gem (100%)
Fetching: busser-0.6.0.gem (100%)
Successfully installed thor-0.18.1
Successfully installed busser-0.6.0
2 gems installed
-----&gt; Setting up Busser
       Creating BUSSER_ROOT in /tmp/busser
       Creating busser binstub
       Plugin serverspec installed (version 0.2.5)
-----&gt; Running postinstall for serverspec plugin
       Finished setting up &lt;default-ubuntu1204&gt; (0m15.36s).
-----&gt; Kitchen is finished. (1m7.77s)
</code></pre>

<p>After running <code>kitchen setup</code>, next run <code>kitchen verify</code> to run your test
suite.</p>

<pre><code>$ kitchen verify
-----&gt; Starting Kitchen (v1.1.1)
-----&gt; Verifying &lt;default-centos65&gt;...
       Suite path directory /tmp/busser/suites does not exist, skipping.
       Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
       Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
       /opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

       MyFace webserver
         should have a myface user

       Finished in 0.04293 seconds
       1 example, 0 failures
       Finished verifying &lt;default-centos65&gt; (0m1.61s).
-----&gt; Verifying &lt;default-ubuntu1204&gt;...
       Suite path directory /tmp/busser/suites does not exist, skipping.
Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
 /opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

MyFace webserver
  should have a myface user

Finished in 0.11307 seconds
1 example, 0 failures
       Finished verifying &lt;default-ubuntu1204&gt; (0m1.66s).
-----&gt; Kitchen is finished. (0m3.80s)
</code></pre>

<p>Finally run <code>kitchen list</code> to display the results of your test run.</p>

<pre><code>$ kitchen list
Instance             Driver   Provisioner  Last Action
default-centos-64    Vagrant  Chef Solo    Verified
default-ubuntu-1204  Vagrant  Chef Solo    Verified
</code></pre>

<p>If Test Kitchen displays the <code>Last Action</code> as <code>Verified</code>, all the tests passed.</p>

<h1 id="iteration-17---completing-the-webserver-test-suite">Iteration #17 - Completing the webserver test suite</h1>

<p>Now let’s dive in and encode all the rest of the tests from
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a>.</p>

<p>While we used the <code>command</code> resource to encode our first test, this isn’t
the optimal way to encode this test as a serverspec.  We can make use of the 
<code>user</code> resource to encode a test more succinctly:</p>

<pre><code>it 'should have a myface user' do
  expect(user 'myface').to exist
end
</code></pre>

<p>The <code>myface/test/integration/default/serverspec/localhost/webserver_spec.rb</code>
file should resemble the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/localhost/webserver_spec.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">describe</span> <span class="s1">&#39;MyFace webserver&#39;</span> <span class="k">do</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have a myface user&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">user</span> <span class="s1">&#39;myface&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">exist</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>kitchen verify</code> and <code>kitchen list</code> to re-run your test.  You should see
the same result as before - <code>1 example, 0 failures</code>:</p>

<pre><code>$ kitchen verify
$ kitchen list
</code></pre>

<p>Only use the <code>command</code> resource as a method of last resort.  First check to
see if serverspec has a better resource to perform a test.</p>

<p>Let’s move on to the next command from
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/#testing-iteration-3">Testing Iteration #3</a>:</p>

<pre><code>$ vagrant ssh -c "sudo /sbin/service httpd status"
httpd (pid  4831) is running.
</code></pre>

<p>Use the servspec <code>service</code> resource to perform a test to ensure that the
httpd service is running and it automatically starts on bootup:</p>

<pre><code>it 'should be running the httpd server' do
  expect(service 'httpd').to be_running
  expect(service 'httpd').to be_enabled
end
</code></pre>

<p>Add this statement to your <code>webserver_spec</code> file:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/localhost/webserver_spec.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">describe</span> <span class="s1">&#39;MyFace webserver&#39;</span> <span class="k">do</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have a myface user&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">user</span> <span class="s1">&#39;myface&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">exist</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should be running the httpd server&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;httpd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;httpd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>kitchen verify</code> and <code>kitchen list</code> again to run this new test:</p>

<pre><code>$ kitchen verify
-----&gt; Starting Kitchen (v1.1.1)
-----&gt; Verifying &lt;default-centos65&gt;...
...
       MyFace webserver
         should have a myface user
         should be running the httpd server

       Finished in 0.04706 seconds
       2 examples, 0 failures
       Finished verifying &lt;default-centos65&gt; (0m1.61s).
-----&gt; Verifying &lt;default-ubuntu1204&gt;...
       Removing /tmp/busser/suites/serverspec
Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
/opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

MyFace webserver
  should have a myface user
httpd: unrecognized service
  should be running the httpd server (FAILED - 1)

Failures:

  1) MyFace webserver should be running the httpd server
     Failure/Error: expect(service 'httpd').to be_running
       ps aux | grep -w -- httpd | grep -qv grep
       expected Service "httpd" to be running
     # /tmp/busser/suites/serverspec/localhost/webserver_spec.rb:10:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 0.05906 seconds
2 examples, 1 failure

Failed examples:

rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb:9 # MyFace webserver should be running the httpd server
/opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation failed
Ruby Script[/tmp/busser/gems/gems/busser-serverspec-0.2.5/lib/busser/runner_plugin/../serverspec/runner.rb /tmp/busser/suites/serverspec] exit code was 1
&gt;&gt;&gt;&gt;&gt;&gt; Verify failed on instance &lt;default-ubuntu1204&gt;.
&gt;&gt;&gt;&gt;&gt;&gt; Please see .kitchen/logs/default-ubuntu1204.log for more details
&gt;&gt;&gt;&gt;&gt;&gt; ------Exception-------
&gt;&gt;&gt;&gt;&gt;&gt; Class: Kitchen::ActionFailed
&gt;&gt;&gt;&gt;&gt;&gt; Message: SSH exited (1) for command: [sh -c 'BUSSER_ROOT="/tmp/busser" GEM_HOME="/tmp/busser/gems" GEM_PATH="/tmp/busser/gems" GEM_CACHE="/tmp/busser/gems/cache" ; export BUSSER_ROOT GEM_HOME GEM_PATH GEM_CACHE; sudo -E /tmp/busser/bin/busser test']
&gt;&gt;&gt;&gt;&gt;&gt; ----------------------
...
$ kitchen list
Instance            Driver   Provisioner  Last Action
default-centos65    Vagrant  ChefSolo     Verified
default-ubuntu1204  Vagrant  ChefSolo     Verified
</code></pre>

<p>Uh oh!  That’s not what we expected! The tests failed on our Ubuntu 12.04
instance - and yet it still says that it is <code>Verified</code>, but the tests passed
on CentOS 6.5.  The <code>Last Action</code> field is literally the last action.  It does
not report success or failure state, so you’ll want to pay attention to the
output of <code>kitchen verify</code> and note whether or not all the tests passed.</p>

<p>In this case, the reason for the failure is that on Ubuntu, the name of the
Apache httpd service is <code>apache2</code> not <code>httpd</code>.  Let’s address this by adding a conditional that checks the <code>os</code> custom configuration setting that is set in 
<code>spec_helper.rb</code>.</p>

<p>I didn’t explain what this did before, but it runs a serverspec helper
method to check the os type before each spec/test run.  When running under
Ubuntu (or Debian), the value of <code>RSpec.configuation.os</code> will be <code>Debian</code>,
otherwise the value will be <code>RedHat</code> if it is running under any RHEL variant,
including CentOS.  So the following conditional should do the trick:</p>

<pre><code>it 'should be running the httpd server' do
  case RSpec.configuration.os
  when "Debian"
    expect(service 'apache2').to be_running
    expect(service 'apache2').to be_enabled
  else
    expect(service 'httpd').to be_running
    expect(service 'httpd').to be_enabled
  end
end 
</code></pre>

<p>After this change, your <code>webserver_spec.rb</code> file should resemble the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/localhost/webserver_spec.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">describe</span> <span class="s1">&#39;MyFace webserver&#39;</span> <span class="k">do</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have a myface user&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">user</span> <span class="s1">&#39;myface&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">exist</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should be running the httpd server&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="k">case</span> <span class="no">RSpec</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">os</span><span class="o">[</span><span class="ss">:family</span><span class="o">]</span>
</span><span class="line">    <span class="k">when</span> <span class="s2">&quot;Ubuntu&quot;</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;httpd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;httpd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>kitchen verify</code> and <code>kitchen list</code> again - all the tests should pass:</p>

<pre><code>$ kitchen verify
-----&gt; Starting Kitchen (v1.1.1)
-----&gt; Verifying &lt;default-centos65&gt;...
       Removing /tmp/busser/suites/serverspec
       Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
       Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
       /opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

       MyFace webserver
         should have a myface user
         should be running the httpd server

       Finished in 0.04858 seconds
       2 examples, 0 failures
       Finished verifying &lt;default-centos65&gt; (0m1.58s).
-----&gt; Verifying &lt;default-ubuntu1204&gt;...
       Removing /tmp/busser/suites/serverspec
Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
/opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

MyFace webserver
  should have a myface user
  should be running the httpd server

Finished in 0.06551 seconds
2 examples, 0 failures
       Finished verifying &lt;default-ubuntu1204&gt; (0m1.59s).
-----&gt; Kitchen is finished. (0m3.46s)

$ kitchen list
Instance             Driver   Provisioner  Last Action
default-centos65     Vagrant  Chef Solo    Verified
default-ubuntu1204   Vagrant  Chef Solo    Verified
</code></pre>

<p>The final test that is used for the rest of the Test Iterations in
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a>
basically amounts to visiting http://33.33.33.10 with a web browser
and eyeballing the results.  That would be difficult to automate with
serverspec, and one would probably want to use a web automation framework
like <a href="http://docs.seleniumhq.org/">Selenium</a> to do this.  However, you can
at least use serverspec to verify that the Apache Server is serving up
content on port 80 (the default http port).</p>

<p>We can check that the server is listening on port 80 with the <code>port</code> resource:</p>

<pre><code>it 'should be listening on port 80' do
  expect(port 80).to be_listening
end
</code></pre>

<p>We’ll resort to using the <code>command</code> resource to check to see if the server
accepts an HTTP connections and returns something that looks reasonable, as
there doesn’t seem to be an obvious higher-level resource to perform this
action:</p>

<pre><code>it 'should respond to an HTTP request' do
  expect(command 'curl localhost').to return_stdout /.*&lt;title&gt;MyFace Users&lt;\/title&gt;.*/
end
</code></pre>

<p>After adding these two checks, this is what your <code>webserver_spec.rb</code> file should
look like:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/localhost/webserver_spec.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">describe</span> <span class="s1">&#39;MyFace webserver&#39;</span> <span class="k">do</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have a myface user&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">user</span> <span class="s1">&#39;myface&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">exist</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should be running the httpd server&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="k">case</span> <span class="no">RSpec</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">os</span><span class="o">[</span><span class="ss">:family</span><span class="o">]</span>
</span><span class="line">    <span class="k">when</span> <span class="s2">&quot;Ubuntu&quot;</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;apache2&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;httpd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;httpd&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should respond to an HTTP request&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;curl localhost&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*&lt;title&gt;MyFace Users&lt;\/title&gt;.*/</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now we have an automated script that performs some basic tests to verify
that our cookbook enabled the web server properly.  Let the robots do some
of the grunge work!</p>

<h2 id="testing-iteration-17---running-the-suite">Testing Iteration #17 - Running the suite</h2>

<p>Do a final <code>kitchen verify</code> and <code>kitchen list</code>.  Everything should look good:</p>

<pre><code>$ kitchen verify
-----&gt; Starting Kitchen (v1.1.1)
-----&gt; Verifying &lt;default-centos65&gt;...
       Removing /tmp/busser/suites/serverspec
       Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
       Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
       /opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

       MyFace webserver
         should have a myface user
         should be running the httpd server
         should respond to an HTTP request

       Finished in 0.05525 seconds
       3 examples, 0 failures
       Finished verifying &lt;default-centos65&gt; (0m1.53s).
-----&gt; Verifying &lt;default-ubuntu1204&gt;...
       Removing /tmp/busser/suites/serverspec
Uploading /tmp/busser/suites/serverspec/localhost/webserver_spec.rb (mode=0644)
Uploading /tmp/busser/suites/serverspec/spec_helper.rb (mode=0644)
-----&gt; Running serverspec test suite
/opt/chef/embedded/bin/ruby -I/tmp/busser/suites/serverspec -S /opt/chef/embedded/bin/rspec /tmp/busser/suites/serverspec/localhost/webserver_spec.rb --color --format documentation

MyFace webserver
  should have a myface user
  should be running the httpd server
  should respond to an HTTP request

Finished in 0.15965 seconds
3 examples, 0 failures
       Finished verifying &lt;default-ubuntu1204&gt; (0m1.68s).
-----&gt; Kitchen is finished. (0m3.53s)

$ kitchen list
Instance             Driver   Provisioner  Last Action
default-centos65     Vagrant  Chef Solo    Verified
default-ubuntu1204   Vagrant  Chef Solo    Verified
</code></pre>

<h1 id="iteration-18---completing-the-database-test-suite">Iteration #18 - Completing the database test suite</h1>

<p>Let’s wrap this up by finishing off the tests for the database portion in
<a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>
Create a new file called <code>myface/test/integration/default/serverspec/localhost/database_spec.rb</code> to contain the database tests.</p>

<p>In <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/#testing-iteration-7">Testing Iteration #7</a>
we checked to see if the <code>mysqld</code> service was running with the following
command:</p>

<pre><code>$ sudo /sbin/service mysqld status
</code></pre>

<p>There is a similar name difference between the Ubuntu and CentOS services as
there was with the Apache web server.  For Ubuntu, the name of the
MySQL service is <code>mysql</code>.  For CentOS, the name of the service is <code>mysqld</code>.</p>

<p>This should be a piece of cake to write a serverspec test for now:</p>

<pre><code>it 'should be running the database server' do
  case RSpec.configuration.os[:family]
  when "Ubuntu"
    expect(service 'mysql').to be_running
    expect(service 'mysql').to be_enabled
  else
    expect(service 'mysqld').to be_running
    expect(service 'mysqld').to be_enabled
  end
end
</code></pre>

<p>In <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/#testing-iteration-8">Testing Iteration #8</a>
we ran the following command to verify that the myface database was created:</p>

<pre><code>$ mysqlshow -uroot -prootpass
</code></pre>

<p>That’s a simple <code>command</code> resource regular expression:</p>

<pre><code>it 'should have created the myface database' do
  expect(command 'mysqlshow -uroot -prootpass').to return_stdout /.*myface.*/
end
</code></pre>

<p>In <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/#testing-iteration-9">Testing Iteration #9</a>
we created a myface-app MySQL database user and to check to see if the
myface_app user only has rights to the myface database with the following
commands:</p>

<pre><code>$ mysql -uroot -prootpass -e "select user,host from mysql.user;"
$ mysql -uroot -prootpass -e "show grants for 'myface_app'@'localhost';"
</code></pre>

<p>Again, these are just more serverspec <code>command</code>s (<code>\s</code> indicates “any
whitespace character”):</p>

<pre><code>it 'should have created the myface_app user' do
  expect(command 'mysql -uroot -prootpass -e "select user,host from mysql.user;"').to return_stdout /.*myface_app\s+localhost.*/
end

it 'should have given the myface_app database user rights to myface' do
  expect(command 'mysql -uroot -prootpass -e "show grants for \'myface_app\'@\'localhost\';"').to return_stdout /.*GRANT ALL PRIVILEGES ON `myface`.\* TO \'myface_app\'@\'localhost\'.*/
end
</code></pre>

<p>In <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/#testing-iteration-10">Testing Itegration #10</a>
we dumped the contents of the <code>users</code> table to verify it got created:</p>

<pre><code>$ mysql -hlocalhost -umyface_app -psupersecret -Dmyface -e "select id,user_name from users;"'
</code></pre>

<p>You guessed it, yet another <code>command</code>:</p>

<pre><code>it 'should have created the users table' do
  expect(command 'mysql -hlocalhost -umyface_app -psupersecret -Dmyface -e "select id,user_name from users;"').to return_stdout /.*mbower.*/
end
</code></pre>

<p>In <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/#test-iteration-11">Testing Iteration #11</a> we checked
to see if the php5_module was successfully installed:</p>

<pre><code>$ sudo /usr/sbin/httpd -M | grep php5
</code></pre>

<p>Note that there is a <code>php_config</code> serverspec resource for checking
PHP config settings, but that’s not helpful for checking the existence
of PHP, so another command will do (just remember the service name is
different between the two different OSes):</p>

<pre><code>it 'should have installed the Apache php5_module' do
  case RSpec.configuration.os[:family]
  when "Ubuntu"
    expect(command 'sudo /usr/sbin/apache2 -M | grep php5').to return_stdout /.*php5_module.*/
  else
    expect(command 'sudo /usr/sbin/httpd -M | grep php5').to return_stdout /.*php5_module.*/
  end
end
</code></pre>

<p>And there you have it!  Your final <code>database_spec.rb</code> file should resemble the
following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/test/integration/default/serverspec/localhost/database_spec.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">require</span> <span class="s1">&#39;spec_helper&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">describe</span> <span class="s1">&#39;MyFace database&#39;</span> <span class="k">do</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should be running the database server&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="k">case</span> <span class="no">RSpec</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">os</span><span class="o">[</span><span class="ss">:family</span><span class="o">]</span>
</span><span class="line">    <span class="k">when</span> <span class="s2">&quot;Ubuntu&quot;</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;mysql&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;mysql&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;mysqld&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_running</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">service</span> <span class="s1">&#39;mysqld&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">be_enabled</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have created the myface database&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;mysqlshow -uroot -prootpass&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*myface.*/</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have created the myface_app user&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;mysql -uroot -prootpass -e &quot;select user,host from mysql.user;&quot;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*myface_app\s+localhost.*/</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have given the myface_app database user rights to myface&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;mysql -uroot -prootpass -e &quot;show grants for \&#39;myface_app\&#39;@\&#39;localhost\&#39;;&quot;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*GRANT ALL PRIVILEGES ON `myface`.\* TO \&#39;myface_app\&#39;@\&#39;localhost\&#39;.*/</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have created the users table&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;mysql -hlocalhost -umyface_app -psupersecret -Dmyface -e &quot;select id,user_name from users;&quot;&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*mbower.*/</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line">  <span class="n">it</span> <span class="s1">&#39;should have installed the Apache php5_module&#39;</span> <span class="k">do</span>
</span><span class="line">    <span class="k">case</span> <span class="no">RSpec</span><span class="o">.</span><span class="n">configuration</span><span class="o">.</span><span class="n">os</span><span class="o">[</span><span class="ss">:family</span><span class="o">]</span>
</span><span class="line">    <span class="k">when</span> <span class="s2">&quot;Ubuntu&quot;</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;sudo /usr/sbin/apache2 -M | grep php5&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*php5_module.*/</span>
</span><span class="line">    <span class="k">else</span>
</span><span class="line">      <span class="n">expect</span><span class="p">(</span><span class="n">command</span> <span class="s1">&#39;sudo /usr/sbin/httpd -M | grep php5&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">to</span> <span class="n">return_stdout</span> <span class="sr">/.*php5_module.*/</span>
</span><span class="line">    <span class="k">end</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="testing-iteration-19---kitchen-test">Testing Iteration #19 - kitchen test</h2>

<p>Perform a final <code>kitchen verify</code> and <code>kitchen list</code> to check that there are
no syntax errors.  9 tests succeeded!</p>

<p>In addition to the <code>kitchen</code> commands that you have used so far, there’s one
other command that it quite useful - <code>kitchen test</code>.  It runs all the commands
in the Test Kitchen test lifecycle in order:</p>

<p><code>kitchen create</code> - Creates a vagrant instance.</p>

<p><code>kitchen converge</code> - Provision the vagrant instance with Chef, using the run list specified in the <code>.kitchen.yml</code> file.</p>

<p><code>kitchen setup</code> - Install and configure any necessary Test Kitchen plugins needed to run tests.</p>

<p><code>kitchen verify</code> - Run tests.</p>

<p><code>kitchen destroy</code> - Destroy the vagrant instance, removing it from memory &amp; disk.</p>

<p>When you are in the midst of writing tests, using the above commands
interactively can save time (like only running <code>kitchen verify</code> after adding
a new test).  But once the tests are written, normally you will run
<code>kitchen test</code> to run everything in one shot, preferably running as a “latch”
triggered when your cookbook changes are committed to source control.  This
will ensure that your tests are run often.</p>

<h1 id="conclusion">Conclusion</h1>

<p>So hopefully now you understand how to use Test Kitchen and what it’s useful
for.  In the next article in this series, we’ll cover writing tests that can
run before deployment, providing feedback more quickly than with
Test Kitchen (albeit in more limited circumstances), using Chefspec and Guard.
(In the meantime check out <a href="https://twitter.com/michaelpgoetz">Michael Geotz’s</a>
excellent article series on <a href="https://micgo.net/continuous-chefspec-validation-with-guard/">ChefSpec with Guard</a>
as I’m currently coauthoring upcoming O’Reilly Media book on Chef with
<a href="https://twitter.com/sethvargo">Seth Vargo</a>
and probably won’t have time to do further installments in this series
anytime soon until I help finish the d*mn book!)</p>

<p>Now you should be able to test everything but the kitchen sink!  Wait…
actually Test Kitchen has got that covered as well:</p>

<pre><code>$ kitchen sink

                     ___
                    ' _ '.
                  / /` `\ \
                 | |   [__]
                 | |    \{\{
                 | |    \}\}
              _  | |  _ \{\{
  ___________&lt;_&gt;_| |_&lt;_&gt;\}\}________
      .=======^=(___)=^=\{\{====.
     / .----------------\}\}---. \
    / /                 \{\{    \ \
   / /                  \}\}     \ \
  (  '========================='  )
   '-----------------------------'
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Server 2012 Automated Install Settings]]></title>
    <link href="http://misheska.com/blog/2013/07/28/windows-server-2012-automated-install-settings/"/>
    <updated>2013-07-28T20:20:00-07:00</updated>
    <id>http://misheska.com/blog/2013/07/28/windows-server-2012-automated-install-settings</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#disabling-the-language-settings-dialog">Disabling the language settings dialog</a></li>
  <li><a href="#disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</a></li>
  <li><a href="#disabling-the-eula-dialog">Disabling the EULA dialog</a></li>
  <li><a href="#disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</a></li>
  <li><a href="#disabling-the-administrator-password-prompt">Disabling the Administrator password prompt</a></li>
  <li><a href="#set-up-vagrant-autologin">Set up vagrant autologin</a></li>
  <li><a href="#do-not-show-server-manager-at-logon">Do not show Server Manager at logon</a></li>
  <li><a href="#disable-user-account-control-uac">Disable User Account Control (UAC)</a></li>
  <li><a href="#disable-internet-explorer-enhanced-security-configuration">Disable Internet Explorer Enhanced Security Configuration</a></li>
  <li><a href="#disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</a></li>
  <li><a href="#replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</a></li>
  <li><a href="#enable-remote-desktop">Enable Remote Desktop</a></li>
  <li><a href="#turn-off-computer-password">Turn off computer password</a></li>
  <li><a href="#turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</a></li>
</ul>

<p><em>Updated March 19, 2014</em></p>

<ul>
  <li><em>Updated ADK link from version 8 to 8.1</em></li>
  <li><em>Updated link to Autounattend.xml</em></li>
  <li><em>Added note about using KMS keys</em></li>
</ul>

<p>I just recently revised all my automated install XML files for the Windows
System Preparation Tool (Sysprep) that I use for my Windows development
testbed.  For this go around, I’m documenting the XML answer file settings
for each version of Microsoft Windows.  This article covers the XML answer
files settings needed to automate a Windows Server 2012 (64-bit) base
OS install.</p>

<p>You’ll need to use the Windows System Image Manager tool to edit Sysprep
XML answer files.  The Windows System Image Manager is packaged with the
<a href="http://www.microsoft.com/en-us/download/details.aspx?id=39982">Windows Assessment and Deployment Kit</a>
tool suite.  Download and install the Windows Assessment and Deployment Kit
to install the Windows System Image Manager (WSIM).</p>

<p>Link to <a href="https://raw.githubusercontent.com/misheska/basebox-packer/master/template/windows2012/floppy/win2012-datacenter/Autounattend.xml">Autounattend.xml</a> with all the settings in this article.  <em><strong>NOTE:</strong> Right-click and choose “Download Linked File As…” in your web browser, as many web browsers will try to interpret the Xml</em>.</p>

<h1 id="disabling-the-language-settings-dialog">Disabling the language settings dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/language.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/languagecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component 
<em>amd64_Microsoft-Windows-International-Core-WinPE_6.2.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 1 windowsPE</em>.  Using the
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/languagesettings.png" /></p>

<ul>
  <li>InputLocale = <strong>en-US</strong></li>
  <li>SystemLocale = <strong>en-US</strong></li>
  <li>UILanguage = <strong>en-US</strong></li>
  <li>UserLocale = <strong>en-US</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/productkeycomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component 
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserData/ProductKey</em> and choose <em>Add Setting to Pass 1 windowsPE</em>.  Using the
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/productkeysettings.png" /></p>

<ul>
  <li>Key = <em>YOUR_PRODUCT_KEY</em></li>
  <li>WillShowUI = <strong>OnError</strong></li>
</ul>

<p>The official Microsoft KMS keys are listed <a href="http://technet.microsoft.com/en-us/library/jj612867.aspx">here</a> and make a good starting point to test installs.</p>

<h1 id="disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/operatingsystem.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/operatingsystemcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallFrom/Metadata</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/operatingsystemsettings.png" /></p>

<ul>
  <li>Key = <strong>/IMAGE/NAME</strong></li>
  <li>Value = <strong>Windows Server 2012 SERVERDATACENTER</strong></li>
</ul>

<p>NOTE: Make sure the <code>/IMAGE/NAME</code> value matches the Windows Server 2012
Image flavor you selected.  Possible values are:</p>

<ul>
  <li>Windows Server 2012 SERVERDATACENTER</li>
  <li>Windows Server 2012 SERVERDATACENTERCORE</li>
  <li>Windows Server 2012 SERVERSTANDARD</li>
  <li>Windows Server 2012 SERVERSTANDARDCORE</li>
</ul>

<h1 id="disabling-the-eula-dialog">Disabling the EULA dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/eula.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/eulacomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserData</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/eulasettings.png" /></p>

<ul>
  <li>AcceptEula = <strong>true</strong></li>
</ul>

<h1 id="disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/diskallocation.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/diskconfigurationcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/diskconfigurationsettings.png" /></p>

<ul>
  <li>WillShowUI = <strong>OnError</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/diskcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration/Disk</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/disksettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>WillWipDisk = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/createpartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration/Disk/CreatePartitions/CreatePartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/createpartitionsettings.png" /></p>

<ul>
  <li>Extend = <strong>false</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>Size = <strong>10000</strong></li>
  <li>Type = <strong>Primary</strong></li>
</ul>

<p>NOTE: Don’t worry about getting the size exact - just set it to a
reasonable minimum.  In the next setting, we will extend the partition
to fill all remaining disk space on the drive.</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/modifypartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration/Disk/ModifyPartitions/ModifyPartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/modifypartitionsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Extend = <strong>true</strong></li>
  <li>Format = <strong>NTFS</strong></li>
  <li>Letter = <strong>C</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/installtocomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallTo</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/installtosettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<h1 id="disabling-the-administrator-password-prompt">Disabling the Administrator password prompt</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/setadministratorpassword.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/setadministratorpasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserAccounts/AdministratorPassword</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/setadministratorpasswordsettings.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<h1 id="set-up-vagrant-autologin">Set up vagrant autologin</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/ctrlaltdel.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/vagrantaccountcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/vagrantaccount.png" /></p>

<ul>
  <li>Description = <strong>Vagrant User</strong></li>
  <li>DisplayName = <strong>vagrant</strong></li>
  <li>Group = <strong>Administrators</strong></li>
  <li>Name = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/vagrantpasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/vagrantautologoncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.9200.16384_neutral</em>,
right-click on <em>AutoLogon</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/vagrantautologon.png" /></p>

<ul>
  <li>Enabled = <strong>true</strong></li>
  <li>Username = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/vagrantimagepasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>AutoLogon/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<h1 id="do-not-show-server-manager-at-logon">Do not show Server Manager at logon</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/servermanager.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/disableservermanageratlogoncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-ServerManager-SvrMgrNc_6.2.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/disableservermanageratlogonsettings.png" /></p>

<ul>
  <li>DoNotOpenServerManagerAtLogon = <strong>true</strong></li>
</ul>

<h1 id="disable-user-account-control-uac">Disable User Account Control (UAC)</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/uac.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/uaccomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-LUA-Settings_6.2.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 2 offlineServicing</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/uacsettings.png" /></p>

<ul>
  <li>EnableLUA = <strong>false</strong></li>
</ul>

<h1 id="disable-internet-explorer-enhanced-security-configuration">Disable Internet Explorer Enhanced Security Configuration</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/ieesc.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/ieesccomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-ESC_10.0.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/ieescsettings.png" /></p>

<ul>
  <li>IEHardenAdmin = <strong>false</strong></li>
  <li>IEHardenUser = <strong>false</strong></li>
</ul>

<h1 id="disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/iefirstrun.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/iefirstruncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/iefirstrunwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<h1 id="replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/googlesearchcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/googlesearchwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = **true</li>
</ul>

<h1 id="enable-remote-desktop">Enable Remote Desktop</h1>

<p><img src="http://misheska.com/images/sysprep/win2012x64/tsconnectioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-LocalSessionManager_6.2.9200.16384_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/tsconnectionsettings.png" /></p>

<ul>
  <li>fDenyTSConnections = <strong>false</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/firewallgroupcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Networking-MPSSVC-Svc_6.2.9200.16384_neutral</em>,
right-click on <em>FirewallGroups/FirewallGroup</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/firewallgroupsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Group = <strong>Remote Desktop</strong></li>
  <li>Key = <strong>RemoteDesktop</strong></li>
  <li>Profile = <strong>all</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2012x64/rdpsecuritycomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-RDP-WinStationExtensions_6.2.9200.16384_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2012x64/rdpsecuritysettings.png" /></p>

<ul>
  <li>SecurityLayer = <strong>1</strong></li>
  <li>UserAuthentication = <strong>0</strong></li>
</ul>

<h1 id="turn-off-computer-password">Turn off computer password</h1>

<p>Prevent the image from changing its computer account password,
so you can restore old snapshots without being dropped from a domain</p>

<pre><code>REG ADD "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v DisablePasswordChange /t REG_DWORD /d 1 /f
</code></pre>

<p><img src="http://misheska.com/images/sysprep/win2012x64/disablepasswordchangecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/disablepasswordchangesettings.png" /></p>

<ul>
  <li>CommandLine = <strong>REG ADD “HKLM\System\CurrentControlSet\Services\Netlogon\Parameters” /v DisablePasswordChange /t REG_DWORD /d 2 /f</strong></li>
  <li>Description = <strong>Disable computer password change</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>RequiresUserInput <strong>true</strong></li>
</ul>

<h1 id="turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</h1>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set-power-config.bat </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bat"><span class="line"><span class="c">REM Set power configuration to High Performance</span>
</span><span class="line">powercfg -setactive <span class="m">8</span>c<span class="m">5</span>e<span class="m">7</span>fda-e<span class="m">8</span>bf<span class="m">-4</span>a<span class="m">96-9</span>a<span class="m">85</span>-a<span class="m">6</span>e<span class="m">23</span>a<span class="m">8</span>c<span class="m">635</span>c
</span><span class="line"><span class="c">REM Monitor timeout</span>
</span><span class="line">powercfg -Change -monitor-timeout-ac <span class="m">0</span>
</span><span class="line">powercfg -Change -monitor-timeout-dc <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://misheska.com/images/sysprep/win2012x64/powerconfigcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2012x64/powerconfigsettings.png" /></p>

<ul>
  <li>CommandLine = <strong>cmd.exe /c a:set-power-config.bat</strong></li>
  <li>Description = <strong>Turn off all power saving and timeouts</strong></li>
  <li>Order = <strong>2</strong></li>
  <li>RequiresUserInput = <strong>true</strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 8 Automated Install Settings]]></title>
    <link href="http://misheska.com/blog/2013/07/27/windows-8-automated-install-settings/"/>
    <updated>2013-07-27T19:04:00-07:00</updated>
    <id>http://misheska.com/blog/2013/07/27/windows-8-automated-install-settings</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#disabling-the-language-settings-dialog">Disabling the language settings dialog</a></li>
  <li><a href="#disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</a></li>
  <li><a href="#disabling-the-eula-dialog">Disabling the EULA dialog</a></li>
  <li><a href="#disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</a></li>
  <li><a href="#disable-pc-name-dialog">Disable PC name dialog</a></li>
  <li><a href="#disable-settings-dialog">Disable Settings dialog</a></li>
  <li><a href="#disabling-the-sign-in-to-your-pc-dialog">Disabling the Sign in to your PC dialog</a></li>
  <li><a href="#disable-user-account-control-uac">Disable User Account Control (UAC)</a></li>
  <li><a href="#disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</a></li>
  <li><a href="#replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</a></li>
  <li><a href="#enable-remote-desktop">Enable Remote Desktop</a></li>
  <li><a href="#turn-off-computer-password">Turn off computer password</a></li>
  <li><a href="#turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</a></li>
</ul>

<p><em>Updated April 03, 2014</em></p>

<ul>
  <li><em>Updated link to Autounattend.xml</em></li>
</ul>

<p>I just recently revised all my automated install XML files for the Windows
System Preparation Tool (Sysprep) that I use for my Windows development
testbed.  For this go around, I’m documenting the XML answer file settings
for each version of Microsoft Windows.  This article covers the XML answer
files settings needed to automate a Windows 8 (64-bit) base
OS install.</p>

<p>You’ll need to use the Windows System Image Manager tool to edit Sysprep
XML answer files.  The Windows System Image Manager is packaged with the
<a href="http://www.microsoft.com/en-us/download/details.aspx?id=30652">Windows Assessment and Deployment Kit</a>
tool suite.  Download and install the Windows Assessment and Deployment Kit
to install the Windows System Image Manager (WSIM).</p>

<p>Link to <a href="https://github.com/misheska/basebox-packer/raw/master/template/windows8/floppy/win8x64-enterprise/Autounattend.xml">Autounattend.xml</a>
with all the settings in this article.  <em><strong>NOTE:</strong> Right-click and choose “Download Linked File As…” in your web browser, as many web browsers will try to interpret the Xml</em>.</p>

<h1 id="disabling-the-language-settings-dialog">Disabling the language settings dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/language.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/languagecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component 
<em>amd64_Microsoft-Windows-International-Core-WinPE_6.2.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 1 windowsPE</em>.  Using the
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/languagesettings.png" /></p>

<ul>
  <li>InputLocale = <strong>en-US</strong></li>
  <li>SystemLocale = <strong>en-US</strong></li>
  <li>UILanguage = <strong>en-US</strong></li>
  <li>UserLocale = <strong>en-US</strong></li>
</ul>

<h1 id="disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/operatingsystem.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/operatingsystemcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallFrom/Metadata</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/operatingsystemsettings.png" /></p>

<ul>
  <li>Key = <strong>/IMAGE/NAME</strong></li>
  <li>Value = <strong>Windows 8 Enterprise</strong></li>
</ul>

<h1 id="disabling-the-eula-dialog">Disabling the EULA dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/eula.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/eulacomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserData</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/eulasettings.png" /></p>

<ul>
  <li>AcceptEula = <strong>true</strong></li>
</ul>

<h1 id="disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/diskallocation.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/diskconfigurationcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/diskconfigurationsettings.png" /></p>

<ul>
  <li>WillShowUI = <strong>OnError</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/diskcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration/Disk</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/disksettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>WillWipDisk = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/createpartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration/Disk/CreatePartitions/CreatePartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/createpartitionsettings.png" /></p>

<ul>
  <li>Extend = <strong>false</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>Size = <strong>10000</strong></li>
  <li>Type = <strong>Primary</strong></li>
</ul>

<p>NOTE: Don’t worry about getting the size exact - just set it to a
reasonable minimum.  In the next setting, we will extend the partition
to fill all remaining disk space on the drive.</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/modifypartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>DiskConfiguration/Disk/ModifyPartitions/ModifyPartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/modifypartitionsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Extend = <strong>true</strong></li>
  <li>Format = <strong>NTFS</strong></li>
  <li>Letter = <strong>C</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/installtocomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallTo</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/installtosettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<h1 id="disable-pc-name-dialog">Disable PC name dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/pcname.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/pcnamecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/pcnamesettings.png" /></p>

<ul>
  <li>Value - <strong>vagrant-win7</strong></li>
  <li>TimeZone = <strong>Pacific Standard Time</strong></li>
</ul>

<h1 id="disable-settings-dialog">Disable Settings dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/settings.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/settingscomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>OOBE</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/settingssettings.png" /></p>

<ul>
  <li>NetworkLocation = <strong>Work</strong></li>
  <li>ProtectYourPC = <strong>3</strong></li>
</ul>

<h1 id="disabling-the-sign-in-to-your-pc-dialog">Disabling the Sign in to your PC dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/signin.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/vagrantaccountcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/vagrantaccount.png" /></p>

<ul>
  <li>Description = <strong>Vagrant User</strong></li>
  <li>DisplayName = <strong>vagrant</strong></li>
  <li>Group = <strong>Administrators</strong></li>
  <li>Name = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/vagrantimagepasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/vagrantautologoncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click on <em>AutoLogon</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/vagrantautologon.png" /></p>

<ul>
  <li>Enabled = <strong>true</strong></li>
  <li>Username = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/vagrantimagepasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>AutoLogon/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<h1 id="disable-user-account-control-uac">Disable User Account Control (UAC)</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/uaccomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-LUA-Settings_6.2.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 2 offlineServicing</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/uacsettings.png" /></p>

<ul>
  <li>EnableLUA = <strong>false</strong></li>
</ul>

<h1 id="disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/iefirstruncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/iefirstrunwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<h1 id="replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/iefirstrun.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/googlesearchcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/googlesearchwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_10.0.9200.16384_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = **true</li>
</ul>

<h1 id="enable-remote-desktop">Enable Remote Desktop</h1>

<p><img src="http://misheska.com/images/sysprep/win8x64/rdp.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win8x64/tsconnectioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-LocalSessionManager_6.2.9200.16384_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/tsconnectionsettings.png" /></p>

<ul>
  <li>fDenyTSConnections = <strong>false</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/firewallgroupcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Networking-MPSSVC-Svc_6.2.9200.16384_neutral</em>,
right-click on <em>FirewallGroups/FirewallGroup</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/firewallgroupsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Group = <strong>Remote Desktop</strong></li>
  <li>Key = <strong>RemoteDesktop</strong></li>
  <li>Profile = <strong>all</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win8x64/rdpsecuritycomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-RDP-WinStationExtensions_6.1.7601.17514_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win8x64/rdpsecuritysettings.png" /></p>

<ul>
  <li>SecurityLayer = <strong>1</strong></li>
  <li>UserAuthentication = <strong>0</strong></li>
</ul>

<h1 id="turn-off-computer-password">Turn off computer password</h1>

<p>Prevent the image from changing its computer account password,
so you can restore old snapshots without being dropped from a domain</p>

<pre><code>REG ADD "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v DisablePasswordChange /t REG_DWORD /d 1 /f
</code></pre>

<p><img src="http://misheska.com/images/sysprep/win8x64/disablepasswordchangecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win8x64/disablepasswordchangesettings.png" /></p>

<ul>
  <li>CommandLine = <strong>REG ADD “HKLM\System\CurrentControlSet\Services\Netlogon\Parameters” /v DisablePasswordChange /t REG_DWORD /d 2 /f</strong></li>
  <li>Description = <strong>Disable computer password change</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>RequiresUserInput <strong>true</strong></li>
</ul>

<h1 id="turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</h1>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set-power-config.bat </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bat"><span class="line"><span class="c">REM Set power configuration to High Performance</span>
</span><span class="line">powercfg -setactive <span class="m">8</span>c<span class="m">5</span>e<span class="m">7</span>fda-e<span class="m">8</span>bf<span class="m">-4</span>a<span class="m">96-9</span>a<span class="m">85</span>-a<span class="m">6</span>e<span class="m">23</span>a<span class="m">8</span>c<span class="m">635</span>c
</span><span class="line"><span class="c">REM Monitor timeout</span>
</span><span class="line">powercfg -Change -monitor-timeout-ac <span class="m">0</span>
</span><span class="line">powercfg -Change -monitor-timeout-dc <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://misheska.com/images/sysprep/win7x64/powerconfigcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.2.9200.16384_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/powerconfigsettings.png" /></p>

<ul>
  <li>CommandLine = <strong>cmd.exe /c a:set-power-config.bat</strong></li>
  <li>Description = <strong>Turn off all power saving and timeouts</strong></li>
  <li>Order = <strong>2</strong></li>
  <li>RequiresUserInput = <strong>true</strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows 7 Automated Install Settings]]></title>
    <link href="http://misheska.com/blog/2013/07/26/windows-7-automated-install-settings/"/>
    <updated>2013-07-26T10:48:00-07:00</updated>
    <id>http://misheska.com/blog/2013/07/26/windows-7-automated-install-settings</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#disabling-the-language-settings-dialog">Disabling the language settings dialog</a></li>
  <li><a href="#disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</a></li>
  <li><a href="#disabling-the-eula-dialog">Disabling the EULA dialog</a></li>
  <li><a href="#disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</a></li>
  <li><a href="#disabling-the-account-and-computer-name-dialog">Disabling the account and computer name dialog</a></li>
  <li><a href="#disable-computer-name-dialog">Disable Computer Name dialog</a></li>
  <li><a href="#disable-protect-computer-dialog">Disable Protect Computer dialog</a></li>
  <li><a href="#disable-user-account-control-uac">Disable User Account Control (UAC)</a></li>
  <li><a href="#disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</a></li>
  <li><a href="#replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</a></li>
  <li><a href="#enable-remote-desktop">Enable Remote Desktop</a></li>
  <li><a href="#really-disable-set-network-location-prompt">(Really) Disable Set Network Location Prompt</a></li>
  <li><a href="#turn-off-computer-password">Turn off computer password</a></li>
  <li><a href="#turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</a></li>
</ul>

<p><em>Updated April 03, 2014</em></p>

<ul>
  <li><em>Updated link to Autounattend.xml</em></li>
</ul>

<p>I just recently revised all my automated install XML files for the Windows
System Preparation Tool (Sysprep) that I use for my Windows development
testbed.  For this go around, I’m documenting the XML answer file settings
for each version of Microsoft Windows.  This article covers the XML answer
files settings needed to automate a Windows 7 (64-bit) base
OS install.</p>

<p>You’ll need to use the Windows System Image Manager tool to edit Sysprep
XML answer files.  The Windows System Image Manager is packaged with the
<a href="http://www.microsoft.com/en-us/download/details.aspx?id=30652">Windows Assessment and Deployment Kit</a>
tool suite.  Download and install the Windows Assessment and Deployment Kit
to install the Windows System Image Manager (WSIM).</p>

<p><a href="http://technet.microsoft.com/en-us/library/dd744272(v=ws.10).aspx">Settings to Use for an Unattended Installation</a></p>

<p><a href="http://technet.microsoft.com/en-us/library/dd744547(WS.10).aspx">Automate Windows Welcome</a></p>

<p>Link to <a href="https://github.com/misheska/basebox-packer/raw/master/template/windows7/floppy/win7x64-enterprise/Autounattend.xml">Autounattend.xml</a>
with all the settings in this article.  <em><strong>NOTE:</strong> Right-click and choose “Download Linked File As…” in your web browser, as many web browsers will try to interpret the Xml</em>.</p>

<h1 id="disabling-the-language-settings-dialog">Disabling the language settings dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/language.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/languagecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component 
<em>amd64_Microsoft-Windows-International-Core-WinPE_6.1.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 1 windowsPE</em>.  Using the
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/languagesettings.png" /></p>

<ul>
  <li>InputLocale = <strong>en-US</strong></li>
  <li>SystemLocale = <strong>en-US</strong></li>
  <li>UILanguage = <strong>en-US</strong></li>
  <li>UserLocale = <strong>en-US</strong></li>
</ul>

<h1 id="disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/operatingsystem.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/operatingsystemcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallFrom/Metadata</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p>For Windows 7 Enterprise:
<img class="right" src="http://misheska.com/images/sysprep/win7x64/operatingsystemsettings.png" /></p>

<ul>
  <li>Key = <strong>/IMAGE/NAME</strong></li>
  <li>Value = <strong>Windows 7 ENTERPRISE</strong></li>
</ul>

<p>For Windows 7 Professional:
<img class="right" src="http://misheska.com/images/sysprep/win7x64/operatingsystemsettingspro.png" /></p>

<ul>
  <li>Key = <strong>/IMAGE/NAME</strong></li>
  <li>Value = <strong>Windows 7 PROFESSIONAL</strong></li>
</ul>

<h1 id="disabling-the-eula-dialog">Disabling the EULA dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/eula.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/eulacomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>UserData</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/eulasettings.png" /></p>

<ul>
  <li>AcceptEula = <strong>true</strong></li>
</ul>

<h1 id="disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/diskallocation.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/diskconfigurationcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/diskconfigurationsettings.png" /></p>

<ul>
  <li>WillShowUI = <strong>OnError</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/diskcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration/Disk</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/disksettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>WillWipDisk = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/createpartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration/Disk/CreatePartitions/CreatePartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/createpartitionsettings.png" /></p>

<ul>
  <li>Extend = <strong>false</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>Size = <strong>10000</strong></li>
  <li>Type = <strong>Primary</strong></li>
</ul>

<p>NOTE: Don’t worry about getting the size exact - just set it to a
reasonable minimum.  In the next setting, we will extend the partition
to fill all remaining disk space on the drive.</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/modifypartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration/Disk/ModifyPartitions/ModifyPartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/modifypartitionsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Extend = <strong>true</strong></li>
  <li>Format = <strong>NTFS</strong></li>
  <li>Letter = <strong>C</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/installtocomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallTo</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/installtosettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<h1 id="disabling-the-account-and-computer-name-dialog">Disabling the account and computer name dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/account.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/vagrantaccountcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/vagrantaccount.png" /></p>

<ul>
  <li>Description = <strong>Vagrant User</strong></li>
  <li>DisplayName = <strong>vagrant</strong></li>
  <li>Group = <strong>Administrators</strong></li>
  <li>Name = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/vagrantpasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/vagrantautologoncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>AutoLogon</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/vagrantautologon.png" /></p>

<ul>
  <li>Enabled = <strong>true</strong></li>
  <li>Username = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/vagrantimagepasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>AutoLogon/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<h1 id="disable-computer-name-dialog">Disable Computer Name dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/computername.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/computernamecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/computernamesettings.png" /></p>

<ul>
  <li>Value - <strong>vagrant-win7</strong></li>
  <li>TimeZone = <strong>Pacific Standard Time</strong></li>
</ul>

<h1 id="disable-protect-computer-dialog">Disable Protect Computer dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/protect.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win7x64/protectcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>OOBE</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/protectsettings.png" /></p>

<ul>
  <li>NetworkLocation = <strong>Work</strong></li>
  <li>ProtectYourPC = <strong>3</strong></li>
</ul>

<h1 id="disable-user-account-control-uac">Disable User Account Control (UAC)</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/uaccomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-LUA-Settings_6.1.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 2 offlineServicing</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/uacsettings.png" /></p>

<ul>
  <li>EnableLUA = <strong>false</strong></li>
</ul>

<h1 id="disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/iefirstruncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_8.0.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/iefirstrunwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_8.0.7601.17514_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<h1 id="replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/googlesearchcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_8.0.7600.16385_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/googlesearchwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_8.0.7601.17514_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = <strong>true</strong></li>
</ul>

<h1 id="enable-remote-desktop">Enable Remote Desktop</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/tsconnectioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-LocalSessionManager_6.1.7601.17514_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/tsconnectionsettings.png" /></p>

<ul>
  <li>fDenyTSConnections = <strong>false</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/firewallgroupcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Networking-MPSSVC-Svc_6.1.7601.175414_neutral</em>,
right-click on <em>FirewallGroups/FirewallGroup</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/firewallgroupsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Group = <strong>Remote Desktop</strong></li>
  <li>Key = <strong>RemoteDesktop</strong></li>
  <li>Profile = <strong>all</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win7x64/rdpsecuritycomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-RDP-WinStationExtensions_6.1.7601.17514_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win7x64/rdpsecuritysettings.png" /></p>

<ul>
  <li>SecurityLayer = <strong>1</strong></li>
  <li>UserAuthentication = <strong>0</strong></li>
</ul>

<h1 id="really-disable-set-network-location-prompt">(Really) Disable Set Network Location Prompt</h1>

<p><img src="http://misheska.com/images/sysprep/win7x64/networklocation.png" /></p>

<pre><code>REG ADD "HKLM\System\CurrentControlSet\Control\Network\NewNetworkWindowOff"
</code></pre>

<p><img src="http://misheska.com/images/sysprep/win7x64/networklocationcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/networklocationsettings.png" /></p>

<ul>
  <li>CommandLine = <strong>REG ADD “HKLM\System\CurrentControlSet\Control\Network\NewNetworkWindowOff”</strong></li>
  <li>Description = <strong>Disable Set Network Location Prompt</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>RequiresUserInput <strong>true</strong></li>
</ul>

<h1 id="turn-off-computer-password">Turn off computer password</h1>

<p>Prevent the image from changing its computer account password,
so you can restore old snapshots without being dropped from a domain</p>

<pre><code>REG ADD "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v DisablePasswordChange /t REG_DWORD /d 1 /f
</code></pre>

<p><img src="http://misheska.com/images/sysprep/win7x64/disablepasswordchangecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/disablepasswordchangesettings.png" /></p>

<ul>
  <li>CommandLine = <strong>REG ADD “HKLM\System\CurrentControlSet\Services\Netlogon\Parameters” /v DisablePasswordChange /t REG_DWORD /d 2 /f</strong></li>
  <li>Description = <strong>Disable computer password change</strong></li>
  <li>Order = <strong>2</strong></li>
  <li>RequiresUserInput <strong>true</strong></li>
</ul>

<h1 id="turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</h1>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set-power-config.bat </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bat"><span class="line"><span class="c">REM Set power configuration to High Performance</span>
</span><span class="line">powercfg -setactive <span class="m">8</span>c<span class="m">5</span>e<span class="m">7</span>fda-e<span class="m">8</span>bf<span class="m">-4</span>a<span class="m">96-9</span>a<span class="m">85</span>-a<span class="m">6</span>e<span class="m">23</span>a<span class="m">8</span>c<span class="m">635</span>c
</span><span class="line"><span class="c">REM Monitor timeout</span>
</span><span class="line">powercfg -Change -monitor-timeout-ac <span class="m">0</span>
</span><span class="line">powercfg -Change -monitor-timeout-dc <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://misheska.com/images/sysprep/win7x64/powerconfigcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win7x64/powerconfigsettings.png" /></p>

<ul>
  <li>CommandLine = <strong>cmd.exe /c a:set-power-config.bat</strong></li>
  <li>Description = <strong>Turn off all power saving and timeouts</strong></li>
  <li>Order = <strong>3</strong></li>
  <li>RequiresUserInput = <strong>true</strong></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Windows Server 2008 R2 automated install settings]]></title>
    <link href="http://misheska.com/blog/2013/07/25/windows-server-2008-r2-automated-install-settings/"/>
    <updated>2013-07-25T23:20:00-07:00</updated>
    <id>http://misheska.com/blog/2013/07/25/windows-server-2008-r2-automated-install-settings</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#disabling-the-language-settings-dialog">Disabling the language settings dialog</a></li>
  <li><a href="#disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</a></li>
  <li><a href="#disabling-the-eula-dialog">Disabling the EULA dialog</a></li>
  <li><a href="#disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</a></li>
  <li><a href="#disabling-the-administrator-password-prompt">Disabling the Administrator password prompt</a></li>
  <li><a href="#set-up-vagrant-autologin">Set up vagrant autologin</a></li>
  <li><a href="#disable-initial-configuration-dialog">Disable Initial Configuration Dialog</a></li>
  <li><a href="#do-not-show-server-manager-at-logon">Do not show Server Manager at logon</a></li>
  <li><a href="#disable-user-account-control-uac">Disable User Account Control (UAC)</a></li>
  <li><a href="#disable-internet-explorer-enhanced-security-configuration">Disable Internet Explorer Enhanced Security Configuration</a></li>
  <li><a href="#disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</a></li>
  <li><a href="#replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</a></li>
  <li><a href="#enable-remote-desktop">Enable Remote Desktop</a></li>
  <li><a href="#turn-off-computer-password">Turn off computer password</a></li>
  <li><a href="#turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</a></li>
</ul>

<p><em>Updated April 03, 2014</em></p>

<ul>
  <li><em>Updated link to Autounattend.xml</em></li>
</ul>

<p>I just recently revised all my automated install XML files for the Windows
System Preparation Tool (Sysprep) that I use for my Windows development
testbed.  For this go around, I’m documenting the XML answer file settings
for each version of Microsoft Windows.  This article covers the XML answer
files settings needed to automate a Windows Server 2008 R2 (64-bit) base
OS install.</p>

<p>You’ll need to use the Windows System Image Manager tool to edit Sysprep
XML answer files.  The Windows System Image Manager is packaged with the
<a href="http://www.microsoft.com/en-us/download/details.aspx?id=30652">Windows Assessment and Deployment Kit</a>
tool suite.  Download and install the Windows Assessment and Deployment Kit
to install the Windows System Image Manager (WSIM).</p>

<p>Link to <a href="https://github.com/misheska/basebox-packer/raw/master/template/windows2008r2/floppy/win2008r2-datacenter/Autounattend.xml">Autounattend.xml</a>
with all the settings in this article.  <em><strong>NOTE:</strong> Right-click and choose “Download Linked File As…” in your web browser, as many web browsers will try to interpret the Xml</em>.</p>

<h1 id="disabling-the-language-settings-dialog">Disabling the language settings dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/language.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/languagecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component 
<em>amd64_Microsoft-Windows-International-Core-WinPE_6.1.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 1 windowsPE</em>.  Using the
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/languagesettings.png" /></p>

<ul>
  <li>InputLocale = <strong>en-US</strong></li>
  <li>SystemLocale = <strong>en-US</strong></li>
  <li>UILanguage = <strong>en-US</strong></li>
  <li>UserLocale = <strong>en-US</strong></li>
</ul>

<h1 id="disabling-the-select-operating-system-dialog">Disabling the Select Operating System dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/operatingsystem.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/operatingsystemcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallFrom/Metadata</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/operatingsystemsettings.png" /></p>

<ul>
  <li>Key = <strong>/IMAGE/NAME</strong></li>
  <li>Value = <strong>Windows Server 2008 R2 SERVERDATACENTER</strong></li>
</ul>

<p>NOTE: Make sure the <code>/IMAGE/NAME</code> value matches the Windows 2008R2
Image flavor you selected.  Possible values are:</p>

<ul>
  <li>Windows Server 2008 R2 SERVERDATACENTER</li>
  <li>Windows Server 2008 R2 SERVERDATACENTERCORE</li>
  <li>Windows Server 2008 R2 SERVERENTERPRISE</li>
  <li>Windows Server 2008 R2 SERVERENTERPRISECORE</li>
  <li>Windows Server 2008 R2 SERVERSTANDARD</li>
  <li>Windows Server 2008 R2 SERVERSTANDARDCORE</li>
  <li>Windows Server 2008 R2 SERVERWEB</li>
  <li>Windows Server 2008 R2 SERVERWEBCORE</li>
</ul>

<h1 id="disabling-the-eula-dialog">Disabling the EULA dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/eula.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/eulacomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>UserData</em> and choose
<em>Add Setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/eulasettings.png" /></p>

<ul>
  <li>AcceptEula = <strong>true</strong></li>
</ul>

<h1 id="disabling-the-disk-allocation-dialog">Disabling the Disk Allocation dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/diskallocation.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/diskconfigurationcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/diskconfigurationsettings.png" /></p>

<ul>
  <li>WillShowUI = <strong>OnError</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/diskcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration/Disk</em> and choose
<em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/disksettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>WillWipDisk = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/createpartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration/Disk/CreatePartitions/CreatePartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/createpartitionsettings.png" /></p>

<ul>
  <li>Extend = <strong>false</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>Size = <strong>10000</strong></li>
  <li>Type = <strong>Primary</strong></li>
</ul>

<p>NOTE: Don’t worry about getting the size exact - just set it to a
reasonable minimum.  In the next setting, we will extend the partition
to fill all remaining disk space on the drive.</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/modifypartitioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>DiskConfiguration/Disk/ModifyPartitions/ModifyPartition</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/modifypartitionsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Extend = <strong>true</strong></li>
  <li>Format = <strong>NTFS</strong></li>
  <li>Letter = <strong>C</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/installtocomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Setup_6.1.7600.16385_neutral</em>,
right-click on <em>ImageInstall/OSImage/InstallTo</em> and 
choose <em>Add setting to Pass 1 windowsPE</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/installtosettings.png" /></p>

<ul>
  <li>DiskID = <strong>0</strong></li>
  <li>PartitionID = <strong>1</strong></li>
</ul>

<h1 id="disabling-the-administrator-password-prompt">Disabling the Administrator password prompt</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/setadministratorpassword.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/setadministratorpasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>UserAccounts/AdministratorPassword</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/setadministratorpasswordsettings.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<h1 id="set-up-vagrant-autologin">Set up vagrant autologin</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/ctrlaltdel.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/vagrantaccountcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/vagrantaccount.png" /></p>

<ul>
  <li>Description = <strong>Vagrant User</strong></li>
  <li>DisplayName = <strong>vagrant</strong></li>
  <li>Group = <strong>Administrators</strong></li>
  <li>Name = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/vagrantpasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>UserAccounts/LocalAccounts/LocalAccount/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/vagrantautologoncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>AutoLogon</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/vagrantautologon.png" /></p>

<ul>
  <li>Enabled = <strong>true</strong></li>
  <li>Username = <strong>vagrant</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/vagrantimagepasswordcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click on <em>AutoLogon/Password</em> and choose
<em>Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em> and
<em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/vagrantpassword.png" /></p>

<ul>
  <li>Value = <strong>vagrant</strong></li>
</ul>

<h1 id="disable-initial-configuration-dialog">Disable Initial Configuration Dialog</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/initialconfiguration.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/initialconfigurationcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-OutOfBoxExperience_6.1.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/initialconfigurationsettings.png" /></p>

<ul>
  <li>DoNotOpenInitialConfigurationTasksAtLogon = <strong>true</strong></li>
</ul>

<h1 id="do-not-show-server-manager-at-logon">Do not show Server Manager at logon</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/disableservermanageratlogon.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/disableservermanageratlogoncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-ServerManager-SvrMgrNc_6.1.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/disableservermanageratlogonsettings.png" /></p>

<ul>
  <li>DoNotOpenServerManagerAtLogon = <strong>true</strong></li>
</ul>

<h1 id="disable-user-account-control-uac">Disable User Account Control (UAC)</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/uaccomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-LUA-Settings_6.1.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 2 offlineServicing</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/uacsettings.png" /></p>

<ul>
  <li>EnableLUA = <strong>false</strong></li>
</ul>

<h1 id="disable-internet-explorer-enhanced-security-configuration">Disable Internet Explorer Enhanced Security Configuration</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/ieesccomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-ESC_8.0.7601.17514_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/ieescsettings.png" /></p>

<ul>
  <li>IEHardenAdmin = <strong>false</strong></li>
  <li>IEHardenUser = <strong>false</strong></li>
</ul>

<h1 id="disable-internet-explorer-first-run-wizard">Disable Internet Explorer First Run Wizard</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/iefirstruncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_8.0.7600.16385_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/iefirstrunwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_8.0.7601.17514_neutral</em>,
right-click and choose <em>Add Setting to Pass 4 specialize</em>.  Using the 
Answer File <em>Properties</em> and <em>Settings</em> panes, configure the following
settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/iefirstrunsettings.png" /></p>

<ul>
  <li>DisableAccelerators = <strong>true</strong></li>
  <li>DisableFirstRunWizard = <strong>true</strong></li>
  <li>Home_Page = <strong>about:blank</strong></li>
</ul>

<h1 id="replace-internet-explorer-bing-search-with-google">Replace Internet Explorer Bing search with Google</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/googlesearchcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-IE-InternetExplorer_8.0.7600.16385_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = <strong>true</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/googlesearchwowcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>wow64_Microsoft-Windows-IE-InternetExplorer_8.0.7601.17514_neutral</em>,
right-click on <em>SearchScopes/Scope</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/googlesearchsettings.png" /></p>

<ul>
  <li>ScopeDefault = <strong>true</strong></li>
  <li>ScopeDisplayName = <strong>Google</strong></li>
  <li>ScopeKey = <strong>Google</strong></li>
  <li>ScopeUrl = <strong>http://www.google.com/search?q={searchTerms}</strong></li>
  <li>ShowSearchSuggestions = <strong>true</strong></li>
</ul>

<h1 id="enable-remote-desktop">Enable Remote Desktop</h1>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/remotedesktopenabled.png" /></p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/tsconnectioncomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-LocalSessionManager_6.1.7601.17514_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/tsconnectionsettings.png" /></p>

<ul>
  <li>fDenyTSConnections = <strong>false</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/firewallgroupcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Networking-MPSSVC-Svc_6.1.7601.175414_neutral</em>,
right-click on <em>FirewallGroups/FirewallGroup</em> and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/firewallgroupsettings.png" /></p>

<ul>
  <li>Active = <strong>true</strong></li>
  <li>Group = <strong>Remote Desktop</strong></li>
  <li>Key = <strong>RemoteDesktop</strong></li>
  <li>Profile = <strong>all</strong></li>
</ul>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/rdpsecuritycomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-TerminalServices-RDP-WinStationExtensions_6.1.7601.17514_neutral</em>,
right-click and choose
<em>Add Setting to Pass 4 specialize</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img class="right" src="http://misheska.com/images/sysprep/win2008R2x64/rdpsecuritysettings.png" /></p>

<ul>
  <li>SecurityLayer = <strong>1</strong></li>
  <li>UserAuthentication = <strong>0</strong></li>
</ul>

<h1 id="turn-off-computer-password">Turn off computer password</h1>

<p>Prevent the image from changing its computer account password,
so you can restore old VM snapshots without being dropped from a domain</p>

<pre><code>REG ADD "HKLM\System\CurrentControlSet\Services\Netlogon\Parameters" /v DisablePasswordChange /t REG_DWORD /d 1 /f
</code></pre>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/disablepassworchangecomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/disablepassworchangesettings.png" /></p>

<ul>
  <li>CommandLine = <strong>REG ADD “HKLM\System\CurrentControlSet\Services\Netlogon\Parameters” /v DisablePasswordChange /t REG_DWORD /d 1 /f</strong></li>
  <li>Description = <strong>Disable computer password change</strong></li>
  <li>Order = <strong>1</strong></li>
  <li>RequiresUserInput <strong>true</strong></li>
</ul>

<h1 id="turn-off-all-power-saving-and-timeouts">Turn off all power saving and timeouts</h1>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>set-power-config.bat </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="bat"><span class="line"><span class="c">REM Set power configuration to High Performance</span>
</span><span class="line">powercfg -setactive <span class="m">8</span>c<span class="m">5</span>e<span class="m">7</span>fda-e<span class="m">8</span>bf<span class="m">-4</span>a<span class="m">96-9</span>a<span class="m">85</span>-a<span class="m">6</span>e<span class="m">23</span>a<span class="m">8</span>c<span class="m">635</span>c
</span><span class="line"><span class="c">REM Monitor timeout</span>
</span><span class="line">powercfg -Change -monitor-timeout-ac <span class="m">0</span>
</span><span class="line">powercfg -Change -monitor-timeout-dc <span class="m">0</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/powerconfigcomponents.png" /></p>

<p>In the <em>Windows Image</em> pane, select the component
<em>amd64_Microsoft-Windows-Shell-Setup_6.1.7601.17514_neutral</em>,
right-click <em>FirstLogonCommands/SynchronousCommand” and choose
_Add Setting to Pass 7 oobeSystem</em>.  Using the Answer File <em>Properties</em>
and <em>Settings</em> panes, configure the following settings:</p>

<p><img src="http://misheska.com/images/sysprep/win2008R2x64/powerconfigsettings.png" /></p>

<ul>
  <li>CommandLine = <strong>cmd.exe /c a:set-power-config.bat</strong></li>
  <li>Description = <strong>Turn off all power saving and timeouts</strong></li>
  <li>Order = <strong>2</strong></li>
  <li>RequiresUserInput = <strong>true</strong></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started Writing Chef Cookbooks the Berkshelf Way, Part 2]]></title>
    <link href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/"/>
    <updated>2013-06-23T11:37:00-07:00</updated>
    <id>http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#iteration-7---install-mysql">Iteration #7 - Install MySQL</a>    <ul>
      <li><a href="#testing-iteration-7">Testing Iteration #7</a></li>
    </ul>
  </li>
  <li><a href="#iteration-8---create-the-myface-database">Iteration #8 - Create the MyFace Database</a>    <ul>
      <li><a href="#testing-iteration-8">Testing Iteration #8</a></li>
    </ul>
  </li>
  <li><a href="#iteration-9---create-a-mysql-user">Iteration #9 - Create a MySQL user</a>    <ul>
      <li><a href="#testing-iteration-9">Testing Iteration #9</a></li>
    </ul>
  </li>
  <li><a href="#iteration-10---create-a-table-for-users">Iteration #10 - Create a table for users</a>    <ul>
      <li><a href="#testing-iteration-10">Testing Iteration #10</a></li>
    </ul>
  </li>
  <li><a href="#iteration-11---install-php">Iteration #11 - Install PHP</a>    <ul>
      <li><a href="#test-iteration-11">Test Iteration #11</a></li>
    </ul>
  </li>
  <li><a href="#iteration-12---add-php-sizzle">Iteration #12 - Add PHP Sizzle</a>    <ul>
      <li><a href="#testing-iteration-12">Testing Iteration #12</a></li>
    </ul>
  </li>
  <li><a href="#more-to-come">More to Come!</a></li>
</ul>

<p><em>Updated December 29, 2013</em></p>

<ul>
  <li><em>Bumped apache2 cookbook reference from 1.7.x to 1.8.x</em></li>
  <li><em>Bumped database cookbook reference from 1.4.x to 1.6.x</em></li>
  <li><em>Per Nicholas Johns removed php 5.5 deprecated mysql</em>* functions_</li>
  <li><em>Replaced symbol references with strings to match part 1 changes</em></li>
  <li><em>Added Windows instructions</em></li>
</ul>

<p><em>Updated September 1, 2013</em></p>

<ul>
  <li><em>Bumped apache2 cookbook reference from 1.6.x to 1.7.x</em></li>
  <li><em>Bumped database cookbook reference from 1.3.x to 1.4.x</em></li>
</ul>

<p><em>Updated August 7, 2013</em></p>

<ul>
  <li><em>Fixed error in Iteration #10 test per Jeff Thomas</em></li>
</ul>

<p><em>Updated July 23rd, 2013</em></p>

<ul>
  <li><em>Referenced Sean OMeara’s &amp; Charles Johnson’s latest myface example app</em></li>
</ul>

<p>This is a second article in a series on writing Opscode Chef cookbooks the
Berkshelf Way.  Here’s a link to <a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a>.  The source code
examples covered in this article can be found on Github:
<a href="https://github.com/misheska/myface">https://github.com/misheska/myface</a></p>

<p>In this installment, <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>,
 we’re going to create a new <code>database</code> recipe.  In <a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part1</a>
MyFace is just a web application serving up a static page.  Now we’re going to
enhance MyFace so that it stores account information in a persistent 
MySQL database.</p>

<p>Thanks go out to the Opscode Advanced Chef Cookbook Authoring class and specifically 
<a href="https://github.com/someara/myface-cookbook">Sean OMeara and Charles Johnson</a> for the database and PHP code used in this article.</p>

<h1 id="iteration-7---install-mysql">Iteration #7 - Install MySQL</h1>

<p>Edit <code>metadata.rb</code> and add a reference to the <code>mysql</code> cookbook.  Also
bump the version to 2.0.0 because we know that there will be incompatible API
changes, moving to MySQL, per <a href="http://semver.org/">Semantic Versioning</a>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/metadata.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">name</span>             <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">maintainer</span>       <span class="s1">&#39;Mischa Taylor&#39;</span>
</span><span class="line"><span class="n">maintainer_email</span> <span class="s1">&#39;mischa@misheska.com&#39;</span>
</span><span class="line"><span class="n">license</span>          <span class="s1">&#39;Apache 2.0&#39;</span>
</span><span class="line"><span class="n">description</span>      <span class="s1">&#39;Installs/Configures myface&#39;</span>
</span><span class="line"><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;README.md&#39;</span><span class="p">))</span>
</span><span class="line"><span class="n">version</span>          <span class="s1">&#39;2.0.0&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;apache2&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.8.0&#39;</span>
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 4.0.0&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Create a new recipe called <code>recipes/database.rb</code> which includes the MySQL
cookbook’s server recipe (this is a similar abstraction to what you created in
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Part 1</a>
with <code>recipes/webserver.rb</code>):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/database.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: database</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2012 YOUR_NAME</span>
</span><span class="line"><span class="c1"># </span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;mysql::server&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Wire the <code>database</code> recipe into the MyFace cookbook by adding an
<code>include_recipe</code> reference to <code>recipes/default.rb</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: default</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;myface::database&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;myface::webserver&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>vagrant provision</code> to converge your changes.</p>

<pre><code>$ vagrant provision
[Berkshelf] This version of the Berkshelf plugin has not been fully tested on this version of Vagrant.
[Berkshelf] You should check for a newer version of vagrant-berkshelf.
[Berkshelf] If you encounter any errors with this version, please report them at https://github.com/RiotGames/vagrant-berkshelf/issues
[Berkshelf] You can also join the discussion in #berkshelf on Freenode.
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/default/vagrant/berkshelf-20131228-44581-4bhc9d-default'
[Berkshelf] Using myface (2.0.0)
[Berkshelf] Using apache2 (1.8.14)
[Berkshelf] Installing mysql (4.0.14) from site: 'http://cookbooks.opscode.com/api/v1/cookbooks'
[Berkshelf] Installing openssl (1.1.0) from site: 'http://cookbooks.opscode.com/api/v1/cookbooks'
[Berkshelf] Installing build-essential (1.4.2) from site: 'http://cookbooks.opscode.com/api/v1/cookbooks'
[default] Chef 11.8.2 Omnibus package is already installed.
[default] Running provisioner: chef_solo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-12-28T23:45:15-08:00] INFO: Forking chef instance to converge...
[2013-12-28T23:45:15-08:00] INFO: *** Chef 11.8.2 ***
[2013-12-28T23:45:15-08:00] INFO: Chef-client pid: 28502
[2013-12-28T23:45:16-08:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-12-28T23:45:16-08:00] INFO: Run List is [recipe[myface::default]]
[2013-12-28T23:45:16-08:00] INFO: Run List expands to [myface::default]
[2013-12-28T23:45:16-08:00] INFO: Starting Chef Run for myface-berkshelf
[2013-12-28T23:45:16-08:00] INFO: Running start handlers
[2013-12-28T23:45:16-08:00] INFO: Start handlers complete.
[2013-12-28T23:45:16-08:00] WARN: Cloning resource attributes for directory[/var/lib/mysql] from prior resource (CHEF-3694)
[2013-12-28T23:45:16-08:00] WARN: Previous directory[/var/lib/mysql]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/mysql/recipes/_server_rhel.rb:11:in `block in from_file'
[2013-12-28T23:45:16-08:00] WARN: Current  directory[/var/lib/mysql]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/mysql/recipes/_server_rhel.rb:20:in `from_file'
[2013-12-28T23:45:16-08:00] WARN: Cloning resource attributes for service[apache2] from prior resource (CHEF-3694)
[2013-12-28T23:45:16-08:00] WARN: Previous service[apache2]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/apache2/recipes/default.rb:24:in `from_file'
[2013-12-28T23:45:16-08:00] WARN: Current  service[apache2]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/apache2/recipes/default.rb:210:in `from_file'
[2013-12-28T23:45:33-08:00] INFO: package[mysql-server] installing mysql-server-5.1.71-1.el6 from base repository
[2013-12-28T23:45:43-08:00] INFO: directory[/var/log/mysql] created directory /var/log/mysql
[2013-12-28T23:45:43-08:00] INFO: directory[/var/log/mysql] owner changed to 27
[2013-12-28T23:45:43-08:00] INFO: directory[/var/log/mysql] group changed to 27
[2013-12-28T23:45:43-08:00] INFO: directory[/var/log/mysql] mode changed to 755
[2013-12-28T23:45:43-08:00] INFO: directory[/etc/mysql/conf.d] created directory /etc/mysql/conf.d
[2013-12-28T23:45:43-08:00] INFO: directory[/etc/mysql/conf.d] owner changed to 27
[2013-12-28T23:45:43-08:00] INFO: directory[/etc/mysql/conf.d] group changed to 27
[2013-12-28T23:45:43-08:00] INFO: directory[/etc/mysql/conf.d] mode changed to 755
[2013-12-28T23:45:43-08:00] INFO: template[initial-my.cnf] backed up to /var/chef/backup/etc/my.cnf.chef-20131228234543.651750
[2013-12-28T23:45:43-08:00] INFO: template[initial-my.cnf] updated file contents /etc/my.cnf
[2013-12-28T23:45:43-08:00] INFO: template[initial-my.cnf] sending start action to service[mysql-start] (immediate)
[2013-12-28T23:45:45-08:00] INFO: service[mysql-start] started
[2013-12-28T23:45:45-08:00] INFO: execute[assign-root-password] ran successfully
[2013-12-28T23:45:45-08:00] INFO: template[/etc/mysql_grants.sql] created file /etc/mysql_grants.sql
[2013-12-28T23:45:45-08:00] INFO: template[/etc/mysql_grants.sql] updated file contents /etc/mysql_grants.sql
[2013-12-28T23:45:45-08:00] INFO: template[/etc/mysql_grants.sql] owner changed to 0
[2013-12-28T23:45:45-08:00] INFO: template[/etc/mysql_grants.sql] group changed to 0
[2013-12-28T23:45:45-08:00] INFO: template[/etc/mysql_grants.sql] mode changed to 600
[2013-12-28T23:45:45-08:00] INFO: template[/etc/mysql_grants.sql] sending run action to execute[install-grants] (immediate)
[2013-12-28T23:45:45-08:00] INFO: execute[install-grants] ran successfully
[2013-12-28T23:45:45-08:00] INFO: execute[install-grants] sending restart action to service[mysql] (immediate)
[2013-12-28T23:45:50-08:00] INFO: service[mysql] restarted
[2013-12-28T23:45:50-08:00] INFO: service[mysql] enabled
[2013-12-28T23:45:52-08:00] INFO: Chef Run complete in 35.813790999 seconds
[2013-12-28T23:45:52-08:00] INFO: Running report handlers
[2013-12-28T23:45:52-08:00] INFO: Report handlers complete
[2013-12-28T23:45:15-08:00] INFO: Forking chef instance to converge...
</code></pre>

<h2 id="testing-iteration-7">Testing Iteration #7</h2>
<p>Verify that the <code>mysqld</code> service is running on your vagrant guest by
running the following command on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "sudo /sbin/service mysqld status"
mysqld (pid  8525) is running...
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "sudo /sbin/service mysqld status" -- -n -T
mysqld (pid  8525) is running...
</code></pre>

<p>Also check that MySQL is enabled to start on boot on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "sudo /sbin/chkconfig --list | grep mysqld"
mysqld         	0:off	1:off	2:on	3:on	4:on	5:on	6:off
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "sudo /sbin/chkconfig --list | grep mysqld" -- -n -T
mysqld         	0:off	1:off	2:on	3:on	4:on	5:on	6:off
</code></pre>

<p>If the service is set to be activated at runlevels 3 and 5, then MySQL is
enabled to run under full multi-user text mode and full multi-user graphical
mode, which is exactly the desired behavior.</p>

<h1 id="iteration-8---create-the-myface-database">Iteration #8 - Create the MyFace Database</h1>

<p>We’ve installed MySQL, but we don’t have a database yet.  Now we’re going
to create a database to store information about our users with another
cookbook, the <code>database</code> cookbook.</p>

<p>Add the <code>database</code> cookbook as a dependency in the <code>metadata.rb</code> file:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/metadata.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">name</span>             <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">maintainer</span>       <span class="s1">&#39;Mischa Taylor&#39;</span>
</span><span class="line"><span class="n">maintainer_email</span> <span class="s1">&#39;mischa@misheska.com&#39;</span>
</span><span class="line"><span class="n">license</span>          <span class="s1">&#39;Apache 2.0&#39;</span>
</span><span class="line"><span class="n">description</span>      <span class="s1">&#39;Installs/Configures myface&#39;</span>
</span><span class="line"><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;README.md&#39;</span><span class="p">))</span>
</span><span class="line"><span class="n">version</span>          <span class="s1">&#39;2.0.0&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;apache2&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.8.0&#39;</span>
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;mysql&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 4.0.0&#39;</span>
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;database&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.6.0&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Berkshelf automatically populates MySQL passwords for you.  They were
configured in the <code>Vagrantfile</code> when you ran <code>berks cookbook</code> in
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/#create-the-myface-application-cookbook">Part 1</a>:</p>

<pre><code>...
config.vm.provision :chef_solo do |chef|
  chef.json = {
    :mysql =&gt; {
      :server_root_password =&gt; 'rootpass',
      :server_debian_password =&gt; 'debpass',
      :server_repl_password =&gt; "replpass'
    }
  }
  ...
end
...
</code></pre>

<p>You can reference these passwords as variables in your Chef recipes, which we
will do when we add some data attributes.  Add the following attributes to
<code>attributes/default.rb</code> so it looks like so:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;name&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface.conf&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;/srv/apache/myface&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;mysql&#39;</span><span class="o">][</span><span class="s1">&#39;server_root_password&#39;</span><span class="o">]</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Describe the database to be created for MyFace in <code>recipes/database.rb</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/database.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: database</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2012 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;mysql::server&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;database::mysql&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">mysql_database</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">connection</span><span class="p">(</span>
</span><span class="line">    <span class="ss">:host</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:username</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Converge the changes with <code>vagrant provision</code>:</p>

<pre><code>$ vagrant provision
[Berkshelf] This version of the Berkshelf plugin has not been fully tested on this version of Vagrant.
[Berkshelf] You should check for a newer version of vagrant-berkshelf.
[Berkshelf] If you encounter any errors with this version, please report them at https://github.com/RiotGames/vagrant-berkshelf/issues
[Berkshelf] You can also join the discussion in #berkshelf on Freenode.
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/default/vagrant/berkshelf-20131229-47158-1y8wp6-default'
[Berkshelf] Using myface (2.0.0)
[Berkshelf] Using apache2 (1.8.14)
[Berkshelf] Using mysql (4.0.14)
[Berkshelf] Using openssl (1.1.0)
[Berkshelf] Using build-essential (1.4.2)
[Berkshelf] Using database (1.6.0)
[Berkshelf] Using postgresql (3.3.4)
[Berkshelf] Using apt (2.3.4)
[Berkshelf] Using aws (1.0.0)
[Berkshelf] Using xfs (1.1.0)
[default] Chef 11.8.2 Omnibus package is already installed.
[default] Running provisioner: chef_solo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-12-29T00:40:09-08:00] INFO: Forking chef instance to converge...
[2013-12-29T00:40:09-08:00] INFO: *** Chef 11.8.2 ***
[2013-12-29T00:40:09-08:00] INFO: Chef-client pid: 5081
[2013-12-29T00:40:10-08:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-12-29T00:40:10-08:00] INFO: Run List is [recipe[myface::default]]
[2013-12-29T00:40:10-08:00] INFO: Run List expands to [myface::default]
[2013-12-29T00:40:10-08:00] INFO: Starting Chef Run for myface-berkshelf
[2013-12-29T00:40:10-08:00] INFO: Running start handlers
[2013-12-29T00:40:10-08:00] INFO: Start handlers complete.
[2013-12-29T00:40:10-08:00] WARN: Cloning resource attributes for directory[/var/lib/mysql] from prior resource (CHEF-3694)
[2013-12-29T00:40:10-08:00] WARN: Previous directory[/var/lib/mysql]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/mysql/recipes/_server_rhel.rb:11:in `block in from_file'
[2013-12-29T00:40:10-08:00] WARN: Current  directory[/var/lib/mysql]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/mysql/recipes/_server_rhel.rb:20:in `from_file'
[2013-12-29T00:40:11-08:00] INFO: package[autoconf] installing autoconf-2.63-5.1.el6 from base repository
[2013-12-29T00:40:18-08:00] INFO: package[bison] installing bison-2.4.1-5.el6 from base repository
[2013-12-29T00:40:25-08:00] INFO: package[flex] installing flex-2.5.35-8.el6 from base repository
[2013-12-29T00:40:31-08:00] INFO: package[gcc-c++] installing gcc-c++-4.4.7-4.el6 from base repository
[2013-12-29T00:40:41-08:00] INFO: package[mysql-devel] installing mysql-devel-5.1.71-1.el6 from base repository
[2013-12-29T00:41:17-08:00] WARN: Cloning resource attributes for service[apache2] from prior resource (CHEF-3694)
[2013-12-29T00:41:17-08:00] WARN: Previous service[apache2]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/apache2/recipes/default.rb:24:in `from_file'
[2013-12-29T00:41:17-08:00] WARN: Current  service[apache2]: /tmp/vagrant-chef-1/chef-solo-1/cookbooks/apache2/recipes/default.rb:210:in `from_file'
[2013-12-29T00:41:19-08:00] INFO: Chef Run complete in 69.220896743 seconds
[2013-12-29T00:41:19-08:00] INFO: Running report handlers
[2013-12-29T00:41:19-08:00] INFO: Report handlers complete
[2013-12-29T00:40:09-08:00] INFO: Forking chef instance to converge...
</code></pre>

<h2 id="testing-iteration-8">Testing Iteration #8</h2>
<p>Run <code>mysqlshow</code> on your vagrant guest to display database information, verifying
that the <code>myface</code> database was created on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "mysqlshow -uroot -prootpass"
+--------------------+
|     Databases      |
+--------------------+
| information_schema |
| myface             |
| mysql              |
| test               |
+--------------------+
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "mysqlshow -uroot -prootpass" -- -n -T
</code></pre>

<p>Note that <code>myface</code> is listed as a database name - success!</p>

<h1 id="iteration-9---create-a-mysql-user">Iteration #9 - Create a MySQL user</h1>

<p>It’s a good idea to create a user in MySQL for each one of your applications
that has the ability to only manipulate the application’s database and has 
no MySQL administrative privileges.</p>

<p>Add some attributes to <code>attributes/default.rb</code> for your app user:</p>

<pre><code>default['myface']['database']['app']['username'] = 'myface_app'
default['myface']['database']['app']['password'] = 'supersecret'
</code></pre>

<p><code>attributes/default.rb</code> should look like so:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;name&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface.conf&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;/srv/apache/myface&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;mysql&#39;</span><span class="o">][</span><span class="s1">&#39;server_root_password&#39;</span><span class="o">]</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface_app&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;supersecret&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Edit <code>recipes/database.rb</code> and describe the MySQL database user:</p>

<pre><code>...
  )
  action :create
end

mysql_database_user node['myface']['database']['app']['username'] do
  connection(
    :host =&gt; node['myface']['database']['host'],
    :username =&gt; node['myface']['database']['username'],
    :password =&gt; node['myface']['database']['password']
  )
  password node['myface']['database']['app']['password']
  database_name node['myface']['database']['dbname']
  host node['myface']['database']['host']
  action [:create, :grant]
end
</code></pre>

<p>After editing <code>recipes/database.rb</code> should look like the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/database.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: database</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2012 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;mysql::server&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;database::mysql&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">mysql_database</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">connection</span><span class="p">(</span>
</span><span class="line">    <span class="ss">:host</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:username</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">mysql_database_user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">connection</span><span class="p">(</span>
</span><span class="line">    <span class="ss">:host</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:username</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">  <span class="n">password</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="n">database_name</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="n">host</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="n">action</span> <span class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span class="ss">:grant</span><span class="o">]</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Converge the node to apply the changes:</p>

<pre><code>$ vagrant provision
</code></pre>

<h2 id="testing-iteration-9">Testing Iteration #9</h2>

<p>Check to see if the <code>myface-app</code> user is enabled as a local user by running the
following mysql command on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c 'mysql -uroot -prootpass -e "select user,host from mysql.user;"'
+------------+------------------+
| user       | host             |
+------------+------------------+
| repl       | %                |
| root       | 127.0.0.1        |
|            | localhost        |
| myface_app | localhost        |
| root       | localhost        |
|            | myface-berkshelf |
+------------+------------------+
Connection to 127.0.0.1 closed.
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "mysql -uroot -prootpass -e 'select user,host from mysql.user;'" -- -n -T
</code></pre>

<p>As you can see above, the <code>myface_app@localhost</code> user exists, so our cookbook
did what was expected.</p>

<p>Also check to see that the <code>myface_app</code> user only has rights on the myface databse on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c 'mysql -uroot -prootpass -e "show grants for 'myface_app'@'localhost';"'
Grants for myface_app@localhost
GRANT USAGE ON *.* TO 'myface_app'@'localhost' IDENTIFIED BY PASSWORD '*90BA3AC0BFDE07AE334CA523CB27167AE33825B9'
GRANT ALL PRIVILEGES ON `myface`.* TO 'myface_app'@'localhost'
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "mysql -uroot -prootpass -e 'show grants for "myface_app"@"localhost";'" -- -n -T
</code></pre>

<h1 id="iteration-10---create-a-table-for-users">Iteration #10 - Create a table for users</h1>

<p>Let’s create a SQL script to create a table modeling MyFace users and
populate it with some initial data.  Create a file 
<code>files/default/myface-create.sql</code> with the following content:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/files/default/myface-create.sql  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class="sql"><span class="line"><span class="cm">/* A table for myface users */</span>
</span><span class="line">
</span><span class="line"><span class="k">CREATE</span> <span class="k">TABLE</span> <span class="n">users</span><span class="p">(</span>
</span><span class="line"> <span class="n">id</span> <span class="nb">CHAR</span> <span class="p">(</span><span class="mi">32</span><span class="p">)</span> <span class="k">NOT</span> <span class="k">NULL</span><span class="p">,</span>
</span><span class="line"> <span class="k">PRIMARY</span> <span class="k">KEY</span><span class="p">(</span><span class="n">id</span><span class="p">),</span>
</span><span class="line"> <span class="n">user_name</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">64</span><span class="p">),</span>
</span><span class="line"> <span class="n">url</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">256</span><span class="p">),</span>
</span><span class="line"> <span class="n">email</span> <span class="nb">VARCHAR</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span>
</span><span class="line"> <span class="n">neck_beard</span> <span class="nb">INTEGER</span>
</span><span class="line"><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="cm">/* Initial records */</span>
</span><span class="line"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">users</span> <span class="p">(</span> <span class="n">id</span><span class="p">,</span> <span class="n">user_name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">neck_beard</span> <span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span> <span class="n">uuid</span><span class="p">(),</span> <span class="s1">&#39;jtimberman&#39;</span><span class="p">,</span> <span class="s1">&#39;http://jtimberman.housepub.org&#39;</span><span class="p">,</span> <span class="s1">&#39;joshua@opscode.com&#39;</span><span class="p">,</span> <span class="mi">4</span> <span class="p">);</span>
</span><span class="line"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">users</span> <span class="p">(</span> <span class="n">id</span><span class="p">,</span> <span class="n">user_name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">neck_beard</span> <span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span> <span class="n">uuid</span><span class="p">(),</span> <span class="s1">&#39;someara&#39;</span><span class="p">,</span> <span class="s1">&#39;http://blog.afistfulofservers.net/&#39;</span><span class="p">,</span> <span class="s1">&#39;someara@opscode.com&#39;</span><span class="p">,</span> <span class="mi">5</span> <span class="p">);</span>
</span><span class="line"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">users</span> <span class="p">(</span> <span class="n">id</span><span class="p">,</span> <span class="n">user_name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">neck_beard</span> <span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span> <span class="n">uuid</span><span class="p">(),</span> <span class="s1">&#39;jwinsor&#39;</span><span class="p">,</span> <span class="s1">&#39;http://vialstudios.com&#39;</span><span class="p">,</span> <span class="s1">&#39;jamie@vialstudios.com&#39;</span><span class="p">,</span> <span class="mi">4</span> <span class="p">);</span>
</span><span class="line"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">users</span> <span class="p">(</span> <span class="n">id</span><span class="p">,</span> <span class="n">user_name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">neck_beard</span> <span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span> <span class="n">uuid</span><span class="p">(),</span> <span class="s1">&#39;cjohnson&#39;</span><span class="p">,</span> <span class="s1">&#39;http://www.chipadeedoodah.com/&#39;</span><span class="p">,</span> <span class="s1">&#39;charles@opscode.com&#39;</span><span class="p">,</span> <span class="mi">3</span> <span class="p">);</span>
</span><span class="line"><span class="k">INSERT</span> <span class="k">INTO</span> <span class="n">users</span> <span class="p">(</span> <span class="n">id</span><span class="p">,</span> <span class="n">user_name</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">email</span><span class="p">,</span> <span class="n">neck_beard</span> <span class="p">)</span> <span class="k">VALUES</span> <span class="p">(</span> <span class="n">uuid</span><span class="p">(),</span> <span class="s1">&#39;mbower&#39;</span><span class="p">,</span> <span class="s1">&#39;http://www.webbower.com/&#39;</span><span class="p">,</span> <span class="s1">&#39;matt@webbower.com&#39;</span><span class="p">,</span> <span class="mi">4</span> <span class="p">);</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Add an attribute for the temporary location used for the SQL script we just
created:</p>

<pre><code>default['myface']['database']['seed_file'] = '/tmp/myface-create.sql'
</code></pre>

<p>The resultant <code>attributes/default.rb</code> should resemble the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;name&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface.conf&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;/srv/apache/myface&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;mysql&#39;</span><span class="o">][</span><span class="s1">&#39;server_root_password&#39;</span><span class="o">]</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface_app&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;supersecret&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;seed_file&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;/tmp/myface-create.sql&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Modify <code>recipes/database.rb</code> so that the cookbook transfers the SQL script
to the guest node and so that the SQL script executes.  As you learned in
Part 1, <a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/#testing-iteration-1">recipes should be idempotent</a>,
so you will need to add a <code>not_if</code> statement which ensures that the command
is only executed when necessary.</p>

<pre><code>...
  host 'localhost'
  action [:create, :grant]
end

# Write schema seed file to filesystem
cookbook_file node['myface']['database']['seed_file'] do
  source 'myface-create.sql'
  owner 'root'
  group 'root'
  mode '0600'
end

# Seed database with test data
execute 'initialize myface database' do
  command "mysql -h #{node['myface']['database']['host']} -u #{node['myface']['database']['app']['username']} -p#{node['myface']['database']['app']['password']} -D #{node['myface']['database']['dbname']} &lt; #{node['myface']['database']['seed_file']}"
  not_if  "mysql -h #{node['myface']['database']['host']} -u #{node['myface']['database']['app']['username']} -p#{node['myface']['database']['app']['password']} -D #{node['myface']['database']['dbname']} -e 'describe users;'"
end
</code></pre>

<p>Once you have made these changes, <code>recipes/database.rb</code> should look like so:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/database.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: database</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2012 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;mysql::server&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;database::mysql&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">mysql_database</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">connection</span><span class="p">(</span>
</span><span class="line">    <span class="ss">:host</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:username</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">mysql_database_user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">connection</span><span class="p">(</span>
</span><span class="line">    <span class="ss">:host</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:username</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="p">,</span>
</span><span class="line">    <span class="ss">:password</span> <span class="o">=&gt;</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="p">)</span>
</span><span class="line">  <span class="n">password</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="n">database_name</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="n">host</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="n">action</span> <span class="o">[</span><span class="ss">:create</span><span class="p">,</span> <span class="ss">:grant</span><span class="o">]</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Write schema seed file to filesystem</span>
</span><span class="line"><span class="n">cookbook_file</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;seed_file&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;myface-create.sql&#39;</span>
</span><span class="line">  <span class="n">owner</span> <span class="s1">&#39;root&#39;</span>
</span><span class="line">  <span class="n">group</span> <span class="s1">&#39;root&#39;</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0600&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># Seed database with test data</span>
</span><span class="line"><span class="n">execute</span> <span class="s1">&#39;initialize myface database&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">command</span> <span class="s2">&quot;mysql -h </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -u </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -p</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -D </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> &lt; </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;seed_file&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class="line">  <span class="n">not_if</span>  <span class="s2">&quot;mysql -h </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;host&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -u </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;username&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -p</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;app&#39;</span><span class="o">][</span><span class="s1">&#39;password&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -D </span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;database&#39;</span><span class="o">][</span><span class="s1">&#39;dbname&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2"> -e &#39;describe users;&#39;&quot;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>vagrant provision</code> to converge your changes:</p>

<pre><code>$ vagrant provision
</code></pre>

<h2 id="testing-iteration-10">Testing Iteration #10</h2>

<p>Run the following mysql command to dump the contents of the <code>users</code> table on
Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c 'mysql -hlocalhost -umyface_app -psupersecret -Dmyface -e "select id,user_name from users;"'
id                                  user_name
216e03c2-ffe4-11e2-b1ad-080027c8	jtimberman
216e0890-ffe4-11e2-b1ad-080027c8	someara
216e0bce-ffe4-11e2-b1ad-080027c8	jwinsor
216e0eda-ffe4-11e2-b1ad-080027c8	cjohnson
216e11e6-ffe4-11e2-b1ad-080027c8	mbower
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "mysql -hlocalhost -umyface_app -psupersecret -Dmyface -e 'select id,user_name from users;'" -- -n -T
</code></pre>

<p>The output should look similar to what you see above - the data from the
<code>INSERT INTO</code> statemens in the SQL script.</p>

<h1 id="iteration-11---install-php">Iteration #11 - Install PHP</h1>

<p>Let’s add some PHP scripting sizzle to sell the steak of the database we
just created.  We’re going to install Apache 2 <code>mod_php5</code> module and the
<code>php-mysql</code> package to support our PHP script.</p>

<p>Edit <code>recipes/webserver.rb</code> and add the following:</p>

<pre><code>...
include_recipe 'apache2'
include_recipe 'apache2::mod_php5'

package 'php-mysql' do
  action :install
  notifies :restart, 'service[apache2]'
end
</code></pre>

<p>This will use the apache2 cookbook’s <code>mod_php5</code> module to install PHP5
and install the <code>php-mysql</code> support package.  After editing,
<code>recipes/webserver.rb</code> should look like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/webserver.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: webserver</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2::mod_php5&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">package</span> <span class="s1">&#39;php-mysql&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:install</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># disable default site</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;000-default&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">false</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create apache config</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;dir&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/sites-available/</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;apache2.conf.erb&#39;</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create document root</span>
</span><span class="line"><span class="n">directory</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line">  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># write site</span>
</span><span class="line"><span class="n">cookbook_file</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/index.html&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">mode</span> <span class="s2">&quot;0644&quot;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># enable myface</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Run <code>vagrant provision</code> to converge your changes:</p>

<pre><code>$ vagrant provision
</code></pre>

<h2 id="test-iteration-11">Test Iteration #11</h2>

<p>Run the following command to verify that the php5_module was successfully
installed on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "sudo /usr/sbin/httpd -M | grep php5"
httpd: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1 for ServerName
[Wed Aug 07 21:42:03 2013] [warn] NameVirtualHost *:80 has no VirtualHosts
Syntax OK
 php5_module (shared)
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "sudo /usr/sbin/httpd -M | grep php5" -- -n -T
</code></pre>

<h1 id="iteration-12---add-php-sizzle">Iteration #12 - Add PHP Sizzle</h1>

<p>It’s the last iteration, get ready to see the PHP sizzle!  First modify
<code>templates/default/apache2.conf.erb</code> as follows:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/templates/default/apache2.conf.erb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># Managed by Chef for &lt;%= node[&#39;hostname&#39;] %&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="no">VirtualHost</span> <span class="o">*</span><span class="p">:</span><span class="mi">80</span><span class="o">&gt;</span>
</span><span class="line">        <span class="no">ServerAdmin</span> <span class="o">&lt;</span><span class="sx">%= node[&#39;apache&#39;][&#39;contact&#39;] %&gt;</span>
</span><span class="line">
</span><span class="line"><span class="sx">        DocumentRoot &lt;%=</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span> <span class="sx">%&gt;</span>
</span><span class="line"><span class="sx">        &lt;Directory /&gt;</span>
</span><span class="line">                <span class="no">Options</span> <span class="no">FollowSymLinks</span>
</span><span class="line">                <span class="no">AllowOverride</span> <span class="no">None</span>
</span><span class="line">        <span class="o">&lt;</span><span class="sr">/Directory&gt;</span>
</span><span class="line"><span class="sr">        &lt;Directory &lt;%= node[&#39;myface&#39;][&#39;document_root&#39;] %&gt;&gt;</span>
</span><span class="line"><span class="sr">                Options Indexes FollowSymLinks MultiViews</span>
</span><span class="line"><span class="sr">                AllowOverride None</span>
</span><span class="line"><span class="sr">                Order allow,deny</span>
</span><span class="line"><span class="sr">                allow from all</span>
</span><span class="line"><span class="sr">        &lt;/</span><span class="no">Directory</span><span class="o">&gt;</span>
</span><span class="line">
</span><span class="line">        <span class="no">ErrorLog</span> <span class="o">&lt;</span><span class="sx">%= node[&#39;apache&#39;][&#39;log_dir&#39;] %&gt;/error.log</span>
</span><span class="line">
</span><span class="line"><span class="sx">        LogLevel warn</span>
</span><span class="line">
</span><span class="line"><span class="sx">        CustomLog &lt;%=</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;log_dir&#39;</span><span class="o">]</span> <span class="sx">%&gt;/access.log combined</span>
</span><span class="line"><span class="sx">        ServerSignature Off</span>
</span><span class="line"><span class="sx">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Next delete <code>files/default/index.html</code> with the following command:</p>

<pre><code>$ rm files/default/index.html
</code></pre>

<p>You’ll be replacing it with the following parametized PHP script as
<code>templates/default/index.php.erb</code>:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/templates/default/index.php.erb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
<span class="line-number">109</span>
<span class="line-number">110</span>
<span class="line-number">111</span>
<span class="line-number">112</span>
<span class="line-number">113</span>
<span class="line-number">114</span>
<span class="line-number">115</span>
<span class="line-number">116</span>
<span class="line-number">117</span>
<span class="line-number">118</span>
<span class="line-number">119</span>
<span class="line-number">120</span>
<span class="line-number">121</span>
<span class="line-number">122</span>
<span class="line-number">123</span>
<span class="line-number">124</span>
<span class="line-number">125</span>
<span class="line-number">126</span>
<span class="line-number">127</span>
<span class="line-number">128</span>
<span class="line-number">129</span>
<span class="line-number">130</span>
<span class="line-number">131</span>
<span class="line-number">132</span>
<span class="line-number">133</span>
<span class="line-number">134</span>
<span class="line-number">135</span>
<span class="line-number">136</span>
<span class="line-number">137</span>
<span class="line-number">138</span>
<span class="line-number">139</span>
<span class="line-number">140</span>
<span class="line-number">141</span>
<span class="line-number">142</span>
<span class="line-number">143</span>
<span class="line-number">144</span>
<span class="line-number">145</span>
<span class="line-number">146</span>
<span class="line-number">147</span>
<span class="line-number">148</span>
<span class="line-number">149</span>
<span class="line-number">150</span>
<span class="line-number">151</span>
<span class="line-number">152</span>
<span class="line-number">153</span>
<span class="line-number">154</span>
<span class="line-number">155</span>
<span class="line-number">156</span>
<span class="line-number">157</span>
<span class="line-number">158</span>
<span class="line-number">159</span>
<span class="line-number">160</span>
<span class="line-number">161</span>
<span class="line-number">162</span>
<span class="line-number">163</span>
<span class="line-number">164</span>
<span class="line-number">165</span>
<span class="line-number">166</span>
<span class="line-number">167</span>
<span class="line-number">168</span>
<span class="line-number">169</span>
<span class="line-number">170</span>
<span class="line-number">171</span>
<span class="line-number">172</span>
<span class="line-number">173</span>
<span class="line-number">174</span>
<span class="line-number">175</span>
<span class="line-number">176</span>
<span class="line-number">177</span>
<span class="line-number">178</span>
<span class="line-number">179</span>
<span class="line-number">180</span>
<span class="line-number">181</span>
<span class="line-number">182</span>
<span class="line-number">183</span>
<span class="line-number">184</span>
<span class="line-number">185</span>
<span class="line-number">186</span>
<span class="line-number">187</span>
<span class="line-number">188</span>
<span class="line-number">189</span>
<span class="line-number">190</span>
<span class="line-number">191</span>
<span class="line-number">192</span>
<span class="line-number">193</span>
<span class="line-number">194</span>
<span class="line-number">195</span>
<span class="line-number">196</span>
<span class="line-number">197</span>
<span class="line-number">198</span>
<span class="line-number">199</span>
<span class="line-number">200</span>
<span class="line-number">201</span>
<span class="line-number">202</span>
<span class="line-number">203</span>
<span class="line-number">204</span>
<span class="line-number">205</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="o">&lt;!--</span>
</span><span class="line"><span class="no">Copyright</span> <span class="mi">2013</span><span class="p">,</span> <span class="no">Opscode</span><span class="p">,</span> <span class="no">Inc</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="no">Licensed</span> <span class="n">under</span> <span class="n">the</span> <span class="no">Apache</span> <span class="no">License</span><span class="p">,</span> <span class="no">Version</span> <span class="mi">2</span><span class="o">.</span><span class="mi">0</span> <span class="p">(</span><span class="n">the</span> <span class="s2">&quot;License&quot;</span><span class="p">);</span>
</span><span class="line"><span class="n">you</span> <span class="n">may</span> <span class="ow">not</span> <span class="n">use</span> <span class="n">this</span> <span class="n">file</span> <span class="n">except</span> <span class="k">in</span> <span class="n">compliance</span> <span class="n">with</span> <span class="n">the</span> <span class="no">License</span><span class="o">.</span>
</span><span class="line"><span class="no">You</span> <span class="n">may</span> <span class="n">obtain</span> <span class="n">a</span> <span class="n">copy</span> <span class="n">of</span> <span class="n">the</span> <span class="no">License</span> <span class="n">at</span>
</span><span class="line">
</span><span class="line">    <span class="ss">http</span><span class="p">:</span><span class="sr">//</span><span class="n">www</span><span class="o">.</span><span class="n">apache</span><span class="o">.</span><span class="n">org</span><span class="o">/</span><span class="n">licenses</span><span class="o">/</span><span class="no">LICENSE</span><span class="o">-</span><span class="mi">2</span><span class="o">.</span><span class="mi">0</span>
</span><span class="line"><span class="no">Unless</span> <span class="n">required</span> <span class="n">by</span> <span class="n">applicable</span> <span class="n">law</span> <span class="ow">or</span> <span class="n">agreed</span> <span class="n">to</span> <span class="k">in</span> <span class="n">writing</span><span class="p">,</span> <span class="n">software</span>
</span><span class="line"><span class="n">distributed</span> <span class="n">under</span> <span class="n">the</span> <span class="no">License</span> <span class="n">is</span> <span class="n">distributed</span> <span class="n">on</span> <span class="n">an</span> <span class="s2">&quot;AS IS&quot;</span> <span class="no">BASIS</span><span class="p">,</span>
</span><span class="line"><span class="no">WITHOUT</span> <span class="no">WARRANTIES</span> <span class="no">OR</span> <span class="no">CONDITIONS</span> <span class="no">OF</span> <span class="no">ANY</span> <span class="no">KIND</span><span class="p">,</span> <span class="n">either</span> <span class="n">express</span> <span class="ow">or</span> <span class="n">implied</span><span class="o">.</span>
</span><span class="line"><span class="no">See</span> <span class="n">the</span> <span class="no">License</span> <span class="k">for</span> <span class="n">the</span> <span class="n">specific</span> <span class="n">language</span> <span class="n">governing</span> <span class="n">permissions</span> <span class="ow">and</span>
</span><span class="line"><span class="n">limitations</span> <span class="n">under</span> <span class="n">the</span> <span class="no">License</span><span class="o">.</span>
</span><span class="line">
</span><span class="line"><span class="o">--&gt;</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="p">?</span><span class="n">php</span>
</span><span class="line"><span class="vg">$db_host</span> <span class="o">=</span> <span class="s1">&#39;localhost&#39;</span><span class="p">;</span>
</span><span class="line"><span class="vg">$db_user</span> <span class="o">=</span> <span class="s1">&#39;root&#39;</span><span class="p">;</span>
</span><span class="line"><span class="vg">$db_pwd</span> <span class="o">=</span> <span class="s1">&#39;&lt;%= node[&#39;</span><span class="n">mysql</span><span class="s1">&#39;][&#39;</span><span class="n">server_root_password</span><span class="s1">&#39;] %&gt;&#39;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="vg">$database</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span><span class="p">;</span>
</span><span class="line"><span class="vg">$table</span> <span class="o">=</span> <span class="s1">&#39;users&#39;</span><span class="p">;</span>
</span><span class="line">
</span><span class="line"><span class="sr">//</span> <span class="no">UTILITY</span> <span class="no">FUNCTIONS</span>
</span><span class="line"><span class="n">function</span> <span class="n">create_gravatar_hash</span><span class="p">(</span><span class="vg">$email</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">return</span> <span class="n">md5</span><span class="p">(</span> <span class="n">strtolower</span><span class="p">(</span> <span class="n">trim</span><span class="p">(</span> <span class="vg">$email</span> <span class="p">)</span> <span class="p">)</span> <span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">function</span> <span class="n">gravatar_img</span><span class="p">(</span><span class="vg">$email</span><span class="o">=</span><span class="n">null</span><span class="p">,</span> <span class="vg">$name</span><span class="o">=</span><span class="n">null</span><span class="p">,</span> <span class="vg">$size</span><span class="o">=</span><span class="n">null</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="vg">$email</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="k">return</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="vg">$url</span> <span class="o">=</span>  <span class="s1">&#39;http://www.gravatar.com/avatar/&#39;</span><span class="p">;</span>
</span><span class="line">    <span class="vg">$url</span> <span class="o">.</span><span class="n">=</span> <span class="n">create_gravatar_hash</span><span class="p">(</span><span class="vg">$email</span><span class="p">);</span>
</span><span class="line">    <span class="k">if</span><span class="p">(</span><span class="vg">$size</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="vg">$url</span> <span class="o">.</span><span class="n">=</span> <span class="s2">&quot;?s={$size}&quot;</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="nb">sprintf</span><span class="p">(</span><span class="s1">&#39;&lt;img src=&quot;%s&quot; alt=&quot;%s&quot; /&gt;&#39;</span><span class="p">,</span> <span class="vg">$url</span><span class="p">,</span> <span class="vg">$name</span> <span class="p">?</span> <span class="vg">$name</span> <span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="p">);</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">function</span> <span class="n">neckbeard</span><span class="p">(</span><span class="vg">$rating</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="vg">$ratings</span> <span class="o">=</span> <span class="n">array</span><span class="p">(</span>
</span><span class="line">        <span class="s1">&#39;Puberty awaits!&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Peach fuzz&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Solid week&amp;#39;s growth&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Lumberjacks would be proud&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="s1">&#39;Makes dwarves weep&#39;</span><span class="p">,</span>
</span><span class="line">    <span class="p">);</span>
</span><span class="line">
</span><span class="line">    <span class="k">return</span> <span class="vg">$ratings</span><span class="o">[</span><span class="p">(</span><span class="n">int</span><span class="p">)</span> <span class="vg">$rating</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]</span><span class="p">;</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">function</span> <span class="n">fetch</span><span class="p">(</span><span class="vg">$host</span><span class="p">,</span> <span class="vg">$dbname</span><span class="p">,</span> <span class="vg">$dbuser</span><span class="p">,</span> <span class="vg">$dbpass</span><span class="p">,</span> <span class="vg">$table</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">    <span class="n">try</span> <span class="p">{</span>
</span><span class="line">        <span class="vg">$connection</span> <span class="o">=</span> <span class="kp">new</span> <span class="no">PDO</span><span class="p">(</span><span class="s2">&quot;mysql:host={$host};dbname={$dbname}&quot;</span><span class="p">,</span> <span class="vg">$dbuser</span><span class="p">,</span> <span class="vg">$dbpass</span><span class="p">);</span>
</span><span class="line">        <span class="vg">$connection</span><span class="o">-&gt;</span><span class="n">setAttribute</span><span class="p">(</span><span class="ss">PDO</span><span class="p">:</span><span class="ss">:ATTR_ERRMODE</span><span class="p">,</span> <span class="ss">PDO</span><span class="p">:</span><span class="ss">:ERRMODE_EXCEPTION</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="vg">$rc</span> <span class="o">=</span> <span class="vg">$connection</span><span class="o">-&gt;</span><span class="n">query</span><span class="p">(</span><span class="s2">&quot;SELECT COUNT(*) FROM {$table}&quot;</span><span class="p">);</span>
</span><span class="line">        <span class="vg">$count</span> <span class="o">=</span> <span class="vg">$rc</span><span class="o">-&gt;</span><span class="n">fetchColumn</span><span class="p">();</span>
</span><span class="line">
</span><span class="line">        <span class="vg">$result</span> <span class="o">=</span> <span class="vg">$connection</span><span class="o">-&gt;</span><span class="n">query</span><span class="p">(</span><span class="s2">&quot;SELECT * FROM {$table}&quot;</span><span class="p">);</span>
</span><span class="line">
</span><span class="line">        <span class="k">return</span> <span class="n">array</span><span class="p">(</span><span class="vg">$result</span><span class="p">,</span> <span class="vg">$count</span><span class="p">);</span>
</span><span class="line">    <span class="p">}</span> <span class="kp">catch</span><span class="p">(</span><span class="no">Exception</span> <span class="vg">$e</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">        <span class="n">die</span><span class="p">(</span><span class="vg">$e</span><span class="o">-&gt;</span><span class="n">getMessage</span><span class="p">());</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="n">list</span><span class="p">(</span><span class="vg">$result</span><span class="p">,</span> <span class="vg">$fields_num</span><span class="p">)</span> <span class="o">=</span> <span class="n">fetch</span><span class="p">(</span><span class="vg">$db_host</span><span class="p">,</span> <span class="vg">$database</span><span class="p">,</span> <span class="vg">$db_user</span><span class="p">,</span> <span class="vg">$db_pwd</span><span class="p">,</span> <span class="vg">$table</span><span class="p">);</span>
</span><span class="line">
</span><span class="line"><span class="sc">?&gt;</span>
</span><span class="line"><span class="o">&lt;!</span><span class="no">DOCTYPE</span> <span class="n">html</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">html</span> <span class="n">lang</span><span class="o">=</span><span class="s2">&quot;en&quot;</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">title</span><span class="o">&gt;</span><span class="no">MyFace</span> <span class="no">Users</span><span class="o">&lt;</span><span class="sr">/title&gt;</span>
</span><span class="line"><span class="sr">    &lt;style&gt;</span>
</span><span class="line"><span class="sr">    * {</span>
</span><span class="line"><span class="sr">        -webkit-box-sizing: border-box;</span>
</span><span class="line"><span class="sr">        -moz-box-sizing: border-box;</span>
</span><span class="line"><span class="sr">        box-sizing: border-box;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    html, body {</span>
</span><span class="line"><span class="sr">        margin: 0;</span>
</span><span class="line"><span class="sr">        padding: 0;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    html {</span>
</span><span class="line"><span class="sr">        background: #999;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    body {</span>
</span><span class="line"><span class="sr">        max-width: 480px;</span>
</span><span class="line"><span class="sr">        margin: 0 auto;</span>
</span><span class="line"><span class="sr">        font-family: Arial, Helvetica, sans-serif;</span>
</span><span class="line"><span class="sr">        color: #222;</span>
</span><span class="line"><span class="sr">        padding: 20px;</span>
</span><span class="line"><span class="sr">        border: 1px solid #666;</span>
</span><span class="line"><span class="sr">        -webkit-box-shadow: 0 0 5px rgba(0,0,0,0.3);</span>
</span><span class="line"><span class="sr">        -moz-box-shadow: 0 0 5px rgba(0,0,0,0.3);</span>
</span><span class="line"><span class="sr">        box-shadow: 0 0 5px rgba(0,0,0,0.3);</span>
</span><span class="line"><span class="sr">        background: #FFF;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">        </span>
</span><span class="line"><span class="sr">    a:link {</span>
</span><span class="line"><span class="sr">        text-decoration: none;</span>
</span><span class="line"><span class="sr">        color: #777;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    a:hover,</span>
</span><span class="line"><span class="sr">    a:focus {</span>
</span><span class="line"><span class="sr">        text-decoration: underline;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    h1 {</span>
</span><span class="line"><span class="sr">        text-align: center;</span>
</span><span class="line"><span class="sr">        margin-top: 0;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">        </span>
</span><span class="line"><span class="sr">    h1 span {</span>
</span><span class="line"><span class="sr">        color: #00C;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    h2 {</span>
</span><span class="line"><span class="sr">        font-size: 24px;</span>
</span><span class="line"><span class="sr">        line-height: 1.0;</span>
</span><span class="line"><span class="sr">        margin: 0 0 10px;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    p {</span>
</span><span class="line"><span class="sr">        font-size: 14px;</span>
</span><span class="line"><span class="sr">        line-height: 18px;</span>
</span><span class="line"><span class="sr">        margin: 10px 0;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    p:last-child {</span>
</span><span class="line"><span class="sr">        margin-bottom: 0;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    .email {</span>
</span><span class="line"><span class="sr">        display: block;</span>
</span><span class="line"><span class="sr">        overflow: hidden;</span>
</span><span class="line"><span class="sr">        text-overflow: ellipsis;</span>
</span><span class="line"><span class="sr">        white-space: nowrap;</span>
</span><span class="line"><span class="sr">    }</span>
</span><span class="line"><span class="sr">    </span>
</span><span class="line"><span class="sr">    /</span><span class="o">*</span> <span class="no">Adapted</span> <span class="n">from</span> <span class="no">OOCSS</span>
</span><span class="line">        <span class="o">*</span> <span class="n">mod</span> <span class="n">object</span> <span class="p">(</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">stubbornella</span><span class="o">/</span><span class="n">oocss</span><span class="o">/</span><span class="n">blob</span><span class="o">/</span><span class="n">master</span><span class="o">/</span><span class="n">core</span><span class="o">/</span><span class="n">module</span><span class="o">/</span><span class="n">mod</span><span class="o">.</span><span class="n">css</span><span class="p">)</span>
</span><span class="line">        <span class="o">*</span> <span class="n">media</span> <span class="n">object</span> <span class="p">(</span><span class="ss">https</span><span class="p">:</span><span class="sr">//</span><span class="n">github</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">stubbornella</span><span class="o">/</span><span class="n">oocss</span><span class="o">/</span><span class="n">blob</span><span class="o">/</span><span class="n">master</span><span class="o">/</span><span class="n">core</span><span class="o">/</span><span class="n">media</span><span class="o">/</span><span class="n">media</span><span class="o">.</span><span class="n">css</span><span class="p">)</span>
</span><span class="line">    <span class="o">*/</span>
</span><span class="line">    <span class="n">article</span> <span class="p">{</span>
</span><span class="line">        <span class="nb">display</span><span class="p">:</span> <span class="n">block</span><span class="p">;</span>
</span><span class="line">        <span class="ss">overflow</span><span class="p">:</span> <span class="n">hidden</span><span class="p">;</span>
</span><span class="line">        <span class="n">margin</span><span class="o">-</span><span class="ss">bottom</span><span class="p">:</span> <span class="mi">20</span><span class="n">px</span><span class="p">;</span>
</span><span class="line">        <span class="ss">border</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="n">solid</span> <span class="c1">#CCC;</span>
</span><span class="line">        <span class="ss">background</span><span class="p">:</span> <span class="c1">#EEE;</span>
</span><span class="line">        <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">border</span><span class="o">-</span><span class="ss">radius</span><span class="p">:</span> <span class="mi">4</span><span class="n">px</span><span class="p">;</span>
</span><span class="line">        <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">border</span><span class="o">-</span><span class="ss">radius</span><span class="p">:</span> <span class="mi">4</span><span class="n">px</span><span class="p">;</span>
</span><span class="line">        <span class="n">border</span><span class="o">-</span><span class="ss">radius</span><span class="p">:</span> <span class="mi">4</span><span class="n">px</span><span class="p">;</span>
</span><span class="line">        <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="ss">shadow</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="mi">1</span><span class="n">px</span> <span class="mi">1</span><span class="n">px</span> <span class="n">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span> <span class="n">inset</span><span class="p">;</span>
</span><span class="line">        <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="n">box</span><span class="o">-</span><span class="ss">shadow</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="mi">1</span><span class="n">px</span> <span class="mi">1</span><span class="n">px</span> <span class="n">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span> <span class="n">inset</span><span class="p">;</span>
</span><span class="line">        <span class="n">box</span><span class="o">-</span><span class="ss">shadow</span><span class="p">:</span> <span class="mi">1</span><span class="n">px</span> <span class="mi">1</span><span class="n">px</span> <span class="mi">1</span><span class="n">px</span> <span class="n">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="o">.</span><span class="mi">3</span><span class="p">)</span> <span class="n">inset</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="n">article</span> <span class="o">.</span><span class="n">img</span> <span class="p">{</span>
</span><span class="line">        <span class="ss">float</span><span class="p">:</span> <span class="n">left</span><span class="p">;</span>
</span><span class="line">        <span class="n">margin</span><span class="o">-</span><span class="ss">right</span><span class="p">:</span> <span class="mi">10</span><span class="n">px</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="n">article</span> <span class="o">.</span><span class="n">img</span> <span class="n">img</span> <span class="p">{</span>
</span><span class="line">        <span class="nb">display</span><span class="p">:</span> <span class="n">block</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="n">article</span> <span class="o">.</span><span class="n">imgExt</span> <span class="p">{</span>
</span><span class="line">        <span class="ss">float</span><span class="p">:</span> <span class="n">right</span><span class="p">;</span>
</span><span class="line">        <span class="n">margin</span><span class="o">-</span><span class="ss">left</span><span class="p">:</span> <span class="mi">10</span><span class="n">px</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">
</span><span class="line">    <span class="n">article</span> <span class="o">.</span><span class="n">bd</span> <span class="p">{</span>
</span><span class="line">        <span class="ss">overflow</span><span class="p">:</span> <span class="n">hidden</span><span class="p">;</span>
</span><span class="line">        <span class="ss">padding</span><span class="p">:</span> <span class="mi">10</span><span class="n">px</span> <span class="mi">0</span><span class="p">;</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="o">&lt;</span><span class="sr">/style&gt;</span>
</span><span class="line"><span class="sr">&lt;/</span><span class="n">head</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="no">Welcome</span> <span class="n">to</span> <span class="no">My</span><span class="o">&lt;</span><span class="n">span</span><span class="o">&gt;</span><span class="no">Face</span><span class="o">&lt;</span><span class="sr">/span&gt;!&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class="line">
</span><span class="line">    <span class="o">&lt;</span><span class="p">?</span><span class="n">php</span> <span class="k">while</span><span class="p">(</span><span class="vg">$row</span> <span class="o">=</span> <span class="vg">$result</span><span class="o">-&gt;</span><span class="n">fetch</span><span class="p">(</span><span class="ss">PDO</span><span class="p">:</span><span class="ss">:FETCH_OBJ</span><span class="p">)):</span> <span class="sc">?&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="n">article</span><span class="o">&gt;</span>
</span><span class="line">        <span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;&lt;?php echo $row-&gt;url ?&gt;&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;img&quot;</span> <span class="n">target</span><span class="o">=</span><span class="s2">&quot;_blank&quot;</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="p">?</span><span class="n">php</span> <span class="n">echo</span> <span class="n">gravatar_img</span><span class="p">(</span><span class="vg">$row</span><span class="o">-&gt;</span><span class="n">email</span><span class="p">,</span> <span class="vg">$row</span><span class="o">-&gt;</span><span class="n">user_name</span><span class="p">,</span> <span class="mi">150</span><span class="p">)</span> <span class="sc">?&gt;</span>
</span><span class="line">        <span class="o">&lt;</span><span class="sr">/a&gt;</span>
</span><span class="line"><span class="sr">        &lt;div class=&quot;bd&quot;&gt;</span>
</span><span class="line"><span class="sr">            &lt;h2&gt;&lt;?php echo $row-&gt;user_name ?&gt;&lt;/</span><span class="n">h2</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s2">&quot;&lt;?php echo $row-&gt;url ?&gt;&quot;</span> <span class="n">target</span><span class="o">=</span><span class="s2">&quot;_blank&quot;</span> <span class="n">class</span><span class="o">=</span><span class="s2">&quot;email&quot;</span><span class="o">&gt;&lt;</span><span class="p">?</span><span class="n">php</span> <span class="n">echo</span> <span class="vg">$row</span><span class="o">-&gt;</span><span class="n">url</span> <span class="sc">?&gt;</span><span class="o">&lt;</span><span class="sr">/a&gt;&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class="line">            <span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="no">Neckbeard</span> <span class="ss">rating</span><span class="p">:</span> <span class="o">&lt;</span><span class="p">?</span><span class="n">php</span> <span class="n">echo</span> <span class="n">neckbeard</span><span class="p">(</span><span class="vg">$row</span><span class="o">-&gt;</span><span class="n">neck_beard</span><span class="p">)</span> <span class="sc">?&gt;</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class="line"><span class="sr">        &lt;/</span><span class="n">div</span><span class="o">&gt;</span>
</span><span class="line">    <span class="o">&lt;</span><span class="sr">/article&gt;</span>
</span><span class="line"><span class="sr">    &lt;?php endwhile; ?&gt;</span>
</span><span class="line"><span class="sr">&lt;/</span><span class="n">body</span><span class="o">&gt;</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/html&gt;</span>
</span><span class="line"><span class="sr">&lt;?php mysql_free_result($result); ?&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Finally modify <code>recipes/webserver.rb</code> to use <code>index.php.erb</code> template to 
generate a new <code>index.php</code> document root: </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/webserver.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: webserver</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2::mod_php5&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">package</span> <span class="s1">&#39;php-mysql&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:install</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># disable default site</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;000-default&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">false</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create apache config</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;dir&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/sites-available/</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;apache2.conf.erb&#39;</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create document root</span>
</span><span class="line"><span class="n">directory</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0755&#39;</span>
</span><span class="line">  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># write site</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/index.php&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;index.php.erb&#39;</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># enable myface</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Since we changed the document root and our recipe contains no statements to
remove the old <code>index.html</code> document root, we’ll need to destroy our vagrant
test node and do a full <code>vagrant up</code> again, otherwise if we visit
<a href="http://33.33.33.10">http://33.33.33.10</a> again, we’ll just see the old document root:</p>

<pre><code>$ vagrant destroy -f
$ vagrant up
</code></pre>

<h2 id="testing-iteration-12">Testing Iteration #12</h2>

<p>Visit <a href="http://33.33.33.10">http://33.33.33.10</a>  Now you should see the lovely new PHP version of
Myface.</p>

<p><img src="http://misheska.com/images/myfacephp.png" alt="myfacephp" /></p>

<h1 id="more-to-come">More to Come!</h1>

<p>In <a href="http://misheska.com/blog/2013/08/06/getting-started-writing-chef-cookbooks-the-berkshelf-way-part3/">Part 3</a>,
 we’ll introduce a new tool <code>test-kitchen</code> and show you how to
automate all the tests you’ve been doing manually to test each iteration.</p>

<p>If you want to see the full source for MyFace, check out the following
GitHub link: <a href="https://github.com/misheska/myface">https://github.com/misheska/myface</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started Writing Chef Cookbooks the Berkshelf Way, Part 1]]></title>
    <link href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/"/>
    <updated>2013-06-16T03:49:00-07:00</updated>
    <id>http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#getting-started">Getting Started</a>    <ul>
      <li><a href="#upgrade-from-berkshelf-1x">Upgrade from Berkshelf 1.x</a></li>
    </ul>
  </li>
  <li><a href="#create-the-myface-application-cookbook">Create the MyFace Application Cookbook</a></li>
  <li><a href="#prepare-a-virtual-machine-for-testing">Prepare a virtual machine for testing</a></li>
  <li><a href="#iteration-1-create-an-application-user">Iteration #1: Create an application user</a>    <ul>
      <li><a href="#testing-iteration-1">Testing Iteration #1</a></li>
    </ul>
  </li>
  <li><a href="#iteration-2---refactor-to-attributes">Iteration #2 - Refactor to attributes</a>    <ul>
      <li><a href="#testing-iteration-2">Testing Iteration #2</a></li>
    </ul>
  </li>
  <li><a href="#iteration-3---install-the-apache2-web-server">Iteration #3 - Install the Apache2 Web Server</a>    <ul>
      <li><a href="#testing-iteration-3">Testing Iteration #3</a></li>
    </ul>
  </li>
  <li><a href="#iteration-4---add-content">Iteration #4 - Add Content</a>    <ul>
      <li><a href="#testing-iteration-4">Testing Iteration #4</a></li>
    </ul>
  </li>
  <li><a href="#iteration-5---refactoring-webserver">Iteration #5 - Refactoring webserver</a>    <ul>
      <li><a href="#testing-iteration-5">Testing Iteration #5</a></li>
    </ul>
  </li>
  <li><a href="#iteration-6---version-bump-and-production-deploy">Iteration #6 - Version Bump and Production Deploy</a>    <ul>
      <li><a href="#version-bump-to-100">Version Bump to 1.0.0</a></li>
      <li><a href="#configure-berkshelf">Configure Berkshelf</a></li>
      <li><a href="#upload-cookbooks">Upload cookbooks</a></li>
      <li><a href="#converge-node">Converge node</a></li>
      <li><a href="#testing-iteration-6">Testing Iteration #6</a></li>
    </ul>
  </li>
  <li><a href="#more-to-come">More to Come!</a></li>
</ul>

<p><em>Updated Jan 29th, 2014</em></p>

<ul>
  <li><em>Per Seth Vargo,  Note about the future of vagrant-berkshelf</em></li>
</ul>

<p><em>Updated December 27th, 2013</em></p>

<ul>
  <li><em>Being more prescriptive about the necessary Ruby 1.9.x environment</em></li>
  <li><em>Bumped VirtualBox from version 4.3.4 to 4.3.6</em></li>
  <li><em>Bumped vagrant-berkshelf plugin from version 1.3.6 to 1.3.7</em></li>
  <li><em>Bumped vagrant-omnibus plugin from version 1.1.2 to 1.2.1</em></li>
  <li><em>Added alternate command lines for Windows, as necessary</em></li>
  <li><em>Debate on symbols vs strings is an unnecessary distraction, removed this section</em></li>
  <li><em>Per Dan Patrick introducing the concept of <code>cookbook_file</code> before <code>template</code>, as this was confusing</em></li>
</ul>

<p><em>Updated December 15th, 2013</em></p>

<ul>
  <li><em>Bumped CentOS basebox version from 6.4 to 6.5</em></li>
  <li><em>Added note about issue with Vagrant 1.4.0</em></li>
  <li><em>Bumped VirtualBox from version 4.2.18 to 4.3.4</em></li>
  <li><em>Bumped Vagrant from version 1.3.1 to 1.3.5</em></li>
  <li><em>Bumped vagrant-berkshelf plugin from version 1.3.3 to 1.3.6</em></li>
  <li><em>Bumped vagrant-omnibus plugin from version 1.1.1 to 1.1.2</em></li>
</ul>

<p><em>Updated September 9th, 2013</em></p>

<ul>
  <li><em>Bumped VirtualBox from version 4.2.16 to 4.2.18</em></li>
  <li><em>Bumped berkshelf from version 2.0.9 to 2.0.10</em></li>
  <li><em>Bumped vagrant from version 1.2.7 to 1.3.1</em></li>
  <li><em>Bumped vagrant-omnibus plugin from version 1.1.0 to 1.1.1</em></li>
</ul>

<p>NOTE: As of Tuesday, January 28th <a href="https://sethvargo.com/the-future-of-vagrant-berkshelf/">the Berkshelf core team announced the future deprecation and retirement of the vagrant-berkshelf plugin</a>
It is recommended that new users get started with the Berkshelf Way by 
using Test Kitchen and its <code>.kitchen.yml</code> covered in <a href="http://misheska.com/blog/2013/08/06/getting-started-writing-chef-cookbooks-the-berkshelf-way-part3/">Part 3</a>
of this series. </p>

<hr />

<p>Jamie Winsor hasn’t yet updated his <a href="http://vialstudios.com/guide-authoring-cookbooks.html">guide to authoring cookbooks the Berkshelf way</a>
to match <a href="https://github.com/RiotGames/berkshelf/issues/416">recent changes related to Vagrant 1.x</a> and <a href="http://www.opscode.com/blog/2013/03/11/chef-11-server-up-and-running/">Chef 11</a>
This post is an attempt to update these instructions, walking through Jamie’s
and Sean O’Meara’s example app - <a href="https://github.com/someara/myface-cookbook">MyFace</a>.
For more information on <a href="http://berkshelf.com/">Berkshelf</a>, check out his recent
<a href="http://www.youtube.com/watch?v=hYt0E84kYUI">talk</a>
and <a href="http://www.slideshare.net/resetexistence/the-berkshelf-way-21787019?from_search=1">slides</a>
from ChefConf 2013.</p>

<p>NOTE: The source code examples covered in this article can be found on
GitHub: <a href="https://github.com/misheska/myface">https://github.com/misheska/myface</a></p>

<h1 id="getting-started">Getting Started</h1>
<p>You can write Chef Cookbooks with Berkshelf on Mac OS X, Linux or Windows.
To set up your cookbook-writing environment, make sure you have the following
installed:</p>

<ul>
  <li>
    <p><a href="http://virtualbox.org">Install VirtualBox 4.x</a>.  VirtualBox 4.3.6 was tested
for this post.</p>
  </li>
  <li>
    <p><a href="http://vagrantup.com">Install Vagrant 1.4.1</a> (or higher).  Vagrant 1.4.1 was tested for this post. </p>
  </li>
  <li>
    <p>Set up a <a href="http://misheska.com/blog/2013/12/26/set-up-a-sane-ruby-cookbook-authoring-environment-for-chef/">sane Ruby 1.9.x environment</a> for Chef cookbook authoring</p>
  </li>
  <li>
    <p>Install Berkshelf</p>
  </li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ gem install berkshelf --no-ri --no-rdoc
</span><span class="line">Fetching: berkshelf-2.0.10.gem (100%)
</span><span class="line">Successfully installed berkshelf-2.0.10
</span><span class="line">1 gem installed
</span><span class="line">
</span><span class="line">$ berks -v
</span><span class="line">Berkshelf (2.0.10)
</span><span class="line">
</span><span class="line">Copyright 2012-2013 Riot Games
</span><span class="line">
</span><span class="line">    Jamie Winsor (&lt;jamie@vialstudios.com&gt;)
</span><span class="line">    Josiah Kiehl (&lt;jkiehl@riotgames.com&gt;)
</span><span class="line">    Michael Ivey (&lt;michael.ivey@riotgames.com&gt;)
</span><span class="line">    Justin Campbell (&lt;justin.campbell@riotgames.com&gt;)
</span><span class="line">    Seth Vargo (&lt;sethvargo@gmail.com&gt;)</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Install the vagrant-berkshelf Plugin (1.3.3 or higher)</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ vagrant plugin install vagrant-berkshelf
</span><span class="line">Installing the 'vagrant-berkshelf' plugin. This can take a few minutes...
</span><span class="line">Installed the plugin 'vagrant-berkshelf (1.3.7)'!</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>Install the vagrant-omnibus plugin (1.1.0 or higher)</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">$ vagrant plugin install vagrant-omnibus
</span><span class="line">Installing the 'vagrant-omnibus' plugin.  This can take a few minutes...
</span><span class="line">Installed the plugin 'vagrant-omnibus (1.2.1)'!</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="upgrade-from-berkshelf-1x">Upgrade from Berkshelf 1.x</h2>
<p>NOTE: If you had a previous 1.x version of the berkshelf plugin installed,
when it was named <code>berkshelf-vagrant</code>, which you can verify by running
the following command:</p>

<pre><code>$ vagrant plugin list
berkshelf-vagrant (1.1.3)
</code></pre>

<p>Make sure you fully uninstall the old <code>berkshelf-vagrant</code> plugin before
installing the new <code>vagrant-berkshelf</code> plugin, as vagrant will get confused
by the name change:</p>

<pre><code>$ vagrant plugin uninstall berkshelf-vagrant
Uninstalling the 'berkshelf-vagrant' plugin...
$ vagrant plugin install vagrant-berkshelf
Installing the 'vagrant-berkshelf' plugin.  This can take a few minutes...
</code></pre>

<h1 id="create-the-myface-application-cookbook">Create the MyFace Application Cookbook</h1>
<p>Key to the Berkshelf way is the use of the Application Cookbook Pattern.  An
application cookbook contains the list of recipes needed to build your
application or service.  As an example, this blog post will walk you through
the creation of an example service - MyFace - the next killer social web app.</p>

<p>First create a new cookbook for the MyFace application using the
<code>berks cookbook myface</code> command:</p>

<pre><code>$ berks cookbook myface
      create  myface/files/default
      create  myface/templates/default
      create  myface/attributes
      create  myface/definitions
      create  myface/libraries
      create  myface/providers
      create  myface/recipes
      create  myface/resources
      create  myface/recipes/default.rb
      create  myface/metadata.rb
      create  myface/LICENSE
      create  myface/README.md
      create  myface/Berksfile
      create  myface/Thorfile
      create  myface/chefignore
      create  myface/.gitignore
         run  git init from "./myface"
      create  myface/Gemfile
      create  .kitchen.yml
      append  Thorfile
      create  test/integration/default
      append  .gitignore
      append  .gitignore
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
      create  myface/Vagrantfile
</code></pre>

<p>Run <code>bundle install</code> in the newly created cookbook directory to install the
necessary Gem dependencies:</p>

<pre><code>$ cd myface
$ bundle install
Fetching gem metadata from https://rubygems.org/.......
Fetching additional metadata from https://rubygems.org/..
Resolving dependencies...
Using i18n (0.6.9)
Using multi_json (1.8.2)
Using activesupport (3.2.16)
. . .
Using berkshelf (2.0.10)
Using mixlib-shellout (1.3.0)
Using net-scp (1.1.2)
Using safe_yaml (0.9.7)
Using test-kitchen (1.1.1)
Using kitchen-vagrant (0.14.0)
Using bundler (1.5.0)
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
</code></pre>

<h1 id="prepare-a-virtual-machine-for-testing">Prepare a virtual machine for testing</h1>
<p>It’s a good idea to develop your cookbook incrementally, testing 
in short iterations.  Berkshelf integrates with Vagrant to deploy
your cookbook changes to a virtual machine for testing.</p>

<p>Ensure that the <code>vagrant-omnibus</code> plugin is installed correctly.</p>

<pre><code>$ vagrant plugin list
...
vagrant-omnibus (1.2.1)
...
</code></pre>

<p>The <code>vagrant-omnibus</code> plugin hooks into Vagrant and allows you to specify
the version of the Chef Omnibus package you want installed using the
<code>omnibus.chef_version</code> key</p>

<p>Edit the Vagrantfile generated by the <code>berks cookbook</code> command to use
a VirtualBox template that does not have a version of Chef provisioned.
Then, specify that you want your image to always use the latest version
of Chef via the <code>config.omnibus.chef_version</code> config option and replace the
legacy <code>config.ssh.max_tries</code> and <code>config.ssh.timeout</code> settings with 
<code>config.vm.boot_timeout</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/Vagrantfile  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Vagrant</span><span class="o">.</span><span class="n">configure</span><span class="p">(</span><span class="s2">&quot;2&quot;</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">config</span><span class="o">|</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">hostname</span> <span class="o">=</span> <span class="s2">&quot;myface-berkshelf&quot;</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box</span> <span class="o">=</span> <span class="s2">&quot;centos65&quot;</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">box_url</span> <span class="o">=</span> <span class="s2">&quot;https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box&quot;</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">omnibus</span><span class="o">.</span><span class="n">chef_version</span> <span class="o">=</span> <span class="ss">:latest</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">network</span> <span class="ss">:private_network</span><span class="p">,</span> <span class="ss">ip</span><span class="p">:</span> <span class="s2">&quot;33.33.33.10&quot;</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">boot_timeout</span> <span class="o">=</span> <span class="mi">120</span>
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">berkshelf</span><span class="o">.</span><span class="n">enabled</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class="line">
</span><span class="line">  <span class="n">config</span><span class="o">.</span><span class="n">vm</span><span class="o">.</span><span class="n">provision</span> <span class="ss">:chef_solo</span> <span class="k">do</span> <span class="o">|</span><span class="n">chef</span><span class="o">|</span>
</span><span class="line">    <span class="n">chef</span><span class="o">.</span><span class="n">json</span> <span class="o">=</span> <span class="p">{</span>
</span><span class="line">      <span class="ss">:mysql</span> <span class="o">=&gt;</span> <span class="p">{</span>
</span><span class="line">        <span class="ss">:server_root_password</span> <span class="o">=&gt;</span> <span class="s1">&#39;rootpass&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:server_debian_password</span> <span class="o">=&gt;</span> <span class="s1">&#39;debpass&#39;</span><span class="p">,</span>
</span><span class="line">        <span class="ss">:server_repl_password</span> <span class="o">=&gt;</span> <span class="s1">&#39;replpass&#39;</span>
</span><span class="line">      <span class="p">}</span>
</span><span class="line">    <span class="p">}</span>
</span><span class="line">    <span class="n">chef</span><span class="o">.</span><span class="n">run_list</span> <span class="o">=</span> <span class="o">[</span>
</span><span class="line">      <span class="s2">&quot;recipe[myface::default]&quot;</span>
</span><span class="line">    <span class="o">]</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>NOTE: Vagrant 1.3.0 deprecated the <code>config.ssh.max_tries</code> and 
<code>config.ssh.timeout</code> settings that are inserted in the Vagrantfile by
Berkshelf.  Until Berkshelf is updated for these changes to vagrant, you’ll
need to remove these settings from the <code>Vagrantfile</code> and replace them with
<code>config.vm.boot_timeout</code> as above.  If you are using vagrant 1.2.x, keep the
<code>config.ssh.max_tries</code> and <code>config.ssh.timeout</code> settings, as the new
<code>config.vm.boot_timeout</code> setting is not valid in the older version of vagrant.</p>

<p>Run <code>vagrant up</code> to start up the virtual machine and to test the stub MyFace
cookbook you just created:</p>

<pre><code>$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
[default] Box 'centos65' was not found. Fetching box from specified URL for
the provider 'virtualbox'. Note that if the URL does not have
a box for this provider, you should interrupt Vagrant now and add
the box yourself. Otherwise Vagrant will attempt to download the
full box prior to discovering this error.
Downloading box from URL: https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box
Extracting box...te: 6881k/s, Estimated time remaining: 0:00:01)
Successfully added box 'centos65' with provider 'virtualbox'!
[default] Importing base box 'centos65'...
[default] Matching MAC address for NAT networking...
[default] Setting the name of the VM...
[default] Clearing any previously set forwarded ports...
[Berkshelf] This version of the Berkshelf plugin has not been fully tested on this version of Vagrant.
[Berkshelf] You should check for a newer version of vagrant-berkshelf.
[Berkshelf] If you encounter any errors with this version, please report them at https://github.com/RiotGames/vagrant-berkshelf/issues
[Berkshelf] You can also join the discussion in #berkshelf on Freenode.
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/default/vagrant/berkshelf-20131228-44316-176rdqc-default'
[Berkshelf] Using myface (0.1.0)
[default] Clearing any previously set network interfaces...
[default] Preparing network interfaces based on configuration...
[default] Forwarding ports...
[default] -- 22 =&gt; 2222 (adapter 1)
[default] Booting VM...
[default] Waiting for machine to boot. This may take a few minutes...
[default] Machine booted and ready!
[default] Setting hostname...
[default] Configuring and enabling network interfaces...
[default] Mounting shared folders...
[default] -- /vagrant
[default] -- /tmp/vagrant-chef-1/chef-solo-1/cookbooks
[default] Installing Chef 11.8.2 Omnibus package...
[default] Downloading Chef 11.8.2 for el...
[default] downloading https://www.opscode.com/chef/metadata?v=11.8.2&amp;prerelease=false&amp;p=el&amp;pv=6&amp;m=x86_64
  to file /tmp/install.sh.2993/metadata.txt
trying wget...
[default] url	https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.8.2-1.el6.x86_64.rpm
md5	10f3d0da82efa973fe91cc24a6a74549
sha256	044558f38d25bbf75dbd5790ccce892a38e5e9f2a091ed55367ab914fbd1cfed
[default] downloaded metadata file looks valid...
[default] downloading https://opscode-omnibus-packages.s3.amazonaws.com/el/6/x86_64/chef-11.8.2-1.el6.x86_64.rpm
  to file /tmp/install.sh.2993/chef-11.8.2.x86_64.rpm
trying wget...
[default] Checksum compare with sha256sum succeeded.
[default] Installing Chef 11.8.2
installing with rpm...
[default] warning:
[default] /tmp/install.sh.2993/chef-11.8.2.x86_64.rpm: Header V4 DSA/SHA1 Signature, key ID 83ef826a: NOKEY
[default] Preparing...
[default] ##################################################
[default]
[default] chef
[default] #
[default]
[default] Thank you for installing Chef!
[default] Running provisioner: chef_solo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-12-28T13:42:49-08:00] INFO: Forking chef instance to converge...
[2013-12-28T13:42:49-08:00] INFO: *** Chef 11.8.2 ***
[2013-12-28T13:42:49-08:00] INFO: Chef-client pid: 3368
[2013-12-28T13:42:50-08:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-12-28T13:42:50-08:00] INFO: Run List is [recipe[myface::default]]
[2013-12-28T13:42:50-08:00] INFO: Run List expands to [myface::default]
[2013-12-28T13:42:50-08:00] INFO: Starting Chef Run for myface-berkshelf
[2013-12-28T13:42:50-08:00] INFO: Running start handlers
[2013-12-28T13:42:50-08:00] INFO: Start handlers complete.
[2013-12-28T13:42:50-08:00] INFO: Chef Run complete in 0.023677599 seconds
[2013-12-28T13:42:50-08:00] INFO: Running report handlers
[2013-12-28T13:42:50-08:00] INFO: Report handlers complete
[2013-12-28T13:42:49-08:00] INFO: Forking chef instance to converge...
</code></pre>

<p>If all goes well, you should see <code>Chef Run complete</code> with no errors.</p>

<p>NOTE: The basebox URL comes from my current collection of baseboxes.  The
following link points to a README file which provides links to all the
vagrant baseboxes I use (which I normally update frequently):
<a href="https://github.com/misheska/basebox-packer">https://github.com/misheska/basebox-packer</a></p>

<p>If you would ever like to delete your test virtual machine and start over,
you can destroy your test virtual machine with the <code>vagrant destroy</code> command:</p>

<pre><code>$ vagrant destroy
Are you sure you want to destroy the 'default' VM? [y/N] y
[default] Forcing shutdown of VM...
[default] Destroying VM and associated drives...
[Berkshelf] Cleaning Vagrant's berkshelf
[default] Running cleanup tasks for 'chef_solo' provisioner...
</code></pre>

<p>Run <code>vagrant up</code> to recreate the test virtual machine.</p>

<p><strong>NOTE:</strong> If you just ran <code>vagrant destroy</code> make sure you run <code>vagrant up</code>
before proceeding to the next section.</p>

<h1 id="iteration-1-create-an-application-user">Iteration #1: Create an application user</h1>
<p>For our first short iteration, let’s create a <code>myface</code> user under which
we’ll run our application.  One best practice is to avoid running
applications as root and create a user/group under which the application runs
instead who has just enough rights that the app needs.</p>

<p>Edit <code>myface/recipes/default.rb</code> defining a new <a href="http://docs.opscode.com/resource_group.html">Group Resource</a>
and <a href="http://docs.opscode.com/resource_user.html">User Resource</a> for myface,
so it looks like the following:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: default</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="s1">&#39;myface&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Save <code>recipes/default.rb</code> and re-run <code>vagrant provision</code> to create the
myface user on your test virtual machine:</p>

<pre><code>$ vagrant provision
[Berkshelf] This version of the Berkshelf plugin has not been fully tested on this version of Vagrant.
[Berkshelf] You should check for a newer version of vagrant-berkshelf.
[Berkshelf] If you encounter any errors with this version, please report them at https://github.com/RiotGames/vagrant-berkshelf/issues
[Berkshelf] You can also join the discussion in #berkshelf on Freenode.
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/default/vagrant/berkshelf-20131228-44581-4bhc9d-default'
[Berkshelf] Using myface (0.1.0)
[default] Chef 11.8.2 Omnibus package is already installed.
[default] Running provisioner: chef_solo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-12-28T13:57:59-08:00] INFO: Forking chef instance to converge...
[2013-12-28T13:57:59-08:00] INFO: *** Chef 11.8.2 ***
[2013-12-28T13:57:59-08:00] INFO: Chef-client pid: 3845
[2013-12-28T13:57:59-08:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-12-28T13:57:59-08:00] INFO: Run List is [recipe[myface::default]]
[2013-12-28T13:57:59-08:00] INFO: Run List expands to [myface::default]
[2013-12-28T13:57:59-08:00] INFO: Starting Chef Run for myface-berkshelf
[2013-12-28T13:57:59-08:00] INFO: Running start handlers
[2013-12-28T13:57:59-08:00] INFO: Start handlers complete.
[2013-12-28T13:57:59-08:00] INFO: group[myface] created
[2013-12-28T13:57:59-08:00] INFO: user[myface] created
[2013-12-28T13:57:59-08:00] INFO: Chef Run complete in 0.157055758 seconds
[2013-12-28T13:57:59-08:00] INFO: Running report handlers
[2013-12-28T13:57:59-08:00] INFO: Report handlers complete
[2013-12-28T13:57:59-08:00] INFO: Forking chef instance to converge...
</code></pre>

<p>You should expect to see the Chef run complete with no errors.  Notice
that it also creates <code>group[myface]</code> and <code>user[myface]</code>.</p>

<h2 id="testing-iteration-1">Testing Iteration #1</h2>

<p>Verify that Chef actually created the myface user on our test virtual
machine by running the following on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "getent passwd myface"
myface:x:497:501::/home/myface:/bin/bash
</code></pre>

<p>On Windows, add two extra parameters to the ssh invocation to squelch some
error messages:</p>

<pre><code>&gt; vagrant ssh -c "getent passwd myface" -- -n -T
myface:x:497:501::/home/myface:/bin/bash
</code></pre>

<p>The extra <code>-n</code> and <code>-T</code> parameters for Windows are additional ssh parameters
to prevent trying to read from stdin and to suppress an error message
that a pseudo terminal can’t be allocated, respectively.  On Windows,
vagrant runs as a service, and windows services do not have console
sessions attached which ssh assumes, so you’ll see some errors on Windows
if you don’t use these extra parameters.</p>

<p>We use <code>vagrant ssh -c</code> to run a command on our test virtual machine.  The
<code>getent</code> command can be used to query all user databases.  In this
case we’re looking for <code>myface</code>, and it exists!</p>

<p>Because we are using well-defined resources that are completely
<a href="http://en.wikipedia.org/wiki/Idempotence">idempotent</a>, you should notice
that if you run <code>vagrant provision</code> again, the Chef run executes more quickly
and it does not try to re-create the user/group it already created.</p>

<pre><code>$ vagrant provision
[Berkshelf] This version of the Berkshelf plugin has not been fully tested on this version of Vagrant.
[Berkshelf] You should check for a newer version of vagrant-berkshelf.
[Berkshelf] If you encounter any errors with this version, please report them at https://github.com/RiotGames/vagrant-berkshelf/issues
[Berkshelf] You can also join the discussion in #berkshelf on Freenode.
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/default/vagrant/berkshelf-20131228-44581-4bhc9d-default'
[Berkshelf] Using myface (0.1.0)
[default] Chef 11.8.2 Omnibus package is already installed.
[default] Running provisioner: chef_solo...
Generating chef JSON and uploading...
Running chef-solo...
[2013-12-28T14:01:18-08:00] INFO: Forking chef instance to converge...
[2013-12-28T14:01:18-08:00] INFO: *** Chef 11.8.2 ***
[2013-12-28T14:01:18-08:00] INFO: Chef-client pid: 4378
[2013-12-28T14:01:18-08:00] INFO: Setting the run_list to ["recipe[myface::default]"] from JSON
[2013-12-28T14:01:18-08:00] INFO: Run List is [recipe[myface::default]]
[2013-12-28T14:01:18-08:00] INFO: Run List expands to [myface::default]
[2013-12-28T14:01:18-08:00] INFO: Starting Chef Run for myface-berkshelf
[2013-12-28T14:01:18-08:00] INFO: Running start handlers
[2013-12-28T14:01:18-08:00] INFO: Start handlers complete.
[2013-12-28T14:01:18-08:00] INFO: Chef Run complete in 0.023349135 seconds
[2013-12-28T14:01:18-08:00] INFO: Running report handlers
[2013-12-28T14:01:18-08:00] INFO: Report handlers complete
[2013-12-28T14:01:18-08:00] INFO: Forking chef instance to converge...
</code></pre>

<h1 id="iteration-2---refactor-to-attributes">Iteration #2 - Refactor to attributes</h1>
<p>What if at some point you wanted to change the name of the <code>myface</code> user/group
you just created to something else?  At the moment, you would need to edit
<code>myface/recipes/default.rb</code> in three places.</p>

<p>Let’s create a new file called <code>myface/attributes/default.rb</code> which
initializes Chef <a href="http://docs.opscode.com/essentials_cookbook_attribute_files.html">attributes</a>
defining the user name and group name under which our application will run so
that you <a href="http://en.wikipedia.org/wiki/Don't_repeat_yourself">don’t repeat yourself</a>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>In Chef, attributes are a hash of a hash used to override the default settings
on a node.  The first hash is the cookbook name - in our
case we’ve named our cookbook <code>'myface'</code>. The second hash is the name of
our attribute - in this case, we’re defining two new attributes: <code>'user'</code> and
<code>'group'</code>.</p>

<p><code>default</code> implies the use of the <a href="http://docs.opscode.com/chef/essentials_node_object.html">node object</a>
<code>node.default</code> and is a Chef attribute file shorthand.  The following are
equivalent definitions to the ones above:</p>

<pre><code>node.default['myface']['user'] = 'myface'
node.default['myface']['group'] = 'myface'
</code></pre>

<p>Note that the hash names are defined as strings enclosed by quotes.
In this case, it doesn’t matter if you use single or double quotes.  In
Chef source files, double quotes indicate that
<a href="http://rubymonk.com/learning/books/1/chapters/5-strings/lessons/31-string-basics?section=143">string interpolation</a>
should be performed, replacing special tokens in a string with their
values.  If single quotes are used, no string interpolation is performed.
We’ll see more examples of when string interpolation is necessary later
in this artile.</p>

<p>Now that you’ve created your attribute definitions, edit
<code>myface/recipes/default.rb</code> and replace all references to the ‘myface’ user name
with <code>node['myface']['user']</code> and all references to the ‘myface’ group with
<code>node['myface']['group']</code>.  <code>myface/recipes/default.rb</code> should now look like
this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: default</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Re-provision with <code>vagrant provision</code> to see how the refactor went:</p>

<pre><code>$ vagrant provision
</code></pre>

<p>As long as you didn’t create any syntax errors in your refactoring file edits,
there should be no net change on the virtual machine test node (as you’ve only
just moved some strings into a node attribute).  </p>

<h2 id="testing-iteration-2">Testing Iteration #2</h2>

<p>Running  <code>getent</code> on the test virtual machine should also produce the same
result as when you validated Iteration #1 on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "getent passwd myface"
myface:x:497:501::/home/myface:/bin/bash
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "getent passwd myface" -- -n -T
myface:x:497:501::/home/myface:/bin/bash
</code></pre>

<h1 id="iteration-3---install-the-apache2-web-server">Iteration #3 - Install the Apache2 Web Server</h1>
<p>Our hot new social networking application, myface, is a web app, so we need
to install a web server.  Let’s install the Apache2 web server.</p>

<p>Modify <code>myface/recipes/default.rb</code> to include the apache2 cookbook’s default
recipe:</p>

<pre><code>include_recipe 'apache2'
</code></pre>

<p>The resultant <code>myface/recipes/default.rb</code> file should look like so:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: default</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Since you are loading Apache2 from another cookbook, you need to configure the
dependency in your metadata.  Edit <code>myface/metadata.rb</code> and add the <code>apache2</code>
dependency at the bottom:</p>

<pre><code>depends 'apache2', '~&gt; 1.8.0'
</code></pre>

<p>This tells Chef that the myface cookbook depends on the apache2 cookbook.
We’ve also specified a version constraint using the optimistic operator
<code>~&gt;</code> to tell our Chef that we want the latest version of the apache2 cookbook
that is greater than 1.8.0 but <em>not</em> 1.9.0 or higher.</p>

<p>It is recommended that Chef cookbooks follow a
<a href="http://semver.org/">Semantic Versioning</a> scheme.  So if you write your
cookbook to use the latest apache2 1.8.x cookbook, if the apache2 cookbook is
ever bumped to a 1.9.x version (or 2.x), it has some public API functionality
that has at least been deprecated.  So you’ll want to review the changes and
test before automatically using an apache2 cookbook version 1.9.x or higher.
However, automatic use of any new 1.8.x is perfectly fine, because no
only backwards-compatible bug fixes has been introduced.  Semantic Versioning
guarantees there are no changes in the public APIs.</p>

<p>Your <code>myface/metadata.rb</code> file should look like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/metadata.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">name</span>             <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">maintainer</span>       <span class="s1">&#39;YOUR_NAME&#39;</span>
</span><span class="line"><span class="n">maintainer_email</span> <span class="s1">&#39;YOUR_EMAIL&#39;</span>
</span><span class="line"><span class="n">license</span>          <span class="s1">&#39;All rights reserved&#39;</span>
</span><span class="line"><span class="n">description</span>      <span class="s1">&#39;Installs/Configures myface&#39;</span>
</span><span class="line"><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;README.md&#39;</span><span class="p">))</span>
</span><span class="line"><span class="n">version</span>          <span class="s1">&#39;0.1.0&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;apache2&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.8.0&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Now when you re-run <code>vagrant provision</code> it will install apache2 on your
test virtual machine:</p>

<pre><code>$ vagrant provision
[Berkshelf] This version of the Berkshelf plugin has not been fully tested on this version of Vagrant.
[Berkshelf] You should check for a newer version of vagrant-berkshelf.
[Berkshelf] If you encounter any errors with this version, please report them at https://github.com/RiotGames/vagrant-berkshelf/issues
[Berkshelf] You can also join the discussion in #berkshelf on Freenode.
[Berkshelf] Updating Vagrant's berkshelf: '/Users/misheska/.berkshelf/default/vagrant/berkshelf-20131228-44581-4bhc9d-default'
[Berkshelf] Using myface (0.1.0)
[Berkshelf] Installing apache2 (1.8.14) from site: 'http://cookbooks.opscode.com/api/v1/cookbooks'
[default] Chef 11.8.2 Omnibus package is already installed.
[default] Running provisioner: chef_solo...
Generating chef JSON and uploading...
Running chef-solo...
...
[2013-12-28T14:10:49-08:00] INFO: service[apache2] started
[2013-12-28T14:10:49-08:00] INFO: template[/etc/httpd/mods-available/deflate.conf] sending restart action to service[apache2] (delayed)
[2013-12-28T14:10:51-08:00] INFO: service[apache2] restarted
[2013-12-28T14:10:51-08:00] INFO: Chef Run complete in 38.225601754 seconds
[2013-12-28T14:10:51-08:00] INFO: Running report handlers
[2013-12-28T14:10:51-08:00] INFO: Report handlers complete
[2013-12-28T14:10:12-08:00] INFO: Forking chef instance to converge...
</code></pre>

<h2 id="testing-iteration-3">Testing Iteration #3</h2>

<p>You can verify that the apache2 <code>httpd</code> service is running on your berkshelf
virtual machine with the following command on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "sudo /sbin/service httpd status"
httpd (pid  5758) is running.
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "sudo /sbin/service httpd status" -- -n -T
httpd (pid  5758) is running.
</code></pre>

<p>Since this is a web server, so you can also check it out in your favorite web
browser.  The host-only private network address for the virtual machine
that Berkshelf created is in the <code>Vagrantfile</code>.  Display the IP address with
the following command:</p>

<pre><code>$ grep ip: Vagrantfile
config.vm.network :private_network, ip: "33.33.33.10"
</code></pre>

<p>Check it out with your favorite web browser:</p>

<p><a href="http://33.33.33.10">http://33.33.33.10</a></p>

<p>While you will get a <code>404 Not Found</code> error because we haven’t added any
content to our web site yet, the important part is that <code>Apache Server
at 33.33.33.10 Port 80</code> sent the response:</p>

<p><img src="http://misheska.com/images/apachewebserver.png" alt="Apache Server Response" /></p>

<p>Wait a second, though.  You never downloaded the <code>apache2</code> cookbook!
That’s the magic of the Berkshelf Vagrant plugin you installed earlier.  The
Berkshelf Vagrant plugin will make sure that any changes you make to your
cookbook and all of your cookbook’s dependencies are made available to your
virtual machine.  Berkshelf automatically loads all your cookbook dependencies
much like Bundler automatically loads all your gem dependencies.</p>

<p>Where does the Berkshelf put the cookbooks it downloads?  You can find them
in <code>~/.berkshelf/default/cookbooks</code> (or
<code>%USERPROFILE%\.berkshelf\default\cookbooks</code> on Windows)</p>

<pre><code>Users/misheska/.berkshelf/default/cookbooks
└── apache2-1.8.14
    ├── attributes
    ├── definitions
    ├── files
    │   └── default
    │       └── tests
    │           └── minitest
    │               └── support
    ├── recipes
    └── templates
        └── default
            └── mods
</code></pre>

<p><code>~/.berkshelf</code> (or <code>%USERPROFILE%\.berkshelf</code> on Windows) is just the default
location where Berkshelf stores data on your local disk.  This location can be
altered by setting the environment variable <code>BERKSHELF_PATH</code>.</p>

<h1 id="iteration-4---add-content">Iteration #4 - Add Content</h1>
<p>Let’s add some content to make that 404 go away.  Edit
<code>myface/recipes/default.rb</code> as follows:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: default</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c1"># disable default site</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;000-default&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">false</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create apache config</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;dir&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/sites-available/myface.conf&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;apache2.conf.erb&#39;</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create document root</span>
</span><span class="line"><span class="n">directory</span> <span class="s1">&#39;/srv/apache/myface&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line">  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># write site</span>
</span><span class="line"><span class="n">cookbook_file</span> <span class="s1">&#39;/srv/apache/myface/index.html&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span> <span class="c1"># forget me to create debugging exercise</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># enable myface</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;myface.conf&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>If you’re familiar with Chef and configuring a web app via apache2, nothing
here should be too surprising.  But if not, spend some time reading up on
the resource references at <a href="http://docs.opscode.com">http://docs.opscode.com</a></p>

<p>Note our first use of <a href="http://rubymonk.com/learning/books/1/chapters/5-strings/lessons/31-string-basics?section=143">string interpolation</a>
on line 26:</p>

<pre><code>template "#{node['apache']['dir']}/sites-available/myface.conf" do
</code></pre>

<p>We need to enclose the template string in double-quotes because we’re
using the Ruby <code>#{}</code> operator to indicate that we want to perform string
interpolation and evaluate the value of <code>node['apache']['dir']</code> inserting the
evaluated value in the string.</p>

<p>Create a file to contain our web site content as
<code>myface/files/default/index.html</code>.<br />
Chef looks for files in the <code>files</code> subtree by default.  A subdirectory
level underneath <code>files</code> is used to specify platform-specific files.
Files in <code>files/default</code> are used with every platform.   During the Chef
run this file is copied to the target node in the location
specified in the <a href="http://docs.opscode.com/resource_cookbook_file.html">cookbook_file</a>
resource (see line 38 of <code>myface/recipes/default.rb</code>).</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/files/default/index.html  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="no">Welcome</span> <span class="n">to</span> <span class="no">MyFace</span><span class="o">!</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>With Chef, you can also create config files from templates using
<a href="http://ruby-doc.org/stdlib-1.9.3/libdoc/erb/rdoc/ERB.html">ERB</a>, a
Ruby templating system.  When the template <code>.erb</code> file is processed by Chef,
it will replace any token bracketed by a <code>&lt;%=</code> <code>%&gt;</code> tag with the value
of the Ruby expression inside the token (like <code>node[:hostname]</code>).  (Unlike
with a <code>cookbook_file</code> whose content is static and is never manipulated
by Chef).</p>

<p>Chef expects ERB template files to be in the <code>templates</code> subirectory of a
cookbook.  A subdirectory level underneath <code>templates</code> is used to specify
platorm-specific files.  Files in the <code>templates/default</code> subdirectory are
used with every platform.</p>

<p>Create a new template file called
<code>myface/templates/default/apache2.conf.erb</code> which will become the
file <code>.../sites-available/myface.conf</code> on our test virtual machine
(refer to <code>myface/recipes/default.rb</code> above):</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/templates/default/apache2.conf.erb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># Managed by Chef for &lt;%= node[&#39;hostname&#39;] %&gt;</span>
</span><span class="line">
</span><span class="line"><span class="no">Alias</span> <span class="o">/</span> <span class="sr">/srv/</span><span class="n">apache</span><span class="o">/</span><span class="n">myface</span><span class="o">/</span>
</span><span class="line">
</span><span class="line"><span class="o">&lt;</span><span class="no">Directory</span> <span class="sr">/srv/</span><span class="n">apache</span><span class="o">/</span><span class="n">myface</span><span class="o">&gt;</span>
</span><span class="line">	<span class="no">Options</span> <span class="no">FollowSymLinks</span> <span class="o">+</span><span class="no">Indexes</span>
</span><span class="line">	<span class="no">Allow</span> <span class="n">from</span> <span class="no">All</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/Directory&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>After you have created these three files, run <code>vagrant provision</code> to deploy
your changes:</p>

<pre><code>$ vagrant provision
</code></pre>

<h2 id="testing-iteration-4">Testing Iteration #4</h2>

<p>If the Chef run completed successfully, if you point your web browser at your
myface web site again:</p>

<p><a href="http://33.33.33.10">http://33.33.33.10</a></p>

<p>You’ll see some lovely content!</p>

<p><img src="http://misheska.com/images/welcometomyface.png" alt="Welcome to MyFace" /></p>

<p>Also, note the difference between a <code>cookbook_file</code> and a <code>template</code>.  Run this
command on Mac OS X/Linux to print out <code>index.html</code> that was copied to the node during the Chef run.</p>

<pre><code>$ vagrant ssh -c "cat /srv/apache/myface/index.html"
Welcome to MyFace!
Connection to 127.0.0.1 closed.
</code></pre>

<p>And on Windows:</p>

<pre><code>&gt; vagrant ssh -c "cat /srv/apache/myface/index.html" -- -n -T
Welcome to MyFace!
Connection to 127.0.0.1 closed.
</code></pre>

<p>Note that <code>index.html</code> is copied verbatim with no changes to the file.</p>

<p>By comparison, in a <code>template</code> any ERB tokens are replaced when they are
copied to the node.  Look at the resultant <code>myface.conf</code> on the node
with the following command on Mac OS X/Linux:</p>

<pre><code>$ vagrant ssh -c "cat /etc/httpd/sites-available/myface.conf"
# Managed by Chef for myface-berkshelf

Alias / /srv/apache/myface/

&lt;Directory /srv/apache/myface&gt;
 	Options FollowSymLinks +Indexes
 	Allow from All
&lt;/Directory&gt;
Connection to 127.0.0.1 closed.
</code></pre>

<p>and with the following command on Windows:</p>

<pre><code>&gt; vagrant ssh -c "cat /etc/httpd/sites-available/myface.conf" -- -n -T
</code></pre>

<p>The ERB token <code>&lt;%= node['hostname'] %&gt;</code> was replaced by the evaluated string
<code>myface-berkshelf</code> during the Chef run.</p>

<h1 id="iteration-5---refactoring-webserver">Iteration #5 - Refactoring webserver</h1>
<p><code>myface/recipes/default.rb</code> is getting rather large and we’ve got a lot more
to add to our cookbook.  Let’s go through another refactoring pass.</p>

<p>Let’s move all the webserver-related resources to their own file
<code>myface/recipes/webserver.rb</code>.  Rename <code>myface/recipes/default.rb</code> to
<code>myface/recipes/webserver.rb</code>.</p>

<p>Now <code>myface/recipes/webserver.rb</code> should look like this: </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/webserver.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: webserver</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c1"># disable default site</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;000-default&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">false</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create apache config</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;dir&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/sites-available/myface.conf&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;apache2.conf.erb&#39;</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create document root</span>
</span><span class="line"><span class="n">directory</span> <span class="s1">&#39;/srv/apache/myface&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line">  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># write site</span>
</span><span class="line"><span class="n">cookbook_file</span> <span class="s1">&#39;/srv/apache/myface/index.html&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># enable myface</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;myface.conf&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Create a new <code>myface/recipes/default.rb</code> file which references <code>webserver.rb</code>.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: default</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;myface::webserver&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Converge your node again to make sure there are no syntax errors:</p>

<pre><code>$ vagrant provision
</code></pre>

<p>Let’s eliminate some more of the duplication that crept in while we were
working on things.  Edit <code>myface/attributes/default.rb</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/attributes/default.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;name&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;myface.conf&#39;</span>
</span><span class="line"><span class="n">default</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span> <span class="o">=</span> <span class="s1">&#39;/srv/apache/myface&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>NOTE: With Chef 11, it is now possible to nest attributes, like so:</p>

<pre><code>node.default['app']['name'] = 'my_app'
node.default['app']['document_root'] = "/srv/apache/#{node['app']['name']}"
</code></pre>

<p>This approach is overkill for MyFace (and is frankly overkill for most
Chef recipes).  Even though nesting is an option now with Chef 11, you should
try to keep your attribute files as simple and straightforward to follow as
possible.</p>

<p>In <code>myface/recipes/webserver.rb</code> replace the corresponding hardcoded references
to attribute references: </p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/recipes/webserver.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Cookbook Name:: myface</span>
</span><span class="line"><span class="c1"># Recipe:: webserver</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># Copyright (C) 2013 YOUR_NAME</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line"><span class="c1"># All rights reserved - Do Not Redistribute</span>
</span><span class="line"><span class="c1">#</span>
</span><span class="line">
</span><span class="line"><span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">
</span><span class="line"><span class="n">user</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;user&#39;</span><span class="o">]</span> <span class="k">do</span>
</span><span class="line">  <span class="n">group</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;group&#39;</span><span class="o">]</span>
</span><span class="line">  <span class="nb">system</span> <span class="kp">true</span>
</span><span class="line">  <span class="n">shell</span> <span class="s1">&#39;/bin/bash&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="n">include_recipe</span> <span class="s1">&#39;apache2&#39;</span>
</span><span class="line">
</span><span class="line"><span class="c1"># disable default site</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s1">&#39;000-default&#39;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">false</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create apache config</span>
</span><span class="line"><span class="n">template</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;apache&#39;</span><span class="o">][</span><span class="s1">&#39;dir&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/sites-available/</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">source</span> <span class="s1">&#39;apache2.conf.erb&#39;</span>
</span><span class="line">  <span class="n">notifies</span> <span class="ss">:restart</span><span class="p">,</span> <span class="s1">&#39;service[apache2]&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># create document root</span>
</span><span class="line"><span class="n">directory</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">action</span> <span class="ss">:create</span>
</span><span class="line">  <span class="n">recursive</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># write site</span>
</span><span class="line"><span class="n">cookbook_file</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/index.html&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">mode</span> <span class="s1">&#39;0644&#39;</span>
</span><span class="line"><span class="k">end</span>
</span><span class="line">
</span><span class="line"><span class="c1"># enable myface</span>
</span><span class="line"><span class="n">apache_site</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;config&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span> <span class="k">do</span>
</span><span class="line">  <span class="n">enable</span> <span class="kp">true</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Converge your node to make sure there are no syntax errors:</p>

<pre><code>$ vagrant provision
</code></pre>

<p>Add tokens to the <code>templates/default/apache2.conf.erb</code> ERB template
file so they will be replaced with the value of the
<code>node['myface']['document_root']</code> attribute during the Chef run.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/templates/default/apache2.conf.erb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="c1"># Managed by Chef for &lt;%= node[&#39;hostname&#39;] %&gt;</span>
</span><span class="line">
</span><span class="line"><span class="no">Alias</span> <span class="o">/</span> <span class="o">&lt;</span><span class="sx">%= node[&#39;myface&#39;][&#39;document_root&#39;] %&gt;/</span>
</span><span class="line">
</span><span class="line"><span class="sx">&lt;Directory &lt;%=</span> <span class="n">node</span><span class="o">[</span><span class="s1">&#39;myface&#39;</span><span class="o">][</span><span class="s1">&#39;document_root&#39;</span><span class="o">]</span> <span class="sx">%&gt;&gt;</span>
</span><span class="line">    <span class="no">Options</span> <span class="no">FollowSymLinks</span> <span class="o">+</span><span class="no">Indexes</span>
</span><span class="line">    <span class="no">Allow</span> <span class="n">from</span> <span class="no">All</span>
</span><span class="line"><span class="o">&lt;</span><span class="sr">/Directory&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Converge your node one last time to make sure there are no syntax errors:</p>

<pre><code>$ vagrant provision
</code></pre>

<h2 id="testing-iteration-5">Testing Iteration #5</h2>

<p>Visiting <a href="http://33.33.33.10">http://33.33.33.10</a> should produce the same result as before as you
have made no net changes, just shuffled things around a bit.</p>

<h1 id="iteration-6---version-bump-and-production-deploy">Iteration #6 - Version Bump and Production Deploy</h1>
<p>Now that we have tested our cookbook locally and everything seems to work,
we’re ready to finalize the cookbook and deploy it to production.</p>

<h2 id="version-bump-to-100">Version Bump to 1.0.0</h2>

<p>First you need to “bump” the cookbook version in the <code>metadata.rb</code> file to
its final version 1.0.0.  As mentioned in Iteration #3, cookbooks (even the
ones you write), should follow the
<a href="http://semver.org/">Semantic Versioning scheme</a>.  Since this is the first
public version of our cookbook, it’s version 1.0.0.</p>

<p><code>myface/metadata.rb</code> should look like this:</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span>myface/metadata.rb  </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="nb">name</span>             <span class="s1">&#39;myface&#39;</span>
</span><span class="line"><span class="n">maintainer</span>       <span class="s1">&#39;Mischa Taylor&#39;</span>
</span><span class="line"><span class="n">maintainer_email</span> <span class="s1">&#39;mischa@misheska.com&#39;</span>
</span><span class="line"><span class="n">license</span>          <span class="s1">&#39;Apache 2.0&#39;</span>
</span><span class="line"><span class="n">description</span>      <span class="s1">&#39;Installs/Configures myface&#39;</span>
</span><span class="line"><span class="n">long_description</span> <span class="no">IO</span><span class="o">.</span><span class="n">read</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">),</span> <span class="s1">&#39;README.md&#39;</span><span class="p">))</span>
</span><span class="line"><span class="n">version</span>          <span class="s1">&#39;1.0.0&#39;</span>
</span><span class="line">
</span><span class="line"><span class="n">depends</span> <span class="s1">&#39;apache2&#39;</span><span class="p">,</span> <span class="s1">&#39;~&gt; 1.8.0&#39;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="configure-berkshelf">Configure Berkshelf</h2>

<p>In order to deploy to your production server (instead of just locally with
vagrant), you’ll need to add a section to your Berkshelf config file with
your production Chef settings.  Run the following command to create a default
Berkshelf configuration file:</p>

<pre><code>$ berks configure
</code></pre>

<p>It will prompt you for a bunch of server settings.  Since I’m using hosted Chef
to manage my servers, my settings are as follows (yours will be 
slightly different):</p>

<pre><code>$ berks configure
Enter value for chef.chef_server_url (default: 'http://localhost:4000'):  https://api.opscode.com/organizations/misheska
Enter value for chef.node_name (default: 'Ruby.local'):  misheska
Enter value for chef.client_key (default: '/etc/chef/client.pem'):  /Users/misheska/.chef/misheska.pem
Enter value for chef.validation_client_name (default: 'chef-validator'):  misheska-validator
Enter value for chef.validation_key_path (default: '/etc/chef/validation.pem'):  /Users/misheska/.chef/misheska-validator.pem
Enter value for vagrant.vm.box (default: 'Berkshelf-CentOS-6.3-x86_64-minimal'):  centos65
Enter value for vagrant.vm.box_url (default: 'https://dl.dropbox.com/u/31081437/Berkshelf-CentOS-6.3-x86_64-minimal.box'):  https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box
Config written to: '/Users/misheska/.berkshelf/config.json'
</code></pre>

<p>The config file is located in <code>$HOME/.berkshelf/config.json</code> (or inx
<code>%USERPROFILE%/.berkshelf/config.json</code> on Windows).</p>

<p>Here’s what my <code>$HOME/.berkshelf/config.json</code> file looks like:</p>

<pre><code>{
  "chef":{
    "chef_server_url":"https://api.opscode.com/organizations/misheska",
    "validation_client_name":"misheska-validator",
    "validation_key_path":"/Users/misheska/.chef/misheska-validator.pem",
    "client_key":"/Users/misheska/.chef/misheska.pem",
    "node_name":"misheska"
  },
  "cookbook":{
    "copyright":"Mischa Taylor",
    "email":"mischa@misheska.com",
    "license":"Apache 2.0"
  },
  "allowed_licenses":[],
  "raise_license_exception":false,
  "vagrant":{
    "vm":{
      "box":"centos65",
      "box_url":"https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box",
      "forward_port":{},
      "network":{"bridged":false,"hostonly":"33.33.33.10"},
      "provision":"chef_solo"}
  },
  "ssl":{
    "verify":false
  }
}

{
  "chef":{
    "chef_server_url": "https://api.opscode.com/organizations/misheska",
    "validation_client_name": "misheska-validator",
    "validation_key_path": "/Users/mischa/.chef/misheska-validator.pem",
    "client_key": "/Users/mischa/.chef/misheska.pem",
    "node_name":"misheska"
  },
  "vagrant":{
    "vm":{
      "box": "centos65",
      "box_url":"https://s3-us-west-2.amazonaws.com/misheska/vagrant/virtualbox4.3.6/centos65.box",
      "forward_port": {
      },
      "network":{
        "bridged": false,
        "hostonly": "33.33.33.10"
      },
      "provision": "chef_solo"
    }
  },
  "ssl": {
    "verify":false
  }
}
</code></pre>

<p>I assume you have your own production Chef setup either running 
<a href="http://www.opscode.com/hosted-chef/">Hosted Chef</a>,
<a href="http://www.opscode.com/private-chef/">Private Chef</a>, or
<a href="http://docs.opscode.com/chef/manage_server_open_source.html">Open Source Chef Server</a>.  If you need more help getting your .pem file values, refer to
the <a href="https://learnchef.opscode.com/quickstart/chef-repo/">QuickStart Guide on LearnChef</a>.</p>

<h2 id="upload-cookbooks">Upload cookbooks</h2>

<p>Edit your <code>$HOME/.berkshelf/config.json</code> file similarly with your .pem file
values.  Then run <code>berks upload</code> to upload your cookbooks to the chef server:</p>

<pre><code>$ berks upload
Using myface (1.0.0)
Using apache2 (1.8.14)
Uploading myface (1.0.0) to: 'https://api.opscode.com:443/organizations/misheska'
Uploading apache2 (1.8.14) to: 'https://api.opscode.com:443/organizations/misheska'
</code></pre>

<p>Similarly to when you ran <code>vagrant up</code>, Berkshelf automatically uploaded all
the cookbook dependencies.</p>

<h2 id="converge-node">Converge node</h2>

<p>Add the default <code>myface</code> cookbook recipe to your node’s run list.  For example,
I used the following command to add <code>myface</code> to mine:</p>

<pre><code>$ knife node run_list add mischa-ubuntu 'recipe[myface]'
mischa-ubuntu:
  run_list: recipe[myface]
</code></pre>

<p>Converge the node by running <code>chef-client</code> (if you don’t already have it
setup to run chef-client automatically).  For example, here’s the command
I used to run <code>chef-client</code> on my production node:</p>

<pre><code>$ knife ssh name:mischa-ubuntu "sudo chef-client" -x misheska
Starting Chef Client, version 11.8.2
resolving cookbooks for run list: ["myface"]
Synchronizing Cookbooks:
  - myface
  - apache2
...
Chef Client finished, 20 resources updated 
</code></pre>

<h2 id="testing-iteration-6">Testing Iteration #6</h2>

<p>Browsing your production node’s URL should produce the same result as when
you tested Iteration #4.  For example, I visited <a href="http://mischa-ubuntu">http://mischa-ubuntu</a> </p>

<h1 id="more-to-come">More to Come!</h1>
<p>This is just part one of a multi-part series.  So far you’ve gone through
several short iteration loops as you evolve the myface cookbook web
application.  In <a href="http://misheska.com/blog/2013/06/23/getting-started-writing-chef-cookbooks-the-berkshelf-way-part2/">Part 2</a>,
we’ll wire up a database to the myface application and explore the use of
the <code>mysql</code> and <code>database</code> cookbooks.</p>

<p>If you want to see the full source for myface, check out the following
GitHub link: <a href="https://github.com/misheska/myface">https://github.com/misheska/myface</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Use Opscode Chef Omnibus Ruby for Writing Cookbooks]]></title>
    <link href="http://misheska.com/blog/2013/06/16/use-opscode-chef-omnibus-ruby-for-writing-cookbooks/"/>
    <updated>2013-06-16T02:35:00-07:00</updated>
    <id>http://misheska.com/blog/2013/06/16/use-opscode-chef-omnibus-ruby-for-writing-cookbooks</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#how-to-set-up-omnibus-chef-ruby-on-mac-os-x">How to set up Omnibus Chef Ruby on Mac OS X</a></li>
  <li><a href="#how-to-set-up-omnibus-chef-ruby-on-linux">How to set up Omnibus Chef Ruby on Linux</a></li>
  <li><a href="#how-to-set-up-omnibus-chef-ruby-on-windows">How to set up Omnibus Chef Ruby on Windows</a></li>
</ul>

<p>If your only use of Ruby is because you want to write cookbooks for Opscode
Chef, rather than going through the bother of setting up a full Ruby
development environment via <a href="http://misheska.com/blog/2013/06/16/using-rvm-to-manage-multiple-versions-of-ruby/">rvm</a> or <a href="http://misheska.com/blog/2013/06/15/using-rbenv-to-manage-multiple-versions-of-ruby/">rbenv</a>
you can just reuse the Ruby 1.9.x environment that is bundled with the
Opscode Omnibus Chef installer.</p>

<p>In this post, I’ll cover how to configure the Ruby 1.9.x interpreter bundled
with the Opscode Omnibus Chef installer on Mac OS X, Linux and Windows so
it can be used for writing cookbooks.</p>

<h1 id="how-to-set-up-omnibus-chef-ruby-on-mac-os-x">How to set up Omnibus Chef Ruby on Mac OS X</h1>
<p>First install Apple Xcode, which includes a C compiler needed to build the
tools required for cookbook development from source (like
<a href="http://misheska.com/blog/2013/06/16/getting-started-writing-chef-cookbooks-the-berkshelf-way/">Berkshelf</a> ).
Download and install the latest version of Xcode from the App Store, if you
don’t have it installed already.  Also make sure you install the <em>Command Line
Tools</em> by choosing the menu item <code>Xcode -&gt; Preferences...</code> and click
on the <em>Downloads</em> tab.  Click on the <em>Install</em> button to download the
Command Line Tools.
<img src="http://misheska.com/images/xcodecommandline.png" alt="Xcode Command Line Tools" /></p>

<p>In a web browser, go to the <a href="http://www.opscode.com/chef/install">http://www.opscode.com/chef/install</a> page to
display the instructions for installing the Chef Client via the Opscode
Omnibus Chef installer.</p>

<p>As of this writing, the quick install instructions for Mac OS X are as
follows:</p>

<pre><code>$ curl -L https://www.opscode.com/chef/install.sh | sudo bash
</code></pre>

<p>The Chef Client installer also installs Ruby 1.9.3 for its own use in
the directory <code>/opt/chef/embedded</code>.  You can also use this copy of Ruby
for your own cookbook development.</p>

<p>WARNING: Don’t try to mix and match the Chef Client’s Ruby 1.9.3 together
with a RVM/rbenv Ruby development setup.  Choose one or the other.  If your
Ruby needs go beyond Chef and writing Chef cookbooks, set up a “real”
RVM/rbenv Ruby environment.</p>

<p>Now that you have a Ruby 1.9.3 environment via the Chef Client install, you
can install any extra gem dependencies needed for writing Chef cookbooks by
using the <code>/opt/chef/embedded/bin/gem install</code> command.  For example, here’s
how to install Berkshelf, a popular cookbook authoring support tool:</p>

<pre><code>$ sudo /opt/chef/embedded/bin/gem install berkshelf --no-ri --no-rdoc
Password:
Fetching: i18n-0.6.1.gem (100%)
Fetching: multi_json-1.7.7.gem (100%)
Fetching: activesupport-3.2.13.gem (100%)
...
Successfully installed safe_yaml-0.9.3
Successfully installed test-kitchen-1.0.0.alpha.7
Successfully installed berkshelf-2.0.3
43 gems installed
</code></pre>

<p>Create a soft link to any gem-installed binaries in an existing PATH directory,
like <code>/usr/local/bin</code></p>

<pre><code># On Mac OS X, /usr/local/bin is not created by default
$ sudo mkdir -p /usr/local/bin
Password:
$ sudo ln -s /opt/chef/embedded/bin/berks /usr/local/bin/berks
$ berks -v
Berkshelf (2.0.3)
</code></pre>

<p>Don’t be tempted to add <code>/opt/chef/embedded/bin</code> to your PATH.  You still want
to keep Opscode’s Ruby install separate from your main system Ruby install.</p>

<h1 id="how-to-set-up-omnibus-chef-ruby-on-linux">How to set up Omnibus Chef Ruby on Linux</h1>
<p>Make sure all the prerequisite packages are installed for the gems you will
be using.</p>

<p>Ubuntu prerequisites:</p>

<pre><code>$ sudo apt-get update
$ sudo apt-get install -y curl
$ sudo apt-get install -y build-essential git
$ sudo apt-get install -y libxml2-dev libxslt-dev libssl-dev
</code></pre>

<p>RHEL/CentOS prerequisites:</p>

<pre><code>$ sudo yum update
$ sudo yum install -y curl
$ sudo yum install -y git
$ sudo yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel
$ sudo yum install -y libyaml-devel libffi-devel openssl-devel make bzip2
$ sudo yum install -y autoconf automake libtool bison
$ sudo yum install -y libxml2-devel libxslt-devel
</code></pre>

<p>In a web browser, go to the <a href="http://www.opscode.com/chef/install">http://www.opscode.com/chef/install</a> page to
display the instructions for installing the Chef Client via the Opscode
Omnibus Chef installer for your distribution of Linux.</p>

<p>As of this writing, the quick install instructions for Ubuntu/CentOS are as
follows:</p>

<pre><code>$ curl -L https://www.opscode.com/chef/install.sh | sudo bash
</code></pre>

<p>The Chef Client installer also installs Ruby 1.9.3 for its own use in
the directory <code>/opt/chef/embedded</code>.  You can also use this copy of Ruby
for your own cookbook development.</p>

<p>WARNING: Don’t try to mix and match the Chef Client’s Ruby 1.9.3 together
with a RVM/rbenv Ruby development setup.  Choose one or the other.  If your
Ruby needs go beyond Chef and writing Chef cookbooks, set up a “real”
RVM/rbenv Ruby environment.</p>

<p>Now that you have a Ruby 1.9.3 environment via the Chef Client install, you
can install any extra gem dependencies needed for writing Chef cookbooks by
using the <code>/opt/chef/embedded/bin/gem install</code> command.  For example, here’s
how to install Berkshelf, a popular cookbook authoring support tool:</p>

<pre><code>$ sudo /opt/chef/embedded/bin/gem install berkshelf --no-ri --no-rdoc
Password:
Building native extensions.  This could take a while...
Fetching: httpclient-2.2.0.2.gem (100%)
Fetching: rubyntlm-0.1.1.gem (100%)
Fetching: uuidtools-2.1.4.gem (100%)
...
Successfully installed safe_yaml-0.9.3
Successfully installed test-kitchen-1.0.0.alpha.7
Successfully installed berkshelf-2.0.3
25 gems installed
</code></pre>

<p>Create a soft link to any gem-installed binaries in an existing PATH directory,
like <code>/usr/local/bin</code></p>

<pre><code>$ sudo ln -s /opt/chef/embedded/bin/berks /usr/local/bin/berks
$ berks -v
Berkshelf (2.0.3)
</code></pre>

<p>Don’t be tempted to add <code>/opt/chef/embedded/bin</code> to your PATH.  You still want
to keep Opscode’s Ruby install separate from your main system Ruby install.</p>

<h1 id="how-to-set-up-omnibus-chef-ruby-on-windows">How to set up Omnibus Chef Ruby on Windows</h1>
<p>In a web browser, go to the <a href="http://www.opscode.com/chef/install">http://www.opscode.com/chef/install</a> page to
display the instructions for installing the Chef Client via the Opscode
Omnibus Chef installer for your distribution of Linux.</p>

<p>After you select a Chef verison (pick the latest), you will be provided
a download link to the Omnibus Chef Windows installer.  After downloading
Run the install, choosing the default options.</p>

<p>The Chef Client installer also installs Ruby 1.9.3 for its own use in
the directory <code>C:\opscode\chef\embedded</code>.  You can also use this copy of Ruby
for your own cookbook development.</p>

<p>WARNING: Don’t try to mix and match the Chef Client’s Ruby 1.9.3 together
with a RVM/rbenv Ruby development setup.  Choose one or the other.  If your
Ruby needs go beyond Chef and writing Chef cookbooks, set up a “real”
RVM/rbenv Ruby environment.</p>

<p>Now that you have a Ruby 1.9.3 environment via the Chef Client install, you
can install any extra gem dependencies needed for writing Chef cookbooks by
using the <code>c:\opscode\chef\embedded\bin install</code> command.  For example,
here’s how to install Berkshelf, a popular cookbook authoring support tool:</p>

<pre><code>&gt; c:\opscode\chef\embedded\bin\gem install berkshelf --no-ri --no-rdoc
Fetching: i18n-0.6.1.gem (100%)
Fetching: multi_json-1.7.7.gem (100%)
Fetching: activesupport-3.2.13.gem (100%)
...
Successfully installed safe_yaml-0.9.3
Successfully installed test-kitchen-1.0.0.alpha.7
Successfully installed berkshelf-2.0.3
43 gems installed
</code></pre>

<p>Add <code>c:\opscode\chef\embedded\bin</code> to your PATH environment variable:
<img src="http://misheska.com/images/opscodechefpathwin.png" alt="Environments Control Panel" /></p>

<p>Restart your Command Prompt to pick up the new environment variable setting,
and then you can run Berkshelf:</p>

<pre><code>&gt; berks -v
Berkshelf (2.0.3)
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using RVM to Manage Multiple Versions of Ruby]]></title>
    <link href="http://misheska.com/blog/2013/06/16/using-rvm-to-manage-multiple-versions-of-ruby/"/>
    <updated>2013-06-16T00:35:00-07:00</updated>
    <id>http://misheska.com/blog/2013/06/16/using-rvm-to-manage-multiple-versions-of-ruby</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#mac-os-x">Mac OS X</a>    <ul>
      <li><a href="#install-rvm-and-ruby-19x---mac-os-x">Install RVM and Ruby 1.9.x - Mac OS X</a></li>
      <li><a href="#install-ruby-187---mac-os-x">Install Ruby 1.8.7 - Mac OS X</a></li>
      <li><a href="#install-ruby-200---mac-os-x">Install Ruby 2.0.0 - Mac OS X</a></li>
      <li><a href="#remove-rvm---mac-os-x">Remove RVM - Mac OS X</a></li>
    </ul>
  </li>
  <li><a href="#linux">Linux</a>    <ul>
      <li><a href="#install-rvm-and-ruby-19x---linux">Install RVM and Ruby 1.9.x - Linux</a></li>
      <li><a href="#install-ruby-200---linux">Install Ruby 2.0.0 - Linux</a></li>
      <li><a href="#remove-rvm---linux">Remove RVM - Linux</a></li>
    </ul>
  </li>
</ul>

<p>Out of the box, Ruby does not provide a mechanism to support multiple
installed versions.  Compounding this issue, the default system-installed
version of Ruby for most versions of Linux/Mac OS X tend to be quite old.
For example, even in the latest version of Mac OS X Mountain Lion, the
system-wide version of Ruby is over five years old (ruby 1.8.7).  Most
developers prefer to use a newer version of Ruby installed in their home
directory and to leave the default systemwide version of Ruby untouched.</p>

<p><a href="http://rvm.io">Ruby Version Manager (RVM)</a>  makes installing multiple
versions of Ruby easy.  It’s a great way to use Ruby 1.9.x for your current
development while also being able to play with Ruby 2.0 for newer projects.
RVM also supports partitioning of Ruby gem installs via a feature called
gemsets in order to avoid versioning conflicts.  However, with the advent of
<a href="http://gembundler.com">Bundler</a> most developers tend to prefer using Bundler
as the preferred way for managing gems at the application level.</p>

<p>RVM is supported on Linux and Mac OS X.  RVM doesn’t work on Windows.
For Windows, <a href="https://github.com/vertiginous/pik">Pik</a> is an RVM alternative.</p>

<h1 id="mac-os-x">Mac OS X</h1>

<h2 id="install-rvm-and-ruby-19x---mac-os-x">Install RVM and Ruby 1.9.x - Mac OS X</h2>
<p>First, you’ll need to install a C compiler to build Ruby from source.  Just
download and install the latest version of Xcode from the App Store, if you
don’t have it already.  Also make sure you install the <em>Command Line Tools</em>
by choosing the menu item <code>Xcode -&gt; Preferences...</code> and click
on the <em>Downloads</em> tab.  Click on the <em>Install</em> button to download the
Command Line Tools.
<img src="http://misheska.com/images/xcodecommandline.png" alt="Xcode Command Line Tools" /></p>

<p>Next, you’ll need to install the Homebrew package manager.  RVM will
automatically download all dependencies if a package manager is installed.
Also, the dependencies for installing Ruby are complicated enough that it
is helpful to use a package manager to install them, so you can uninstall
them easily if necessary.  Run the following command to install Homebrew:</p>

<pre><code>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
</code></pre>

<p>Run <code>brew doctor</code> and address any issues it discovers.  When
all is well, you should see:</p>

<pre><code>$ brew doctor
Your system is raring to brew.
</code></pre>

<p>After Xcode and Homebrew are installed, you can install RVM with the following
commands:</p>

<pre><code>$ \curl -L https://get.rvm.io | bash -s stable
$ source $HOME/.rvm/scripts/rvm
</code></pre>

<p>Run <code>rvm requirements</code> to install additional dependencies:</p>

<pre><code>$ rvm requirements
Installing requirements for osx, might require sudo password.
Already up-to-date.
Cloning into '/usr/local/Library/Taps/homebrew-dupes'...
remote: Counting objects: 906, done.
remote: Compressing objects: 100% (495/495), done.
remote: Total 906 (delta 498), reused 803 (delta 411)
Receiving objects: 100% (906/906), 157.67 KiB | 112 KiB/s, done.
Resolving deltas: 100% (498/498), done.
Tapped 41 formula
Installing required packages: autoconf, automake, libtool, pkg-config, apple-gcc42, libyaml, readline, libxml2, libxslt, libksba, openssl...........................................................................................................................................................
Updating certificates in '/usr/local/etc/openssl/cert.pem'.
</code></pre>

<p>Tell rvm to automatically install dependencies via Homebrew with the following command:</p>

<pre><code>$ rvm autolibs osx_brew
</code></pre>

<p>Next, build and install the latest version of Ruby by running the following
(this will take a long time):</p>

<pre><code>$ rvm install 1.9.3
</code></pre>

<p>You may get an error message saying “There was an error while trying to
resolve rubygems version for ‘latest’.  Halting the installation.” Just
run the install again like so to fix the issue:</p>

<pre><code>$ rvm reinstall 1.9.3
</code></pre>

<p>Verify the RVM install by running the following commands:</p>

<pre><code>$ rvm -h
$ rvm list
$ rvm use 1.9.3
$ rvm rubygems latest
</code></pre>

<p>To ensure that the newer Ruby 1.9.3 is used by default instead of the
system 1.8.7 version, run the following command:</p>

<pre><code>$ rvm use 1.9.3 --default
</code></pre>

<p>If you’d like to manage RVM with a GUI, check out <a href="http://jewelrybox.unfiniti.com/">JewelryBox</a>:</p>

<p><img src="http://misheska.com/images/jewelrybox.png" alt="Jewelry Box" /></p>

<h2 id="install-ruby-187---mac-os-x">Install Ruby 1.8.7 - Mac OS X</h2>
<p>For legacy GUI support, Ruby 1.8.7 has some dependencies on tcl/tk, which
Mountain Lion no longer installs by default (now that X11 is an optional
install).  To compile Ruby 1.8.7 without tcl/tk support, use the following
command overrides on <code>rvm install</code>:</p>

<pre><code>$ rvm install 1.8.7 --with-gcc=clang --without-tcl --without-tk
</code></pre>

<p>To compile Ruby 1.8.7 with tcl/tk support, install X11 via
<a href="http://xquartz.macosforge.org/landing">http://xquartz.macosforge.org/landing</a>
then compile Ruby 1.8.7 with the following:</p>

<pre><code>$ export CPPFLAGS=-I/opt/X11/include
$ CC=/usr/local/bin/gcc-4.2 rvm install 1.8.7
</code></pre>

<h2 id="install-ruby-200---mac-os-x">Install Ruby 2.0.0 - Mac OS X</h2>
<p>Installing Ruby 2.0 is very straightforward, just run the following:</p>

<pre><code>$ rvm install 2.0.0
</code></pre>

<p>Verify the Ruby 2.0 install by running the following commands:</p>

<pre><code>$ rvm use 2.0.0
$ ruby -v
ruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-darwin12.3.0]
</code></pre>

<p>If you want to make Ruby 2.0 your default version of ruby, run the following:</p>

<pre><code>$ rvm use 2.0.0 --default
</code></pre>

<h2 id="remove-rvm---mac-os-x">Remove RVM - Mac OS X</h2>
<p>Should you want to uninstall/remove RVM, it’s pretty easy.  First, run
the following commands:</p>

<pre><code>$ rvm implode
$ gem uninstall rvm
</code></pre>

<p>Then just follow the instructions from <code>rvm implode</code>:</p>

<ul>
  <li>
    <p>Delete the following files, if they exist:
<code>/etc/rvmrc</code>
<code>$HOME/.rvmrc</code></p>
  </li>
  <li>
    <p>Also, remove the lines sourcing RVM scripts from 
<code>$HOME/.bash_profile</code> <code>/etc/zprofile</code> and 
<code>/etc/profile.d/rvm.sh</code> if they exist.  (A reboot doesn’t hurt
after you do this, just to make sure).</p>
  </li>
</ul>

<p>To uninstall Homebrew, run the following:</p>

<pre><code>cd `brew --prefix`
brew install libtool
rm -rf Cellar
rm `git ls-files`
rm -r Library/Homebrew Library/Aliases Library/Formula Library/Contributions
rm -rf .git
rm -rf ~/Library/Caches/Homebrew
</code></pre>

<h1 id="linux">Linux</h1>

<h2 id="install-rvm-and-ruby-19x---linux">Install RVM and Ruby 1.9.x - Linux</h2>
<p>RVM installation is more straightforward on Linux, as the Ruby source was
designed for the GCC compiler that ships with any Linux distribution.</p>

<p>First install <code>curl</code>, so that you can fetch the RVM script.
For Ubuntu, run
the following command:</p>

<pre><code>$ sudo apt-get update
$ sudo apt-get install -y curl
</code></pre>

<p>For RedHat/CentOS:</p>

<pre><code>$ sudo yum update
$ sudo yum install -y curl
</code></pre>

<p>With curl installed, run the RVM install with the following commands:</p>

<pre><code>$ \curl -L https://get.rvm.io | bash -s stable
$ source $HOME/.rvm/scripts/rvm
</code></pre>

<p>On Ubuntu, run <code>rvm requirements</code> to install additional dependencies:</p>

<pre><code>$ rvm requirements
</code></pre>

<p>For CentOS, <code>rvm requirements</code> will need to download packages from EPEL, so
add the <code>--verify-downloads 1</code> parameter after the <code>rvm requirements</code> command:</p>

<pre><code>$ rvm requirements --verify-downloads 1
</code></pre>

<p>Next build and install Ruby 1.9.3 (this will take awhile):</p>

<pre><code>$ rvm install 1.9.3
$ rvm use 1.9.3
$ rvm rubygems latest
</code></pre>

<p>Verify rvm install:</p>

<pre><code>$ rvm -h
$ rvm list
$ rvm use 1.9.3
$ ruby -v
ruby 1.9.3p429 (2013-05-15 revision 40747) [x86_64-linux]
</code></pre>

<h2 id="install-ruby-200---linux">Install Ruby 2.0.0 - Linux</h2>
<p>Installing Ruby 2.0 is very straightforward, just run the following:</p>

<pre><code>$ rvm install 2.0.0
</code></pre>

<p>Verify the Ruby 2.0 install by running the following commands:</p>

<pre><code>$ rvm use 2.0.0
$ ruby -v
ruby 2.0.0p195 (2013-05-14 revision 40734) [x86_64-linux]
</code></pre>

<p>If you want to make Ruby 2.0 your default version of ruby, run the following:</p>

<pre><code>$ rvm use 2.0.0 --default
</code></pre>

<h2 id="remove-rvm---linux">Remove RVM - Linux</h2>
<p>Should you want to uninstall/remove RVM, it’s pretty easy.  First, run
the following commands:</p>

<pre><code>$ rvm implode
$ gem uninstall rvm
</code></pre>

<p>Then just follow the instructions from <code>rvm implode</code>:</p>

<ul>
  <li>
    <p>Delete the following files, if they exist:
<code>/etc/rvmrc</code>
<code>$HOME/.rvmrc</code></p>
  </li>
  <li>
    <p>Also, remove the lines sourcing RVM scripts from
<code>$HOME/.bash_profile</code> <code>/etc/zprofile</code> and
<code>/etc/profile.d/rvm.sh</code> if they exist.  (A reboot doesn’t hurt
after you do this, just to make sure).</p>
  </li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Rbenv to Manage Multiple Versions of Ruby]]></title>
    <link href="http://misheska.com/blog/2013/06/15/using-rbenv-to-manage-multiple-versions-of-ruby/"/>
    <updated>2013-06-15T15:53:00-07:00</updated>
    <id>http://misheska.com/blog/2013/06/15/using-rbenv-to-manage-multiple-versions-of-ruby</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#mac-os-x">Mac OS X</a>    <ul>
      <li><a href="#install-rbenv-and-ruby-19x---mac-os-x">Install Rbenv and Ruby 1.9.x - Mac OS X</a>        <ul>
          <li><a href="#mac-os-x-mavericks-109">Mac OS X Mavericks 10.9</a></li>
          <li><a href="#mac-os-x-snow-leopard-108-and-earlier">Mac OS X Snow Leopard 10.8 (and earlier)</a></li>
        </ul>
      </li>
      <li><a href="#install-bundler---mac-os-x">Install Bundler - Mac OS X</a></li>
      <li><a href="#install-ruby-200---mac-os-x">Install Ruby 2.0.0 - Mac OS X</a></li>
      <li><a href="#upgrade-rbenv---mac-os-x">Upgrade Rbenv - Mac OS X</a></li>
      <li><a href="#remove-rbenv---mac-os-x">Remove Rbenv - Mac OS X</a></li>
    </ul>
  </li>
  <li><a href="#linux">Linux</a>    <ul>
      <li><a href="#install-rbenv-and-ruby-19x---linux">Install Rbenv and Ruby 1.9.x - Linux</a></li>
      <li><a href="#install-bundler---linux">Install Bundler - Linux</a></li>
      <li><a href="#install-ruby-200---linux">Install Ruby 2.0.0 - Linux</a></li>
      <li><a href="#upgrade-rbenv---linux">Upgrade Rbenv - Linux</a></li>
      <li><a href="#remove-rbenv---linux">Remove Rbenv - Linux</a></li>
    </ul>
  </li>
</ul>

<p><em>Updated December 15th, 2013:</em></p>

<ul>
  <li><em>Updated install link for homebrew, it has changed</em></li>
  <li><em>Updated Xcode install instructions for Mac OS X Mavericks</em></li>
  <li><em>Bumped ruby 1.9.3 version from 1.9.3p448 to 1.9.3p484</em></li>
  <li><em>Bumped ruby 2.0.0 version from 2.0.0p247 to 2.0.0p353</em></li>
</ul>

<p><em>Updated July 9th, 2013:</em></p>

<ul>
  <li><em>Bumped ruby 1.9.3 version from 1.9.3p429 to 1.9.3p448</em></li>
  <li><em>Bumped ruby 2.0.0 version from 2.0.0p195 to 2.0.0p247</em></li>
  <li><em>Removed openssl workaround for compiling ruby 2.0.0 on Mac OS X - this has been fixed</em></li>
</ul>

<p>Out of the box, Ruby does not provide a mechanism to support multiple
installed versions.  <a href="https://github.com/sstephenson/rbenv/">Rbenv</a> makes
managing multiple versions of Ruby easy.  It’s a great way to work on
current development projects using Ruby 1.9.x and be able to switch to
Ruby 2.0.x for new work.  Rbenv is a lightweight alternative to
<a href="http://rvm.io">Ruby Version Manager (RVM)</a>.  Rbenv does not include
a way to manage gems, like with RVM, though most people prefer to use
<a href="http://bundler.io">Bundler</a> gem management instead.</p>

<p>Rbenv is supported on Linux and Mac OS X.  Rbenv doesn’t work on Windows (and
isn’t really necessary on Windows as there is no system Ruby on Windows).
On Windows, the <a href="http://rubyinstaller.org">RubyInstaller</a> and/or
<a href="https://github.com/vertiginous/pik">Pik</a> are both good alternatives to
work with multiple versions of Ruby on the same box.</p>

<p>NOTE: Rbenv is incompatible with RVM because RVM overrides the
<code>gem</code> command with a function.  If you want to switch to Rbenv,
make sure you uninstall RVM first.  Run the following commands to uninstall
RVM:</p>

<pre><code>$ rvm implode
$ gem uninstall rvm
</code></pre>

<p>Then remove/comment out the RVM loader line in <code>.bash_profile</code>
and/or <code>.bashrc</code></p>

<h1 id="mac-os-x">Mac OS X</h1>

<h2 id="install-rbenv-and-ruby-19x---mac-os-x">Install Rbenv and Ruby 1.9.x - Mac OS X</h2>
<p>First you’ll need to install a C compiler and some other command line tools
to build Ruby from source.  You’ll need to install the Xcode Command Line
Tools:  </p>

<h3 id="mac-os-x-mavericks-109">Mac OS X Mavericks 10.9</h3>

<p>If you are using the latest version of Mac OS X Mavericks, it has support
for downloading the Xcode command line tools directly from a Terminal window.
Run the following on a command line:</p>

<pre><code>$ xcode-select --install
</code></pre>

<p>You will be prompted to either click on <code>Install</code> to just install the command
line developer tools or click on <code>Get Xcode</code> to install both Xcode and the
command line developer tools.  It can be handy to have Xcode as well, but
it is a rather large multi-gigabyte download and not really necessary for
Ruby development.  So if you want to get going quickly, just click on the
<code>Install</code> button:</p>

<p><img src="http://misheska.com/images/xcodeselect.png" alt="xcode-select" /></p>

<h3 id="mac-os-x-snow-leopard-108-and-earlier">Mac OS X Snow Leopard 10.8 (and earlier)</h3>

<p>Versions of Mac OS X prior to Mavericks, like Snow Leopard do not have
built-in support for downloading the Xcode command line developer tools, but you
can download them directly from the Apple Developer web site
<a href="http://developer.apple.com/downloads">developer.apple.com/downloads</a>.
Here are the current direct download links for the Xcode command line tools
as of this writing.  Download the applicable package for your version of
Mac OS X:</p>

<ul>
  <li><a href="http://devimages.apple.com/downloads/xcode/command_line_tools_os_x_mountain_lion_for_xcode_october_2013.dmg">Xcode Command Line Tools for Mac OS X Mountain Lion 10.8</a></li>
  <li><a href="http://devimages.apple.com/downloads/xcode/command_line_tools_for_xcode_os_x_lion_april_2013.dmg">Xcode Command Line Tools for Mac OS X Lion 10.7</a></li>
</ul>

<p>Once you have downloaded the .dmg file, double-click on the .dmg to open it,
then double-click on the .mpkg file to run the Command Line Tools installer:</p>

<p><img src="http://misheska.com/images/commandlinetools.png" alt="xcode-select" /></p>

<p>If you have time to install Xcode, it’s handy to have it around, though not
really required for Ruby development.  If you are running Mac OS X Mountain
Lion 10.8, you will need to make sure that you have OS X version 10.8.4 or
later to install Xcode, otherwise the App Store will issue the following
complaint:</p>

<p><img src="http://misheska.com/images/xcode1084.png" alt="xcode-select" /></p>

<p>Download and install the latest version of Xcode from the App Store.
Then install the <em>Command Line Tools</em> by choosing the menu item
 <code>Xcode -&gt; Preferences...</code> to display the <code>Downloads</code> dialog.
Click on the <em>Downloads</em> tab, then click on the download arrow to the right
of the <code>Command Line Tools</code> component to install.</p>

<p><img src="http://misheska.com/images/xcodecommandline2.png" alt="Xcode Command Line Tools" /></p>

<p>Next, you’ll need to install the Homebrew package manager to get all the
dependencies needed to compile Ruby from source.  While you could manage
these dependencies by hand, using a package manager is a better idea, as
package managers know how to uninstall what they install.</p>

<p>Run the following command to install Homebrew:</p>

<pre><code>$ ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
</code></pre>

<p>Run <code>brew doctor</code> and address any issues it discovers.  When
all is well, you should see:</p>

<pre><code>$ brew doctor
Your system is raring to brew.
</code></pre>

<p>Next, install the additional dependencies to compile Ruby from source:</p>

<pre><code># For update-system
brew update
brew tap homebrew/dupes
# For ruby
brew install apple-gcc42
</code></pre>

<p>And now install <code>rbenv</code> and the <code>ruby-build</code> plugin:</p>

<pre><code>brew update
brew install rbenv
brew install ruby-build
</code></pre>

<p>Add <code>rbenv init</code> to your shell to enable shims and autocompletion:</p>

<pre><code>$ echo 'eval "$(rbenv init -)"' &gt;&gt; $HOME/.bash_profile
$ source ~/.bash_profile
</code></pre>

<p>Restart shell as a login shell so that the PATH changes take effect:</p>

<pre><code>$ exec $SHELL -l
</code></pre>

<p>Install the latest version of ruby 1.9.x (at the time of this writing 1.9.3-p484)</p>

<pre><code>$ rbenv install 1.9.3-p484
</code></pre>

<p>Rebuild the shim executable</p>

<pre><code>$ rbenv rehash
</code></pre>

<p>You’ll need to run <code>rbenv rehash</code> every time you install a new version of Ruby
or install a new gem.</p>

<p>Set the latest version of ruby to be the default version of ruby</p>

<pre><code>$ rbenv global 1.9.3-p484
</code></pre>

<p>Verify the ruby install.  If everything was installed correctly, the <code>ruby -v</code>
command should report that version 1.9.3p484 is installed.</p>

<pre><code>$ ruby -v
ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-darwin13.0.0]
</code></pre>

<h2 id="install-bundler---mac-os-x">Install Bundler - Mac OS X</h2>
<p>You’ll need to use <a href="http://gembundler.com/">Bundler</a> to manage gems.  Installing
a gem is also a good way to ensure that you’ve installed most of the Ruby
prerequisites.</p>

<p>First, make sure you update to the latest version of Rubygems:</p>

<pre><code>$ gem update --system
Updating rubygems-update
Fetching: rubygems-update-2.1.11.gem (100%)
Successfully installed rubygems-update-2.1.11
Installing RubyGems 2.1.11
RubyGems 2.1.11 installed
...
</code></pre>

<p>Then install the <code>bundler</code> gem.  If the <code>gem install</code> command reports
<code>Successfully installed</code> you’re good to go:</p>

<pre><code>$ gem install bundler
Successfully installed bundler-1.3.5
Parsing documentation for bundler-1.3.5
1 gem installed
$ rbenv rehash
</code></pre>

<h2 id="install-ruby-200---mac-os-x">Install Ruby 2.0.0 - Mac OS X</h2>
<p>As of this writing, Ruby 2.0.0-p353 is the latest version of Ruby 2.0.0.
Use <code>rbenv install --list</code> to print out the available versions.  To install:</p>

<pre><code>$ rbenv install 2.0.0-p353
</code></pre>

<p>To verify the install:</p>

<pre><code>$ rbenv local 2.0.0-p353
$ ruby -v
ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin13.0.0]
</code></pre>

<p>If you want to make Ruby 2.0.0 the global default version of ruby:</p>

<pre><code>$ rbenv global 2.0.0-p353
</code></pre>

<h2 id="upgrade-rbenv---mac-os-x">Upgrade Rbenv - Mac OS X</h2>
<p>To upgrade rbenv via homebrew:</p>

<pre><code>$ brew update
$ brew upgrade rbenv
$ brew upgrade ruby-build
</code></pre>

<h2 id="remove-rbenv---mac-os-x">Remove Rbenv - Mac OS X</h2>
<p>Uninstall the packages you installed via homebrew:</p>

<pre><code>brew uninstall rbenv
brew uninstall ruby-build
</code></pre>

<p>Remove the following directory:</p>

<pre><code>rm -rf $HOME/.rbenv
</code></pre>

<p>And remember to remove whatever you added to <code>$HOME/.bash_profile</code></p>

<h1 id="linux">Linux</h1>

<h2 id="install-rbenv-and-ruby-19x---linux">Install Rbenv and Ruby 1.9.x - Linux</h2>
<p>Make sure the prerequisite packages are installed.</p>

<p>Ubuntu prerequisites:</p>

<pre><code>$ sudo apt-get update
$ sudo apt-get install -y build-essential git
$ sudo apt-get install -y libxml2-dev libxslt-dev libssl-dev
</code></pre>

<p>RHEL/CentOS prerequisites:</p>

<pre><code>$ sudo yum update
$ sudo yum install -y git
$ sudo yum install -y gcc-c++ patch readline readline-devel zlib zlib-devel
$ sudo yum install -y libyaml-devel libffi-devel openssl-devel make bzip2
$ sudo yum install -y autoconf automake libtool bison
$ sudo yum install -y libxml2-devel libxslt-devel 
</code></pre>

<p>Download the rbenv source distribution to
$HOME/.rbenv:</p>

<pre><code>$ git clone git://github.com/sstephenson/rbenv.git $HOME/.rbenv
</code></pre>

<p>Add $HOME/.rbenv/bin to your $PATH</p>

<pre><code>$ echo 'export PATH="$HOME/.rbenv/bin:$PATH"' &gt;&gt; $HOME/.bashrc
</code></pre>

<p>Add <code>rbenv init</code> to your shell to enable shims and autocompletion:</p>

<pre><code>$ echo 'eval "$(rbenv init -)"' &gt;&gt; $HOME/.bashrc
</code></pre>

<p>Restart shell as a login shell so that the PATH changes take effect:</p>

<pre><code>$ exec $SHELL -l
</code></pre>

<p>Install the <code>ruby-build</code> plugin, which provides an
<code>rbenv install</code> command to simplify the process of compiling
and install new Ruby versions:</p>

<pre><code>$ git clone git://github.com/sstephenson/ruby-build.git $HOME/.rbenv/plugins/ruby-build
</code></pre>

<p>Install the latest version of ruby 1.9.x (at the time of this writing 1.9.3-p484)</p>

<pre><code>$ rbenv install 1.9.3-p484
</code></pre>

<p>Rebuild the shim executable</p>

<pre><code>$ rbenv rehash
</code></pre>

<p>You’ll need to run <code>rbenv rehash</code> every time you install a new
version of Ruby or install a new gem.</p>

<p>Set the latest version of ruby to be the default version of ruby</p>

<pre><code>$ rbenv global 1.9.3-p484
</code></pre>

<p>Verify the ruby install.  If everything was installed correctly, the
<code>ruby -v</code> command should report that version 1.9.3p484 is installed.</p>

<pre><code>$ ruby -v
ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux]
</code></pre>

<h2 id="install-bundler---linux">Install Bundler - Linux</h2>

<p>You’ll need to use <a href="http://gembundler.com/">Bundler</a> to manage gems.
Installing a gem is also a good way to ensure that you’ve installed most
of the Ruby prerequisites.</p>

<p>First, make sure you update to the latest version of Rubygems:</p>

<pre><code>$ gem update --system
</code></pre>

<p>Then install the <code>bundler</code> gem.  If the <code>gem install</code> command reports
<code>Successfully installed</code> you’re good to go:</p>

<pre><code>$ gem install bundler
Successfully installed bundler-1.3.5
Parsing documentation for bundler-1.3.5
1 gem installed
$ rbenv rehash
</code></pre>

<h2 id="install-ruby-200---linux">Install Ruby 2.0.0 - Linux</h2>
<p>As of this writing, Ruby 2.0.0-p353 is the latest version of Ruby 2.0.0.
Use <code>rbenv install --list</code> to print out the available versions.  To install:</p>

<pre><code>$ rbenv install 2.0.0-p353
</code></pre>

<p>To verify the install:</p>

<pre><code>$ rbenv local 2.0.0-p353
$ ruby -v
ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-linux]
</code></pre>

<p>If you want to make Ruby 2.0.0 the global default version of ruby (but
currently Chef requires Ruby 1.9.x):</p>

<pre><code>$ rbenv global 2.0.0-p353
</code></pre>

<h2 id="upgrade-rbenv---linux">Upgrade Rbenv - Linux</h2>
<p>Since Rbenv is a Git repository, upgrading is just a matter of refreshing the
source:</p>

<pre><code>$ cd $HOME/.rbenv
$ git pull
</code></pre>

<h2 id="remove-rbenv---linux">Remove Rbenv - Linux</h2>
<p>To uninstall/remove Rbenv, remove the following directory:</p>

<pre><code>$ rm -rf $HOME/.rbenv
</code></pre>

<p>And remember to remove whatever you added to <code>$HOME/.bash_profile</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using pik to manage multiple versions of Ruby on Windows]]></title>
    <link href="http://misheska.com/blog/2013/03/10/using-pik-to-manage-multiple-versions-of-ruby-on-windows/"/>
    <updated>2013-03-10T18:09:00-07:00</updated>
    <id>http://misheska.com/blog/2013/03/10/using-pik-to-manage-multiple-versions-of-ruby-on-windows</id>
    <content type="html"><![CDATA[<p>Out of the box, Ruby does not provide a mechanism to support multiple installed
versions.  <code>pik</code> is a third-party tool that can be used to switch
between multiple versions of the Ruby interpreter on Windows.</p>

<h1 id="install-ruby">Install Ruby</h1>
<p>Install at least one Ruby interpreter environment using the RubyInstaller
from <a href="http://rubyinstaller.org">http://rubyinstaller.org</a>.  While pik can
install some versions of Ruby, the versions of Ruby it knows to install is
quite limited, and it is just much easier to use RubyInstaller for Windows
to install them.</p>

<p>The choice of Ruby environments to install is up to you.  I have the latest
version of 1.9.3 installed as my main development environment, and Ruby 2.0.0 
to play around with the next generation of the language.  When you install
Ruby, do not add the Ruby executables to your PATH or associate .rb/.rbw
files with the Ruby installation (the default choice) - <code>pik</code> will
manage this setting:</p>

<p><img src="http://misheska.com/images/rubyinstaller.png" alt="Ruby Installer" /></p>

<h1 id="installing-pik">Installing pik</h1>
<p>Download the latest .MSI installer from <a href="https://github.com/vertiginous/pik/downloads">pik downloads on github</a>
(as of this writing <a href="https://github.com/downloads/vertiginous/pik/pik-0.3.0.pre.msi">0.3.0</a>) and run the Pik Setup Wizard - the default options are fine:</p>

<p><img src="http://misheska.com/images/pikinstaller.png" alt="Pik Installer" /></p>

<p>You can verify that <code>pik</code> installed properly by running the
following in a Command Prompt:</p>

<pre><code>&gt; pik --version
pik 0.3.0.pre on Microsoft Windows [Version 6.1.7601]
by Gordon Thiesfeld (gthiesfeld@gmail.com)
</code></pre>

<h1 id="registering-ruby-environments-with-pik">Registering Ruby environments with pik</h1>
<p>Use the <code>pik add</code> command to register your installed ruby
environments with pik.  For example, I have Ruby 1.8.7, 1.9.3, and 2.0.0
installed on my Windows development box, so I typed the following in a
Command Prompt:</p>

<pre><code>&gt; pik add C:\Ruby187\bin
INFO: Adding:  [ruby-]1.8.7-p371
      Located at:  C:\Ruby187\bin

&gt; pik add C:\Ruby193\bin
INFO: Adding:  [ruby-]1.9.3-p392
      Located at:  C:\Ruby193\bin

&gt; pik add C:\Ruby200\bin
INFO: Adding:  [ruby-]2.0.0-p0
      Located at:  C:\Ruby2000\bin
</code></pre>

<p>Use the <code>pik list</code> command to list all the ruby interpreters
registered with pik:</p>

<pre><code>&gt; pik list
   ruby-1.8.7-p371
   ruby-1.9.3-p392
   ruby-2.0.0-p0
</code></pre>

<h1 id="set-a-default-ruby">Set a default Ruby</h1>
<p>The <code>pik use</code> command will allow you to switch between your
registered ruby interpreters:</p>

<pre><code>&gt; pik use ruby-2.0.0-p0
&gt; ruby -v
ruby 2.0.0p0 (2013-02-024) [i386-mingw32]
</code></pre>

<p>Add the <code>--default</code> parameter to set one version as the default:</p>

<pre><code>&gt; pik use ruby-1.9.3-p392 --default
</code></pre>

<p>You can use the <code>pik default</code> command to switch to this version:</p>

<pre><code>&gt; pik default
&gt; ruby -v
ruby 1.9.3p392 (2013-02-022) [i386-mingw32]
</code></pre>

<p>Unfortunately when you open a new command prompt, pik is not automatically
loaded, so you will notice that there is no default ruby loaded:</p>

<p><img src="http://misheska.com/images/rubynewcommand.png" alt="Ruby not found'" /></p>

<p>Either run the <code>pik default</code> command to load pik (and the
default ruby interpreter) or add one particular Ruby interpreter to your
user or system PATH environment variable (via <code>Control Panel -&gt; System
-&gt; Advanced -&gt; Environment Variables….</code>):</p>

<p><img class="left" src="http://misheska.com/images/environment1.png" width="350" height="394" title="'Environment control panel'" />
<img class="right" src="http://misheska.com/images/environment2.png" width="350" height="394" title="'User PATH'" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Try out Sensu Monitoring using Virtual Box, Vagrant and Chef]]></title>
    <link href="http://misheska.com/blog/2013/02/28/try-out-sensu-monitoring-using-virtual-box%2C-vagrant-and-chef/"/>
    <updated>2013-02-28T22:54:00-08:00</updated>
    <id>http://misheska.com/blog/2013/02/28/try-out-sensu-monitoring-using-virtual-box,-vagrant-and-chef</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#install-virtualbox">Install VirtualBox</a></li>
  <li><a href="#install-vagrant">Install Vagrant</a></li>
  <li><a href="#download-the-sensu-chef-cookbook">Download the sensu-chef cookbook</a></li>
  <li><a href="#install-ruby--rubygems">Install Ruby &amp; RubyGems</a></li>
  <li><a href="#install-ruby-devkit-windows">Install Ruby DevKit (Windows)</a></li>
  <li><a href="#create-the-sensu-chef-virtual-machine">Create the sensu-chef virtual machine</a></li>
</ul>

<p><em>Updated September 2nd, 2013</em></p>

<ul>
  <li><em>Updated to use the sensu-chef 0.5.5 cookbook</em></li>
</ul>

<p>I’ve been using Sensu Monitoring in production for about three to four months
now.  It’s a nice, lightweight monitoring framework, designed with the cloud
in mind and for use with modern configuration management frameworks like
Chef and Puppet.  For more information on Sensu, check out the article
<a href="http://portertech.ca/2011/11/01/sensu-a-monitoring-framework/">Why Sonian created Sensu (by Sean Porter)</a>
and the associated articles and links on the <a href="https://github.com/sensu/sensu/wiki">Sensu Wiki</a></p>

<p>In this article, I’m going to present a quick overview on how to test and
evaluate Sensu using the <a href="https://github.com/sensu/sensu-chef">Sensu Chef Cookbook</a>
Through the magic of Oracle VirtualBox and Vagrant, combined with Chef, you
can quickly deploy Sensu to a local virtual machine instance, and kick the
tires on Sensu to evaluate whether or not it is a good monitoring solution
for you.  These instructions apply to Mac OS X, Linux, and/or Windows for
the host operating system.</p>

<h1 id="install-virtualbox">Install VirtualBox</h1>
<p>VirtualBox is an open source virtualization platform, similar to VMWare
Fusion/Workstation that runs on Mac OS X, Linux and Windows (and a few more
platforms).  While I personally prefer VMWare Fusion to VirtualBox (VirtualBox
can be a bit flakey at times), a lot of automation around VirtualBox has been
developed within the Chef community, which impossible to ignore.  Fortunately
on both Mac OS X and Linux, VirtualBox can peacefully coexist with VMWare
Fusion/Workstation (NOTE: If you use KVM virtualization on Linux, VirtualBox
can also coexist, but you need to be careful not to run VirtualBox and KVM
images simultaneously).</p>

<p>Just download and run the VirtualBox installer from the <a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox download
page</a>.  Just download and install
the latest 4.2.x version of VirtualBox.  Make sure you save the VirtualBox
installer as it comes with an uninstall tool, should you wish to remove
VirtualBox at some point in the future.</p>

<h1 id="install-vagrant">Install Vagrant</h1>
<p>After installing VirtualBox, next install Vagrant.  Vagrant is an automation
framework for VirtualBox.  Grab the latest Vagrant installer for your OS from
the <a href="http://downloads.vagrantup.com/">Vagrant Downloads page</a> and run install.
The Vagrant install will automatically add the Vagrant binaries to your PATH.</p>

<h1 id="download-the-sensu-chef-cookbook">Download the sensu-chef cookbook</h1>
<p>Grab the latest version of the sensu-chef cookbook from GitHub by running
the following command:</p>

<pre><code>git clone https://github.com/sensu/sensu-chef.git
</code></pre>

<h1 id="install-ruby--rubygems">Install Ruby &amp; RubyGems</h1>
<p>The sensu-chef cookbook requires Ruby &amp; RubyGems.</p>

<p>On Mac OS X and Linux, I strongly recommend that you use either RVM or Rbenv
to make sure that you are using the latest version of Ruby instead of whatever
version of Ruby your system installs by default.</p>

<p>See my previous articles on <a href="http://misheska.com/blog/2013/06/16/using-rvm-to-manage-multiple-versions-of-ruby/">RVM</a> or <a href="http://misheska.com/blog/2013/06/15/using-rbenv-to-manage-multiple-versions-of-ruby/">Rbenv</a>.  NOTE: If you don’t
know whether or not to decide between RVM or Rbenv, go with RVM.</p>

<h1 id="install-ruby-devkit-windows">Install Ruby DevKit (Windows)</h1>
<p>The sensu-chef recipe is dependent on the json gem.  On Windows, you will get
the following error if you do not have the proper Ruby DevKit installed:</p>

<pre><code>Installing json (1.7.7)
Gem::InstallError: The 'json' native gem requires installed build tools.
</code></pre>

<p>Go to <a href="http://rubyinstaller.org/downloads">http://rubyinstaller.org/downloads</a>
and refer to the <em>Which Development Kit?</em> section of the web page about which
DevKit you need to install.</p>

<p>Download the appropriate DevKit toolkit, extract it and run the following
in a Command Prompt:</p>

<pre><code>&gt; ruby dk.rb init
[INFO] found RubyInstaller v1.9.3 at C:/Ruby193

Initialization complete! Please review and modify the auto-generated
'config.yml' file to ensure it contains the root directories to all
of the installed Rubies you want enhanced by the DevKit.

&gt; ruby dk.rb install
[INFO] Updating convenience notice gem override for 'C:/Ruby193'
[INFO] Installing 'C:/Ruby193/lib/ruby/site_ruby/devkit.rb'
</code></pre>

<h1 id="create-the-sensu-chef-virtual-machine">Create the sensu-chef virtual machine</h1>

<p>Run the following commands to create the sensu-chef virtual machine:</p>

<pre><code>cd sensu-chef/examples
gem install bundler
# On Windows, restart the command prompt before running 'bundle install' as
# gem install will reset the PATH
bundle install
librarian-chef install
vagrant up
</code></pre>

<p>If all goes well, the <code>chef-solo</code> run should have succeeded, and
you should be able to view the Sensu dashboard by going to the following URL
with the username <code>admin</code> and the password <code>secret</code>:
<a href="http://localhost:8080">http://localhost:8080</a></p>

<p><img src="http://misheska.com/images/sensudashboard.png" alt="Sensu Dashboard" /></p>

<p>If this is successful, just run the following command to log in to your
newly-created virtual machine instance:</p>

<pre><code>vagrant ssh
</code></pre>

<p>And refer to the <a href="https://github.com/sensu/sensu/wiki">Sensu wiki</a> on how 
to experiment with various configuration options.</p>

<p>When you are done playing with the test VM, run the following command to
destroy the VM:</p>

<pre><code>vagrant destroy
</code></pre>
]]></content>
  </entry>
  
</feed>
